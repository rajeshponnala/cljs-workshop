// Compiled by ClojureScript 0.0-2843 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string');
goog.require('goog.object');
goog.require('goog.array');
goog.require('goog.string.StringBuffer');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2843";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__4630__delegate = function (args){
return console.log.apply(console,(function (){var G__4629 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__4629) : cljs.core.into_array.call(null,G__4629));
})());
};
var G__4630 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__4631__i = 0, G__4631__a = new Array(arguments.length -  0);
while (G__4631__i < G__4631__a.length) {G__4631__a[G__4631__i] = arguments[G__4631__i + 0]; ++G__4631__i;}
  args = new cljs.core.IndexedSeq(G__4631__a,0);
} 
return G__4630__delegate.call(this,args);};
G__4630.cljs$lang$maxFixedArity = 0;
G__4630.cljs$lang$applyTo = (function (arglist__4632){
var args = cljs.core.seq(arglist__4632);
return G__4630__delegate(args);
});
G__4630.cljs$core$IFn$_invoke$arity$variadic = G__4630__delegate;
return G__4630;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__4634 = x;
return goog.isString(G__4634);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__4636 = x__$1;
return goog.typeOf(G__4636);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3115__auto__ = ty;
if(cljs.core.truth_(and__3115__auto__)){
return ty.cljs$lang$type;
} else {
return and__3115__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__4638 = obj;
return goog.typeOf(G__4638);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4423__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4423__auto__)){
var s = temp__4423__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__4640 = Symbol;
return goog.typeOf(G__4640);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4014__auto___4642 = len;
var i_4643 = (0);
while(true){
if((i_4643 < n__4014__auto___4642)){
(new_arr[i_4643] = (arr[i_4643]));

var G__4644 = (i_4643 + (1));
i_4643 = G__4644;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__4645 = (i + (1));
i = G__4645;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__4654__delegate = function (array,i,idxs){
var G__4651 = aget;
var G__4652 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__4653 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__4651,G__4652,G__4653) : cljs.core.apply.call(null,G__4651,G__4652,G__4653));
};
var G__4654 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__4655__i = 0, G__4655__a = new Array(arguments.length -  2);
while (G__4655__i < G__4655__a.length) {G__4655__a[G__4655__i] = arguments[G__4655__i + 2]; ++G__4655__i;}
  idxs = new cljs.core.IndexedSeq(G__4655__a,0);
} 
return G__4654__delegate.call(this,array,i,idxs);};
G__4654.cljs$lang$maxFixedArity = 2;
G__4654.cljs$lang$applyTo = (function (arglist__4656){
var array = cljs.core.first(arglist__4656);
arglist__4656 = cljs.core.next(arglist__4656);
var i = cljs.core.first(arglist__4656);
var idxs = cljs.core.rest(arglist__4656);
return G__4654__delegate(array,i,idxs);
});
G__4654.cljs$core$IFn$_invoke$arity$variadic = G__4654__delegate;
return G__4654;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__4657 = null;
if (arguments.length > 2) {
var G__4658__i = 0, G__4658__a = new Array(arguments.length -  2);
while (G__4658__i < G__4658__a.length) {G__4658__a[G__4658__i] = arguments[G__4658__i + 2]; ++G__4658__i;}
G__4657 = new cljs.core.IndexedSeq(G__4658__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__4657);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__4667__delegate = function (array,idx,idx2,idxv){
var G__4663 = aset;
var G__4664 = (array[idx]);
var G__4665 = idx2;
var G__4666 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__4663,G__4664,G__4665,G__4666) : cljs.core.apply.call(null,G__4663,G__4664,G__4665,G__4666));
};
var G__4667 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__4668__i = 0, G__4668__a = new Array(arguments.length -  3);
while (G__4668__i < G__4668__a.length) {G__4668__a[G__4668__i] = arguments[G__4668__i + 3]; ++G__4668__i;}
  idxv = new cljs.core.IndexedSeq(G__4668__a,0);
} 
return G__4667__delegate.call(this,array,idx,idx2,idxv);};
G__4667.cljs$lang$maxFixedArity = 3;
G__4667.cljs$lang$applyTo = (function (arglist__4669){
var array = cljs.core.first(arglist__4669);
arglist__4669 = cljs.core.next(arglist__4669);
var idx = cljs.core.first(arglist__4669);
arglist__4669 = cljs.core.next(arglist__4669);
var idx2 = cljs.core.first(arglist__4669);
var idxv = cljs.core.rest(arglist__4669);
return G__4667__delegate(array,idx,idx2,idxv);
});
G__4667.cljs$core$IFn$_invoke$arity$variadic = G__4667__delegate;
return G__4667;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__4670 = null;
if (arguments.length > 3) {
var G__4671__i = 0, G__4671__a = new Array(arguments.length -  3);
while (G__4671__i < G__4671__a.length) {G__4671__a[G__4671__i] = arguments[G__4671__i + 3]; ++G__4671__i;}
G__4670 = new cljs.core.IndexedSeq(G__4671__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__4670);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__4677 = (function (a,x){
a.push(x);

return a;
});
var G__4678 = [];
var G__4679 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__4677,G__4678,G__4679) : cljs.core.reduce.call(null,G__4677,G__4678,G__4679));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__4680__i = 0, G__4680__a = new Array(arguments.length -  2);
while (G__4680__i < G__4680__a.length) {G__4680__a[G__4680__i] = arguments[G__4680__i + 2]; ++G__4680__i;}
  args = new cljs.core.IndexedSeq(G__4680__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__4681){
var obj = cljs.core.first(arglist__4681);
arglist__4681 = cljs.core.next(arglist__4681);
var s = cljs.core.first(arglist__4681);
var args = cljs.core.rest(arglist__4681);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj4683 = {};
return obj4683;
})();


cljs.core.IFn = (function (){var obj4685 = {};
return obj4685;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4731 = x__3771__auto__;
return goog.typeOf(G__4731);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4733 = x__3771__auto__;
return goog.typeOf(G__4733);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4735 = x__3771__auto__;
return goog.typeOf(G__4735);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4737 = x__3771__auto__;
return goog.typeOf(G__4737);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4739 = x__3771__auto__;
return goog.typeOf(G__4739);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4741 = x__3771__auto__;
return goog.typeOf(G__4741);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4743 = x__3771__auto__;
return goog.typeOf(G__4743);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4745 = x__3771__auto__;
return goog.typeOf(G__4745);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4747 = x__3771__auto__;
return goog.typeOf(G__4747);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4749 = x__3771__auto__;
return goog.typeOf(G__4749);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4751 = x__3771__auto__;
return goog.typeOf(G__4751);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4753 = x__3771__auto__;
return goog.typeOf(G__4753);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4755 = x__3771__auto__;
return goog.typeOf(G__4755);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4757 = x__3771__auto__;
return goog.typeOf(G__4757);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4759 = x__3771__auto__;
return goog.typeOf(G__4759);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4761 = x__3771__auto__;
return goog.typeOf(G__4761);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4763 = x__3771__auto__;
return goog.typeOf(G__4763);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4765 = x__3771__auto__;
return goog.typeOf(G__4765);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4767 = x__3771__auto__;
return goog.typeOf(G__4767);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4769 = x__3771__auto__;
return goog.typeOf(G__4769);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4771 = x__3771__auto__;
return goog.typeOf(G__4771);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4773 = x__3771__auto__;
return goog.typeOf(G__4773);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj4775 = {};
return obj4775;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3115__auto__ = value;
if(and__3115__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3115__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__3771__auto__ = (((value == null))?null:value);
return (function (){var or__3127__auto__ = (cljs.core._clone[(function (){var G__4779 = x__3771__auto__;
return goog.typeOf(G__4779);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._clone["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj4781 = {};
return obj4781;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._count[(function (){var G__4785 = x__3771__auto__;
return goog.typeOf(G__4785);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._count["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj4787 = {};
return obj4787;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._empty[(function (){var G__4791 = x__3771__auto__;
return goog.typeOf(G__4791);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._empty["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj4793 = {};
return obj4793;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._conj[(function (){var G__4797 = x__3771__auto__;
return goog.typeOf(G__4797);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._conj["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj4799 = {};
return obj4799;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._nth[(function (){var G__4805 = x__3771__auto__;
return goog.typeOf(G__4805);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._nth["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._nth[(function (){var G__4807 = x__3771__auto__;
return goog.typeOf(G__4807);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._nth["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj4809 = {};
return obj4809;
})();


cljs.core.ISeq = (function (){var obj4811 = {};
return obj4811;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._first[(function (){var G__4815 = x__3771__auto__;
return goog.typeOf(G__4815);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._first["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._rest[(function (){var G__4819 = x__3771__auto__;
return goog.typeOf(G__4819);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._rest["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj4821 = {};
return obj4821;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._next[(function (){var G__4825 = x__3771__auto__;
return goog.typeOf(G__4825);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._next["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj4827 = {};
return obj4827;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3115__auto__ = o;
if(and__3115__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3115__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__3771__auto__ = (((o == null))?null:o);
return (function (){var or__3127__auto__ = (cljs.core._lookup[(function (){var G__4833 = x__3771__auto__;
return goog.typeOf(G__4833);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._lookup["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3115__auto__ = o;
if(and__3115__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3115__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__3771__auto__ = (((o == null))?null:o);
return (function (){var or__3127__auto__ = (cljs.core._lookup[(function (){var G__4835 = x__3771__auto__;
return goog.typeOf(G__4835);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._lookup["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj4837 = {};
return obj4837;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__4841 = x__3771__auto__;
return goog.typeOf(G__4841);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._assoc[(function (){var G__4845 = x__3771__auto__;
return goog.typeOf(G__4845);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._assoc["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj4847 = {};
return obj4847;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._dissoc[(function (){var G__4851 = x__3771__auto__;
return goog.typeOf(G__4851);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj4853 = {};
return obj4853;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._key[(function (){var G__4857 = x__3771__auto__;
return goog.typeOf(G__4857);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._key["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._val[(function (){var G__4861 = x__3771__auto__;
return goog.typeOf(G__4861);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._val["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj4863 = {};
return obj4863;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._disjoin[(function (){var G__4867 = x__3771__auto__;
return goog.typeOf(G__4867);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj4869 = {};
return obj4869;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._peek[(function (){var G__4873 = x__3771__auto__;
return goog.typeOf(G__4873);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._peek["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._pop[(function (){var G__4877 = x__3771__auto__;
return goog.typeOf(G__4877);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._pop["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj4879 = {};
return obj4879;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._assoc_n[(function (){var G__4883 = x__3771__auto__;
return goog.typeOf(G__4883);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj4885 = {};
return obj4885;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3115__auto__ = o;
if(and__3115__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3115__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__3771__auto__ = (((o == null))?null:o);
return (function (){var or__3127__auto__ = (cljs.core._deref[(function (){var G__4889 = x__3771__auto__;
return goog.typeOf(G__4889);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._deref["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj4891 = {};
return obj4891;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3115__auto__ = o;
if(and__3115__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3115__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__3771__auto__ = (((o == null))?null:o);
return (function (){var or__3127__auto__ = (cljs.core._deref_with_timeout[(function (){var G__4895 = x__3771__auto__;
return goog.typeOf(G__4895);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj4897 = {};
return obj4897;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3115__auto__ = o;
if(and__3115__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3115__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__3771__auto__ = (((o == null))?null:o);
return (function (){var or__3127__auto__ = (cljs.core._meta[(function (){var G__4901 = x__3771__auto__;
return goog.typeOf(G__4901);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._meta["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj4903 = {};
return obj4903;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3115__auto__ = o;
if(and__3115__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3115__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__3771__auto__ = (((o == null))?null:o);
return (function (){var or__3127__auto__ = (cljs.core._with_meta[(function (){var G__4907 = x__3771__auto__;
return goog.typeOf(G__4907);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj4909 = {};
return obj4909;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._reduce[(function (){var G__4915 = x__3771__auto__;
return goog.typeOf(G__4915);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._reduce["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._reduce[(function (){var G__4917 = x__3771__auto__;
return goog.typeOf(G__4917);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._reduce["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj4919 = {};
return obj4919;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._kv_reduce[(function (){var G__4923 = x__3771__auto__;
return goog.typeOf(G__4923);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj4925 = {};
return obj4925;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3115__auto__ = o;
if(and__3115__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3115__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__3771__auto__ = (((o == null))?null:o);
return (function (){var or__3127__auto__ = (cljs.core._equiv[(function (){var G__4929 = x__3771__auto__;
return goog.typeOf(G__4929);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._equiv["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj4931 = {};
return obj4931;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3115__auto__ = o;
if(and__3115__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3115__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__3771__auto__ = (((o == null))?null:o);
return (function (){var or__3127__auto__ = (cljs.core._hash[(function (){var G__4935 = x__3771__auto__;
return goog.typeOf(G__4935);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._hash["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj4937 = {};
return obj4937;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3115__auto__ = o;
if(and__3115__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3115__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__3771__auto__ = (((o == null))?null:o);
return (function (){var or__3127__auto__ = (cljs.core._seq[(function (){var G__4941 = x__3771__auto__;
return goog.typeOf(G__4941);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._seq["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj4943 = {};
return obj4943;
})();


cljs.core.IList = (function (){var obj4945 = {};
return obj4945;
})();


cljs.core.IRecord = (function (){var obj4947 = {};
return obj4947;
})();


cljs.core.IReversible = (function (){var obj4949 = {};
return obj4949;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._rseq[(function (){var G__4953 = x__3771__auto__;
return goog.typeOf(G__4953);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._rseq["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj4955 = {};
return obj4955;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._sorted_seq[(function (){var G__4959 = x__3771__auto__;
return goog.typeOf(G__4959);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._sorted_seq_from[(function (){var G__4963 = x__3771__auto__;
return goog.typeOf(G__4963);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._entry_key[(function (){var G__4967 = x__3771__auto__;
return goog.typeOf(G__4967);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._comparator[(function (){var G__4971 = x__3771__auto__;
return goog.typeOf(G__4971);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._comparator["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj4973 = {};
return obj4973;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3115__auto__ = writer;
if(and__3115__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3115__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__3771__auto__ = (((writer == null))?null:writer);
return (function (){var or__3127__auto__ = (cljs.core._write[(function (){var G__4977 = x__3771__auto__;
return goog.typeOf(G__4977);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._write["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3115__auto__ = writer;
if(and__3115__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3115__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__3771__auto__ = (((writer == null))?null:writer);
return (function (){var or__3127__auto__ = (cljs.core._flush[(function (){var G__4981 = x__3771__auto__;
return goog.typeOf(G__4981);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._flush["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj4983 = {};
return obj4983;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3115__auto__ = o;
if(and__3115__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3115__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__3771__auto__ = (((o == null))?null:o);
return (function (){var or__3127__auto__ = (cljs.core._pr_writer[(function (){var G__4987 = x__3771__auto__;
return goog.typeOf(G__4987);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj4989 = {};
return obj4989;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3115__auto__ = d;
if(and__3115__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3115__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__3771__auto__ = (((d == null))?null:d);
return (function (){var or__3127__auto__ = (cljs.core._realized_QMARK_[(function (){var G__4993 = x__3771__auto__;
return goog.typeOf(G__4993);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj4995 = {};
return obj4995;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._notify_watches[(function (){var G__4999 = x__3771__auto__;
return goog.typeOf(G__4999);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._add_watch[(function (){var G__5003 = x__3771__auto__;
return goog.typeOf(G__5003);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._remove_watch[(function (){var G__5007 = x__3771__auto__;
return goog.typeOf(G__5007);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj5009 = {};
return obj5009;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._as_transient[(function (){var G__5013 = x__3771__auto__;
return goog.typeOf(G__5013);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj5015 = {};
return obj5015;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3115__auto__ = tcoll;
if(and__3115__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3115__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__3771__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3127__auto__ = (cljs.core._conj_BANG_[(function (){var G__5019 = x__3771__auto__;
return goog.typeOf(G__5019);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3115__auto__ = tcoll;
if(and__3115__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3115__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__3771__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3127__auto__ = (cljs.core._persistent_BANG_[(function (){var G__5023 = x__3771__auto__;
return goog.typeOf(G__5023);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj5025 = {};
return obj5025;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3115__auto__ = tcoll;
if(and__3115__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3115__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__3771__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3127__auto__ = (cljs.core._assoc_BANG_[(function (){var G__5029 = x__3771__auto__;
return goog.typeOf(G__5029);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj5031 = {};
return obj5031;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3115__auto__ = tcoll;
if(and__3115__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3115__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__3771__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3127__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__5035 = x__3771__auto__;
return goog.typeOf(G__5035);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj5037 = {};
return obj5037;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3115__auto__ = tcoll;
if(and__3115__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3115__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__3771__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3127__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__5041 = x__3771__auto__;
return goog.typeOf(G__5041);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3115__auto__ = tcoll;
if(and__3115__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3115__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__3771__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3127__auto__ = (cljs.core._pop_BANG_[(function (){var G__5045 = x__3771__auto__;
return goog.typeOf(G__5045);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj5047 = {};
return obj5047;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3115__auto__ = tcoll;
if(and__3115__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3115__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__3771__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3127__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__5051 = x__3771__auto__;
return goog.typeOf(G__5051);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj5053 = {};
return obj5053;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3115__auto__ = x;
if(and__3115__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3115__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__3771__auto__ = (((x == null))?null:x);
return (function (){var or__3127__auto__ = (cljs.core._compare[(function (){var G__5057 = x__3771__auto__;
return goog.typeOf(G__5057);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._compare["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj5059 = {};
return obj5059;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._drop_first[(function (){var G__5063 = x__3771__auto__;
return goog.typeOf(G__5063);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj5065 = {};
return obj5065;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._chunked_first[(function (){var G__5069 = x__3771__auto__;
return goog.typeOf(G__5069);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._chunked_rest[(function (){var G__5073 = x__3771__auto__;
return goog.typeOf(G__5073);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj5075 = {};
return obj5075;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._chunked_next[(function (){var G__5079 = x__3771__auto__;
return goog.typeOf(G__5079);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj5081 = {};
return obj5081;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3115__auto__ = x;
if(and__3115__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3115__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__3771__auto__ = (((x == null))?null:x);
return (function (){var or__3127__auto__ = (cljs.core._name[(function (){var G__5085 = x__3771__auto__;
return goog.typeOf(G__5085);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._name["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3115__auto__ = x;
if(and__3115__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3115__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__3771__auto__ = (((x == null))?null:x);
return (function (){var or__3127__auto__ = (cljs.core._namespace[(function (){var G__5089 = x__3771__auto__;
return goog.typeOf(G__5089);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._namespace["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj5091 = {};
return obj5091;
})();


cljs.core.IReset = (function (){var obj5093 = {};
return obj5093;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3115__auto__ = o;
if(and__3115__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3115__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__3771__auto__ = (((o == null))?null:o);
return (function (){var or__3127__auto__ = (cljs.core._reset_BANG_[(function (){var G__5097 = x__3771__auto__;
return goog.typeOf(G__5097);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj5099 = {};
return obj5099;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3115__auto__ = o;
if(and__3115__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3115__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__3771__auto__ = (((o == null))?null:o);
return (function (){var or__3127__auto__ = (cljs.core._swap_BANG_[(function (){var G__5109 = x__3771__auto__;
return goog.typeOf(G__5109);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3115__auto__ = o;
if(and__3115__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3115__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__3771__auto__ = (((o == null))?null:o);
return (function (){var or__3127__auto__ = (cljs.core._swap_BANG_[(function (){var G__5111 = x__3771__auto__;
return goog.typeOf(G__5111);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3115__auto__ = o;
if(and__3115__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3115__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__3771__auto__ = (((o == null))?null:o);
return (function (){var or__3127__auto__ = (cljs.core._swap_BANG_[(function (){var G__5113 = x__3771__auto__;
return goog.typeOf(G__5113);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3115__auto__ = o;
if(and__3115__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3115__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__3771__auto__ = (((o == null))?null:o);
return (function (){var or__3127__auto__ = (cljs.core._swap_BANG_[(function (){var G__5115 = x__3771__auto__;
return goog.typeOf(G__5115);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj5117 = {};
return obj5117;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3115__auto__ = o;
if(and__3115__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3115__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__3771__auto__ = (((o == null))?null:o);
return (function (){var or__3127__auto__ = (cljs.core._vreset_BANG_[(function (){var G__5121 = x__3771__auto__;
return goog.typeOf(G__5121);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj5123 = {};
return obj5123;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._iterator[(function (){var G__5127 = x__3771__auto__;
return goog.typeOf(G__5127);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._iterator["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__5130 = (4294967295);
var G__5131 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__5130,G__5131) : Math.imul.call(null,G__5130,G__5131));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__5134 = a;
var G__5135 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__5134,G__5135) : Math.imul.call(null,G__5134,G__5135));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__5136 = (i + (2));
var G__5137 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__5136;
h1 = G__5137;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj5139 = {};
return obj5139;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__5140 = (i + (1));
var G__5141 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__5140;
hash = G__5141;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj5145 = {};
return obj5145;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__5148 = o;
if(G__5148){
var bit__3801__auto__ = (G__5148.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__3801__auto__) || (G__5148.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__5149 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__5149) : Math.floor.call(null,G__5149));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3115__auto__ = cljs.core.not(a.ns);
if(and__3115__auto__){
return b.ns;
} else {
return and__3115__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__5156 = a.ns;
var G__5157 = b.ns;
return goog.array.defaultCompare(G__5156,G__5157);
})();
if(((0) === nsc)){
var G__5158 = a.name;
var G__5159 = b.name;
return goog.array.defaultCompare(G__5158,G__5159);
} else {
return nsc;
}
}
} else {
var G__5160 = a.name;
var G__5161 = b.name;
return goog.array.defaultCompare(G__5160,G__5161);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.call = (function() {
var G__5163 = null;
var G__5163__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__5163__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__5163 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__5163__2.call(this,self__,coll);
case 3:
return G__5163__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__5163.cljs$core$IFn$_invoke$arity$2 = G__5163__2;
G__5163.cljs$core$IFn$_invoke$arity$3 = G__5163__3;
return G__5163;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args5162){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args5162)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__3548__auto__ = self__._hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 163841;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.call = (function() {
var G__5211 = null;
var G__5211__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__5211__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__5211__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__5211__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__5211__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__5211__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__5211__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__5211__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__5211__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__5211__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__5211__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__5211__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__5211__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__5211__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__5211__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__5211__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__5211__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__5211__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__5211__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__5211__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__5211__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__5211__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5167 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__5168 = a;
var G__5169 = b;
var G__5170 = c;
var G__5171 = d;
var G__5172 = e;
var G__5173 = f;
var G__5174 = g;
var G__5175 = h;
var G__5176 = i;
var G__5177 = j;
var G__5178 = k;
var G__5179 = l;
var G__5180 = m;
var G__5181 = n;
var G__5182 = o;
var G__5183 = p;
var G__5184 = q;
var G__5185 = r;
var G__5186 = s;
var G__5187 = t;
var G__5188 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__5167,G__5168,G__5169,G__5170,G__5171,G__5172,G__5173,G__5174,G__5175,G__5176,G__5177,G__5178,G__5179,G__5180,G__5181,G__5182,G__5183,G__5184,G__5185,G__5186,G__5187,G__5188) : cljs.core.apply.call(null,G__5167,G__5168,G__5169,G__5170,G__5171,G__5172,G__5173,G__5174,G__5175,G__5176,G__5177,G__5178,G__5179,G__5180,G__5181,G__5182,G__5183,G__5184,G__5185,G__5186,G__5187,G__5188));
});
G__5211 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__5211__1.call(this,self__);
case 2:
return G__5211__2.call(this,self__,a);
case 3:
return G__5211__3.call(this,self__,a,b);
case 4:
return G__5211__4.call(this,self__,a,b,c);
case 5:
return G__5211__5.call(this,self__,a,b,c,d);
case 6:
return G__5211__6.call(this,self__,a,b,c,d,e);
case 7:
return G__5211__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__5211__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__5211__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__5211__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__5211__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__5211__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__5211__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__5211__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__5211__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__5211__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__5211__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__5211__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__5211__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__5211__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__5211__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__5211__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__5211.cljs$core$IFn$_invoke$arity$1 = G__5211__1;
G__5211.cljs$core$IFn$_invoke$arity$2 = G__5211__2;
G__5211.cljs$core$IFn$_invoke$arity$3 = G__5211__3;
G__5211.cljs$core$IFn$_invoke$arity$4 = G__5211__4;
G__5211.cljs$core$IFn$_invoke$arity$5 = G__5211__5;
G__5211.cljs$core$IFn$_invoke$arity$6 = G__5211__6;
G__5211.cljs$core$IFn$_invoke$arity$7 = G__5211__7;
G__5211.cljs$core$IFn$_invoke$arity$8 = G__5211__8;
G__5211.cljs$core$IFn$_invoke$arity$9 = G__5211__9;
G__5211.cljs$core$IFn$_invoke$arity$10 = G__5211__10;
G__5211.cljs$core$IFn$_invoke$arity$11 = G__5211__11;
G__5211.cljs$core$IFn$_invoke$arity$12 = G__5211__12;
G__5211.cljs$core$IFn$_invoke$arity$13 = G__5211__13;
G__5211.cljs$core$IFn$_invoke$arity$14 = G__5211__14;
G__5211.cljs$core$IFn$_invoke$arity$15 = G__5211__15;
G__5211.cljs$core$IFn$_invoke$arity$16 = G__5211__16;
G__5211.cljs$core$IFn$_invoke$arity$17 = G__5211__17;
G__5211.cljs$core$IFn$_invoke$arity$18 = G__5211__18;
G__5211.cljs$core$IFn$_invoke$arity$19 = G__5211__19;
G__5211.cljs$core$IFn$_invoke$arity$20 = G__5211__20;
G__5211.cljs$core$IFn$_invoke$arity$21 = G__5211__21;
G__5211.cljs$core$IFn$_invoke$arity$22 = G__5211__22;
return G__5211;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args5166){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args5166)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__5189 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__5190 = a;
var G__5191 = b;
var G__5192 = c;
var G__5193 = d;
var G__5194 = e;
var G__5195 = f;
var G__5196 = g;
var G__5197 = h;
var G__5198 = i;
var G__5199 = j;
var G__5200 = k;
var G__5201 = l;
var G__5202 = m;
var G__5203 = n;
var G__5204 = o;
var G__5205 = p;
var G__5206 = q;
var G__5207 = r;
var G__5208 = s;
var G__5209 = t;
var G__5210 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__5189,G__5190,G__5191,G__5192,G__5193,G__5194,G__5195,G__5196,G__5197,G__5198,G__5199,G__5200,G__5201,G__5202,G__5203,G__5204,G__5205,G__5206,G__5207,G__5208,G__5209,G__5210) : cljs.core.apply.call(null,G__5189,G__5190,G__5191,G__5192,G__5193,G__5194,G__5195,G__5196,G__5197,G__5198,G__5199,G__5200,G__5201,G__5202,G__5203,G__5204,G__5205,G__5206,G__5207,G__5208,G__5209,G__5210));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__5213 = x;
if(G__5213){
var bit__3808__auto__ = null;
if(cljs.core.truth_((function (){var or__3127__auto__ = bit__3808__auto__;
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
return G__5213.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__5213.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__5213);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__5213);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__5215 = value;
if(G__5215){
var bit__3808__auto__ = (G__5215.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__3808__auto__) || (G__5215.cljs$core$ICloneable$)){
return true;
} else {
if((!G__5215.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__5215);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__5215);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__5217 = coll;
if(G__5217){
var bit__3801__auto__ = (G__5217.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__3801__auto__) || (G__5217.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__5219 = coll;
if(G__5219){
var bit__3801__auto__ = (G__5219.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__3801__auto__) || (G__5219.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__5221 = coll;
if(G__5221){
var bit__3801__auto__ = (G__5221.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__3801__auto__) || (G__5221.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__5223 = coll;
if(G__5223){
var bit__3801__auto__ = (G__5223.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__3801__auto__) || (G__5223.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__5228__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__5229 = y;
var G__5230 = cljs.core.first(more);
var G__5231 = cljs.core.next(more);
x = G__5229;
y = G__5230;
more = G__5231;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__5228 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__5232__i = 0, G__5232__a = new Array(arguments.length -  2);
while (G__5232__i < G__5232__a.length) {G__5232__a[G__5232__i] = arguments[G__5232__i + 2]; ++G__5232__i;}
  more = new cljs.core.IndexedSeq(G__5232__a,0);
} 
return G__5228__delegate.call(this,x,y,more);};
G__5228.cljs$lang$maxFixedArity = 2;
G__5228.cljs$lang$applyTo = (function (arglist__5233){
var x = cljs.core.first(arglist__5233);
arglist__5233 = cljs.core.next(arglist__5233);
var y = cljs.core.first(arglist__5233);
var more = cljs.core.rest(arglist__5233);
return G__5228__delegate(x,y,more);
});
G__5228.cljs$core$IFn$_invoke$arity$variadic = G__5228__delegate;
return G__5228;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__5234 = null;
if (arguments.length > 2) {
var G__5235__i = 0, G__5235__a = new Array(arguments.length -  2);
while (G__5235__i < G__5235__a.length) {G__5235__a[G__5235__i] = arguments[G__5235__i + 2]; ++G__5235__i;}
G__5234 = new cljs.core.IndexedSeq(G__5235__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__5234);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"value": x, "done": false};
} else {
return {"value": null, "done": true};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__5236 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__5236) : cljs.core.es6_iterator_seq.call(null,G__5236));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__5237 = (n + (1));
var G__5238 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__5239 = cljs.core.next(coll__$1);
n = G__5237;
hash_code = G__5238;
coll__$1 = G__5239;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__5240 = (n + (1));
var G__5241 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__5242 = cljs.core.next(coll__$1);
n = G__5240;
hash_code = G__5241;
coll__$1 = G__5242;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.Fn["function"] = true);

(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__5243 = o;
return goog.getUid(G__5243);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition0$ = 32768;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__5245 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5245) : cljs.core.deref.call(null,G__5245));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__5252 = val;
var G__5253 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5252,G__5253) : f.call(null,G__5252,G__5253));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5258 = nval;
var G__5259 = (n + (1));
val = G__5258;
n = G__5259;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__5254 = val__$1;
var G__5255 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5254,G__5255) : f.call(null,G__5254,G__5255));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5260 = nval;
var G__5261 = (n + (1));
val__$1 = G__5260;
n = G__5261;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__5256 = val__$1;
var G__5257 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5256,G__5257) : f.call(null,G__5256,G__5257));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5262 = nval;
var G__5263 = (n + (1));
val__$1 = G__5262;
n = G__5263;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__5270 = val;
var G__5271 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5270,G__5271) : f.call(null,G__5270,G__5271));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5276 = nval;
var G__5277 = (n + (1));
val = G__5276;
n = G__5277;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__5272 = val__$1;
var G__5273 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5272,G__5273) : f.call(null,G__5272,G__5273));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5278 = nval;
var G__5279 = (n + (1));
val__$1 = G__5278;
n = G__5279;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__5274 = val__$1;
var G__5275 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5274,G__5275) : f.call(null,G__5274,G__5275));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5280 = nval;
var G__5281 = (n + (1));
val__$1 = G__5280;
n = G__5281;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__5283 = x;
if(G__5283){
var bit__3808__auto__ = (G__5283.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__3808__auto__) || (G__5283.cljs$core$ICounted$)){
return true;
} else {
if((!G__5283.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__5283);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__5283);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__5285 = x;
if(G__5285){
var bit__3808__auto__ = (G__5285.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__3808__auto__) || (G__5285.cljs$core$IIndexed$)){
return true;
} else {
if((!G__5285.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__5285);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__5285);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__5286 = coll__$1;
var G__5287 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__5286,G__5287) : cljs.core.equiv_sequential.call(null,G__5286,G__5287));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__5288 = o;
var G__5289 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__5288,G__5289) : cljs.core.cons.call(null,G__5288,G__5289));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__5292 = coll__$1;
var G__5293 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__5292,G__5293) : cljs.core.equiv_sequential.call(null,G__5292,G__5293));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__5294 = cljs.core.List.EMPTY;
var G__5295 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__5294,G__5295) : cljs.core.with_meta.call(null,G__5294,G__5295));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__5296 = f;
var G__5297 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__5296,G__5297) : cljs.core.seq_reduce.call(null,G__5296,G__5297));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__5298 = f;
var G__5299 = start;
var G__5300 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__5298,G__5299,G__5300) : cljs.core.seq_reduce.call(null,G__5298,G__5299,G__5300));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__5301 = o;
var G__5302 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__5301,G__5302) : cljs.core.cons.call(null,G__5301,G__5302));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__5303 = sn;
s = G__5303;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__5308__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__5309 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__5310 = cljs.core.first(xs);
var G__5311 = cljs.core.next(xs);
coll = G__5309;
x = G__5310;
xs = G__5311;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__5308 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__5312__i = 0, G__5312__a = new Array(arguments.length -  2);
while (G__5312__i < G__5312__a.length) {G__5312__a[G__5312__i] = arguments[G__5312__i + 2]; ++G__5312__i;}
  xs = new cljs.core.IndexedSeq(G__5312__a,0);
} 
return G__5308__delegate.call(this,coll,x,xs);};
G__5308.cljs$lang$maxFixedArity = 2;
G__5308.cljs$lang$applyTo = (function (arglist__5313){
var coll = cljs.core.first(arglist__5313);
arglist__5313 = cljs.core.next(arglist__5313);
var x = cljs.core.first(arglist__5313);
var xs = cljs.core.rest(arglist__5313);
return G__5308__delegate(coll,x,xs);
});
G__5308.cljs$core$IFn$_invoke$arity$variadic = G__5308__delegate;
return G__5308;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__5314 = null;
if (arguments.length > 2) {
var G__5315__i = 0, G__5315__a = new Array(arguments.length -  2);
while (G__5315__i < G__5315__a.length) {G__5315__a[G__5315__i] = arguments[G__5315__i + 2]; ++G__5315__i;}
G__5314 = new cljs.core.IndexedSeq(G__5315__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__5314);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__5316 = cljs.core.next(s);
var G__5317 = (acc + (1));
s = G__5316;
acc = G__5317;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__5319 = coll;
if(G__5319){
var bit__3801__auto__ = (G__5319.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__3801__auto__) || (G__5319.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__5320 = cljs.core.next(coll);
var G__5321 = (n - (1));
coll = G__5320;
n = G__5321;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__5322 = cljs.core.next(coll);
var G__5323 = (n - (1));
var G__5324 = not_found;
coll = G__5322;
n = G__5323;
not_found = G__5324;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__5329 = coll;
if(G__5329){
var bit__3801__auto__ = (G__5329.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__3801__auto__) || (G__5329.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__5330 = coll;
if(G__5330){
var bit__3808__auto__ = (G__5330.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__3808__auto__) || (G__5330.cljs$core$ISeq$)){
return true;
} else {
if((!G__5330.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__5330);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__5330);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__5331 = coll;
if(G__5331){
var bit__3801__auto__ = (G__5331.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__3801__auto__) || (G__5331.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__5332 = coll;
if(G__5332){
var bit__3808__auto__ = (G__5332.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__3808__auto__) || (G__5332.cljs$core$ISeq$)){
return true;
} else {
if((!G__5332.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__5332);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__5332);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__5333 = (n__$1 - (1));
var G__5334 = cljs.core.rest(xs);
n__$1 = G__5333;
xs = G__5334;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__5337 = o;
if(G__5337){
var bit__3801__auto__ = (G__5337.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__3801__auto__) || (G__5337.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__5338 = o;
if(G__5338){
var bit__3801__auto__ = (G__5338.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__3801__auto__) || (G__5338.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__5342__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__5343 = ret;
var G__5344 = cljs.core.first(kvs);
var G__5345 = cljs.core.second(kvs);
var G__5346 = cljs.core.nnext(kvs);
coll = G__5343;
k = G__5344;
v = G__5345;
kvs = G__5346;
continue;
} else {
return ret;
}
break;
}
};
var G__5342 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__5347__i = 0, G__5347__a = new Array(arguments.length -  3);
while (G__5347__i < G__5347__a.length) {G__5347__a[G__5347__i] = arguments[G__5347__i + 3]; ++G__5347__i;}
  kvs = new cljs.core.IndexedSeq(G__5347__a,0);
} 
return G__5342__delegate.call(this,coll,k,v,kvs);};
G__5342.cljs$lang$maxFixedArity = 3;
G__5342.cljs$lang$applyTo = (function (arglist__5348){
var coll = cljs.core.first(arglist__5348);
arglist__5348 = cljs.core.next(arglist__5348);
var k = cljs.core.first(arglist__5348);
arglist__5348 = cljs.core.next(arglist__5348);
var v = cljs.core.first(arglist__5348);
var kvs = cljs.core.rest(arglist__5348);
return G__5342__delegate(coll,k,v,kvs);
});
G__5342.cljs$core$IFn$_invoke$arity$variadic = G__5342__delegate;
return G__5342;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__5349 = null;
if (arguments.length > 3) {
var G__5350__i = 0, G__5350__a = new Array(arguments.length -  3);
while (G__5350__i < G__5350__a.length) {G__5350__a[G__5350__i] = arguments[G__5350__i + 3]; ++G__5350__i;}
G__5349 = new cljs.core.IndexedSeq(G__5350__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__5349);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__5353__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__5354 = ret;
var G__5355 = cljs.core.first(ks);
var G__5356 = cljs.core.next(ks);
coll = G__5354;
k = G__5355;
ks = G__5356;
continue;
} else {
return ret;
}
}
break;
}
};
var G__5353 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__5357__i = 0, G__5357__a = new Array(arguments.length -  2);
while (G__5357__i < G__5357__a.length) {G__5357__a[G__5357__i] = arguments[G__5357__i + 2]; ++G__5357__i;}
  ks = new cljs.core.IndexedSeq(G__5357__a,0);
} 
return G__5353__delegate.call(this,coll,k,ks);};
G__5353.cljs$lang$maxFixedArity = 2;
G__5353.cljs$lang$applyTo = (function (arglist__5358){
var coll = cljs.core.first(arglist__5358);
arglist__5358 = cljs.core.next(arglist__5358);
var k = cljs.core.first(arglist__5358);
var ks = cljs.core.rest(arglist__5358);
return G__5353__delegate(coll,k,ks);
});
G__5353.cljs$core$IFn$_invoke$arity$variadic = G__5353__delegate;
return G__5353;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__5359 = null;
if (arguments.length > 2) {
var G__5360__i = 0, G__5360__a = new Array(arguments.length -  2);
while (G__5360__i < G__5360__a.length) {G__5360__a[G__5360__i] = arguments[G__5360__i + 2]; ++G__5360__i;}
G__5359 = new cljs.core.IndexedSeq(G__5360__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__5359);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3127__auto__ = (function (){var G__5365 = f;
return goog.isFunction(G__5365);
})();
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
var G__5366 = f;
if(G__5366){
var bit__3808__auto__ = null;
if(cljs.core.truth_((function (){var or__3127__auto____$1 = bit__3808__auto__;
if(cljs.core.truth_(or__3127__auto____$1)){
return or__3127__auto____$1;
} else {
return G__5366.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__5366.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__5366);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__5366);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 393217;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.call = (function() {
var G__5832 = null;
var G__5832__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__5832__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5368 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__5368) : self__.afn.call(null,G__5368));
});
var G__5832__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5369 = a;
var G__5370 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__5369,G__5370) : self__.afn.call(null,G__5369,G__5370));
});
var G__5832__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5371 = a;
var G__5372 = b;
var G__5373 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__5371,G__5372,G__5373) : self__.afn.call(null,G__5371,G__5372,G__5373));
});
var G__5832__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5374 = a;
var G__5375 = b;
var G__5376 = c;
var G__5377 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__5374,G__5375,G__5376,G__5377) : self__.afn.call(null,G__5374,G__5375,G__5376,G__5377));
});
var G__5832__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5378 = a;
var G__5379 = b;
var G__5380 = c;
var G__5381 = d;
var G__5382 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__5378,G__5379,G__5380,G__5381,G__5382) : self__.afn.call(null,G__5378,G__5379,G__5380,G__5381,G__5382));
});
var G__5832__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5383 = a;
var G__5384 = b;
var G__5385 = c;
var G__5386 = d;
var G__5387 = e;
var G__5388 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__5383,G__5384,G__5385,G__5386,G__5387,G__5388) : self__.afn.call(null,G__5383,G__5384,G__5385,G__5386,G__5387,G__5388));
});
var G__5832__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5389 = a;
var G__5390 = b;
var G__5391 = c;
var G__5392 = d;
var G__5393 = e;
var G__5394 = f;
var G__5395 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__5389,G__5390,G__5391,G__5392,G__5393,G__5394,G__5395) : self__.afn.call(null,G__5389,G__5390,G__5391,G__5392,G__5393,G__5394,G__5395));
});
var G__5832__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5396 = a;
var G__5397 = b;
var G__5398 = c;
var G__5399 = d;
var G__5400 = e;
var G__5401 = f;
var G__5402 = g;
var G__5403 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__5396,G__5397,G__5398,G__5399,G__5400,G__5401,G__5402,G__5403) : self__.afn.call(null,G__5396,G__5397,G__5398,G__5399,G__5400,G__5401,G__5402,G__5403));
});
var G__5832__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5404 = a;
var G__5405 = b;
var G__5406 = c;
var G__5407 = d;
var G__5408 = e;
var G__5409 = f;
var G__5410 = g;
var G__5411 = h;
var G__5412 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__5404,G__5405,G__5406,G__5407,G__5408,G__5409,G__5410,G__5411,G__5412) : self__.afn.call(null,G__5404,G__5405,G__5406,G__5407,G__5408,G__5409,G__5410,G__5411,G__5412));
});
var G__5832__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5413 = a;
var G__5414 = b;
var G__5415 = c;
var G__5416 = d;
var G__5417 = e;
var G__5418 = f;
var G__5419 = g;
var G__5420 = h;
var G__5421 = i;
var G__5422 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__5413,G__5414,G__5415,G__5416,G__5417,G__5418,G__5419,G__5420,G__5421,G__5422) : self__.afn.call(null,G__5413,G__5414,G__5415,G__5416,G__5417,G__5418,G__5419,G__5420,G__5421,G__5422));
});
var G__5832__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5423 = a;
var G__5424 = b;
var G__5425 = c;
var G__5426 = d;
var G__5427 = e;
var G__5428 = f;
var G__5429 = g;
var G__5430 = h;
var G__5431 = i;
var G__5432 = j;
var G__5433 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__5423,G__5424,G__5425,G__5426,G__5427,G__5428,G__5429,G__5430,G__5431,G__5432,G__5433) : self__.afn.call(null,G__5423,G__5424,G__5425,G__5426,G__5427,G__5428,G__5429,G__5430,G__5431,G__5432,G__5433));
});
var G__5832__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5434 = a;
var G__5435 = b;
var G__5436 = c;
var G__5437 = d;
var G__5438 = e;
var G__5439 = f;
var G__5440 = g;
var G__5441 = h;
var G__5442 = i;
var G__5443 = j;
var G__5444 = k;
var G__5445 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__5434,G__5435,G__5436,G__5437,G__5438,G__5439,G__5440,G__5441,G__5442,G__5443,G__5444,G__5445) : self__.afn.call(null,G__5434,G__5435,G__5436,G__5437,G__5438,G__5439,G__5440,G__5441,G__5442,G__5443,G__5444,G__5445));
});
var G__5832__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5446 = a;
var G__5447 = b;
var G__5448 = c;
var G__5449 = d;
var G__5450 = e;
var G__5451 = f;
var G__5452 = g;
var G__5453 = h;
var G__5454 = i;
var G__5455 = j;
var G__5456 = k;
var G__5457 = l;
var G__5458 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__5446,G__5447,G__5448,G__5449,G__5450,G__5451,G__5452,G__5453,G__5454,G__5455,G__5456,G__5457,G__5458) : self__.afn.call(null,G__5446,G__5447,G__5448,G__5449,G__5450,G__5451,G__5452,G__5453,G__5454,G__5455,G__5456,G__5457,G__5458));
});
var G__5832__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5459 = a;
var G__5460 = b;
var G__5461 = c;
var G__5462 = d;
var G__5463 = e;
var G__5464 = f;
var G__5465 = g;
var G__5466 = h;
var G__5467 = i;
var G__5468 = j;
var G__5469 = k;
var G__5470 = l;
var G__5471 = m;
var G__5472 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__5459,G__5460,G__5461,G__5462,G__5463,G__5464,G__5465,G__5466,G__5467,G__5468,G__5469,G__5470,G__5471,G__5472) : self__.afn.call(null,G__5459,G__5460,G__5461,G__5462,G__5463,G__5464,G__5465,G__5466,G__5467,G__5468,G__5469,G__5470,G__5471,G__5472));
});
var G__5832__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5473 = a;
var G__5474 = b;
var G__5475 = c;
var G__5476 = d;
var G__5477 = e;
var G__5478 = f;
var G__5479 = g;
var G__5480 = h;
var G__5481 = i;
var G__5482 = j;
var G__5483 = k;
var G__5484 = l;
var G__5485 = m;
var G__5486 = n;
var G__5487 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__5473,G__5474,G__5475,G__5476,G__5477,G__5478,G__5479,G__5480,G__5481,G__5482,G__5483,G__5484,G__5485,G__5486,G__5487) : self__.afn.call(null,G__5473,G__5474,G__5475,G__5476,G__5477,G__5478,G__5479,G__5480,G__5481,G__5482,G__5483,G__5484,G__5485,G__5486,G__5487));
});
var G__5832__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5488 = a;
var G__5489 = b;
var G__5490 = c;
var G__5491 = d;
var G__5492 = e;
var G__5493 = f;
var G__5494 = g;
var G__5495 = h;
var G__5496 = i;
var G__5497 = j;
var G__5498 = k;
var G__5499 = l;
var G__5500 = m;
var G__5501 = n;
var G__5502 = o;
var G__5503 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__5488,G__5489,G__5490,G__5491,G__5492,G__5493,G__5494,G__5495,G__5496,G__5497,G__5498,G__5499,G__5500,G__5501,G__5502,G__5503) : self__.afn.call(null,G__5488,G__5489,G__5490,G__5491,G__5492,G__5493,G__5494,G__5495,G__5496,G__5497,G__5498,G__5499,G__5500,G__5501,G__5502,G__5503));
});
var G__5832__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5504 = a;
var G__5505 = b;
var G__5506 = c;
var G__5507 = d;
var G__5508 = e;
var G__5509 = f;
var G__5510 = g;
var G__5511 = h;
var G__5512 = i;
var G__5513 = j;
var G__5514 = k;
var G__5515 = l;
var G__5516 = m;
var G__5517 = n;
var G__5518 = o;
var G__5519 = p;
var G__5520 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__5504,G__5505,G__5506,G__5507,G__5508,G__5509,G__5510,G__5511,G__5512,G__5513,G__5514,G__5515,G__5516,G__5517,G__5518,G__5519,G__5520) : self__.afn.call(null,G__5504,G__5505,G__5506,G__5507,G__5508,G__5509,G__5510,G__5511,G__5512,G__5513,G__5514,G__5515,G__5516,G__5517,G__5518,G__5519,G__5520));
});
var G__5832__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5521 = a;
var G__5522 = b;
var G__5523 = c;
var G__5524 = d;
var G__5525 = e;
var G__5526 = f;
var G__5527 = g;
var G__5528 = h;
var G__5529 = i;
var G__5530 = j;
var G__5531 = k;
var G__5532 = l;
var G__5533 = m;
var G__5534 = n;
var G__5535 = o;
var G__5536 = p;
var G__5537 = q;
var G__5538 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__5521,G__5522,G__5523,G__5524,G__5525,G__5526,G__5527,G__5528,G__5529,G__5530,G__5531,G__5532,G__5533,G__5534,G__5535,G__5536,G__5537,G__5538) : self__.afn.call(null,G__5521,G__5522,G__5523,G__5524,G__5525,G__5526,G__5527,G__5528,G__5529,G__5530,G__5531,G__5532,G__5533,G__5534,G__5535,G__5536,G__5537,G__5538));
});
var G__5832__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5539 = a;
var G__5540 = b;
var G__5541 = c;
var G__5542 = d;
var G__5543 = e;
var G__5544 = f;
var G__5545 = g;
var G__5546 = h;
var G__5547 = i;
var G__5548 = j;
var G__5549 = k;
var G__5550 = l;
var G__5551 = m;
var G__5552 = n;
var G__5553 = o;
var G__5554 = p;
var G__5555 = q;
var G__5556 = r;
var G__5557 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__5539,G__5540,G__5541,G__5542,G__5543,G__5544,G__5545,G__5546,G__5547,G__5548,G__5549,G__5550,G__5551,G__5552,G__5553,G__5554,G__5555,G__5556,G__5557) : self__.afn.call(null,G__5539,G__5540,G__5541,G__5542,G__5543,G__5544,G__5545,G__5546,G__5547,G__5548,G__5549,G__5550,G__5551,G__5552,G__5553,G__5554,G__5555,G__5556,G__5557));
});
var G__5832__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5558 = a;
var G__5559 = b;
var G__5560 = c;
var G__5561 = d;
var G__5562 = e;
var G__5563 = f;
var G__5564 = g;
var G__5565 = h;
var G__5566 = i;
var G__5567 = j;
var G__5568 = k;
var G__5569 = l;
var G__5570 = m;
var G__5571 = n;
var G__5572 = o;
var G__5573 = p;
var G__5574 = q;
var G__5575 = r;
var G__5576 = s;
var G__5577 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__5558,G__5559,G__5560,G__5561,G__5562,G__5563,G__5564,G__5565,G__5566,G__5567,G__5568,G__5569,G__5570,G__5571,G__5572,G__5573,G__5574,G__5575,G__5576,G__5577) : self__.afn.call(null,G__5558,G__5559,G__5560,G__5561,G__5562,G__5563,G__5564,G__5565,G__5566,G__5567,G__5568,G__5569,G__5570,G__5571,G__5572,G__5573,G__5574,G__5575,G__5576,G__5577));
});
var G__5832__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5578 = self__.afn;
var G__5579 = a;
var G__5580 = b;
var G__5581 = c;
var G__5582 = d;
var G__5583 = e;
var G__5584 = f;
var G__5585 = g;
var G__5586 = h;
var G__5587 = i;
var G__5588 = j;
var G__5589 = k;
var G__5590 = l;
var G__5591 = m;
var G__5592 = n;
var G__5593 = o;
var G__5594 = p;
var G__5595 = q;
var G__5596 = r;
var G__5597 = s;
var G__5598 = t;
var G__5599 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__5578,G__5579,G__5580,G__5581,G__5582,G__5583,G__5584,G__5585,G__5586,G__5587,G__5588,G__5589,G__5590,G__5591,G__5592,G__5593,G__5594,G__5595,G__5596,G__5597,G__5598,G__5599) : cljs.core.apply.call(null,G__5578,G__5579,G__5580,G__5581,G__5582,G__5583,G__5584,G__5585,G__5586,G__5587,G__5588,G__5589,G__5590,G__5591,G__5592,G__5593,G__5594,G__5595,G__5596,G__5597,G__5598,G__5599));
});
G__5832 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__5832__1.call(this,self__);
case 2:
return G__5832__2.call(this,self__,a);
case 3:
return G__5832__3.call(this,self__,a,b);
case 4:
return G__5832__4.call(this,self__,a,b,c);
case 5:
return G__5832__5.call(this,self__,a,b,c,d);
case 6:
return G__5832__6.call(this,self__,a,b,c,d,e);
case 7:
return G__5832__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__5832__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__5832__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__5832__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__5832__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__5832__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__5832__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__5832__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__5832__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__5832__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__5832__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__5832__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__5832__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__5832__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__5832__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__5832__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__5832.cljs$core$IFn$_invoke$arity$1 = G__5832__1;
G__5832.cljs$core$IFn$_invoke$arity$2 = G__5832__2;
G__5832.cljs$core$IFn$_invoke$arity$3 = G__5832__3;
G__5832.cljs$core$IFn$_invoke$arity$4 = G__5832__4;
G__5832.cljs$core$IFn$_invoke$arity$5 = G__5832__5;
G__5832.cljs$core$IFn$_invoke$arity$6 = G__5832__6;
G__5832.cljs$core$IFn$_invoke$arity$7 = G__5832__7;
G__5832.cljs$core$IFn$_invoke$arity$8 = G__5832__8;
G__5832.cljs$core$IFn$_invoke$arity$9 = G__5832__9;
G__5832.cljs$core$IFn$_invoke$arity$10 = G__5832__10;
G__5832.cljs$core$IFn$_invoke$arity$11 = G__5832__11;
G__5832.cljs$core$IFn$_invoke$arity$12 = G__5832__12;
G__5832.cljs$core$IFn$_invoke$arity$13 = G__5832__13;
G__5832.cljs$core$IFn$_invoke$arity$14 = G__5832__14;
G__5832.cljs$core$IFn$_invoke$arity$15 = G__5832__15;
G__5832.cljs$core$IFn$_invoke$arity$16 = G__5832__16;
G__5832.cljs$core$IFn$_invoke$arity$17 = G__5832__17;
G__5832.cljs$core$IFn$_invoke$arity$18 = G__5832__18;
G__5832.cljs$core$IFn$_invoke$arity$19 = G__5832__19;
G__5832.cljs$core$IFn$_invoke$arity$20 = G__5832__20;
G__5832.cljs$core$IFn$_invoke$arity$21 = G__5832__21;
G__5832.cljs$core$IFn$_invoke$arity$22 = G__5832__22;
return G__5832;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args5367){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args5367)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__5600 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__5600) : self__.afn.call(null,G__5600));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__5601 = a;
var G__5602 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__5601,G__5602) : self__.afn.call(null,G__5601,G__5602));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__5603 = a;
var G__5604 = b;
var G__5605 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__5603,G__5604,G__5605) : self__.afn.call(null,G__5603,G__5604,G__5605));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__5606 = a;
var G__5607 = b;
var G__5608 = c;
var G__5609 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__5606,G__5607,G__5608,G__5609) : self__.afn.call(null,G__5606,G__5607,G__5608,G__5609));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__5610 = a;
var G__5611 = b;
var G__5612 = c;
var G__5613 = d;
var G__5614 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__5610,G__5611,G__5612,G__5613,G__5614) : self__.afn.call(null,G__5610,G__5611,G__5612,G__5613,G__5614));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__5615 = a;
var G__5616 = b;
var G__5617 = c;
var G__5618 = d;
var G__5619 = e;
var G__5620 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__5615,G__5616,G__5617,G__5618,G__5619,G__5620) : self__.afn.call(null,G__5615,G__5616,G__5617,G__5618,G__5619,G__5620));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__5621 = a;
var G__5622 = b;
var G__5623 = c;
var G__5624 = d;
var G__5625 = e;
var G__5626 = f;
var G__5627 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__5621,G__5622,G__5623,G__5624,G__5625,G__5626,G__5627) : self__.afn.call(null,G__5621,G__5622,G__5623,G__5624,G__5625,G__5626,G__5627));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__5628 = a;
var G__5629 = b;
var G__5630 = c;
var G__5631 = d;
var G__5632 = e;
var G__5633 = f;
var G__5634 = g;
var G__5635 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__5628,G__5629,G__5630,G__5631,G__5632,G__5633,G__5634,G__5635) : self__.afn.call(null,G__5628,G__5629,G__5630,G__5631,G__5632,G__5633,G__5634,G__5635));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__5636 = a;
var G__5637 = b;
var G__5638 = c;
var G__5639 = d;
var G__5640 = e;
var G__5641 = f;
var G__5642 = g;
var G__5643 = h;
var G__5644 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__5636,G__5637,G__5638,G__5639,G__5640,G__5641,G__5642,G__5643,G__5644) : self__.afn.call(null,G__5636,G__5637,G__5638,G__5639,G__5640,G__5641,G__5642,G__5643,G__5644));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__5645 = a;
var G__5646 = b;
var G__5647 = c;
var G__5648 = d;
var G__5649 = e;
var G__5650 = f;
var G__5651 = g;
var G__5652 = h;
var G__5653 = i;
var G__5654 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__5645,G__5646,G__5647,G__5648,G__5649,G__5650,G__5651,G__5652,G__5653,G__5654) : self__.afn.call(null,G__5645,G__5646,G__5647,G__5648,G__5649,G__5650,G__5651,G__5652,G__5653,G__5654));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__5655 = a;
var G__5656 = b;
var G__5657 = c;
var G__5658 = d;
var G__5659 = e;
var G__5660 = f;
var G__5661 = g;
var G__5662 = h;
var G__5663 = i;
var G__5664 = j;
var G__5665 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__5655,G__5656,G__5657,G__5658,G__5659,G__5660,G__5661,G__5662,G__5663,G__5664,G__5665) : self__.afn.call(null,G__5655,G__5656,G__5657,G__5658,G__5659,G__5660,G__5661,G__5662,G__5663,G__5664,G__5665));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__5666 = a;
var G__5667 = b;
var G__5668 = c;
var G__5669 = d;
var G__5670 = e;
var G__5671 = f;
var G__5672 = g;
var G__5673 = h;
var G__5674 = i;
var G__5675 = j;
var G__5676 = k;
var G__5677 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__5666,G__5667,G__5668,G__5669,G__5670,G__5671,G__5672,G__5673,G__5674,G__5675,G__5676,G__5677) : self__.afn.call(null,G__5666,G__5667,G__5668,G__5669,G__5670,G__5671,G__5672,G__5673,G__5674,G__5675,G__5676,G__5677));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__5678 = a;
var G__5679 = b;
var G__5680 = c;
var G__5681 = d;
var G__5682 = e;
var G__5683 = f;
var G__5684 = g;
var G__5685 = h;
var G__5686 = i;
var G__5687 = j;
var G__5688 = k;
var G__5689 = l;
var G__5690 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__5678,G__5679,G__5680,G__5681,G__5682,G__5683,G__5684,G__5685,G__5686,G__5687,G__5688,G__5689,G__5690) : self__.afn.call(null,G__5678,G__5679,G__5680,G__5681,G__5682,G__5683,G__5684,G__5685,G__5686,G__5687,G__5688,G__5689,G__5690));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__5691 = a;
var G__5692 = b;
var G__5693 = c;
var G__5694 = d;
var G__5695 = e;
var G__5696 = f;
var G__5697 = g;
var G__5698 = h;
var G__5699 = i;
var G__5700 = j;
var G__5701 = k;
var G__5702 = l;
var G__5703 = m;
var G__5704 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__5691,G__5692,G__5693,G__5694,G__5695,G__5696,G__5697,G__5698,G__5699,G__5700,G__5701,G__5702,G__5703,G__5704) : self__.afn.call(null,G__5691,G__5692,G__5693,G__5694,G__5695,G__5696,G__5697,G__5698,G__5699,G__5700,G__5701,G__5702,G__5703,G__5704));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__5705 = a;
var G__5706 = b;
var G__5707 = c;
var G__5708 = d;
var G__5709 = e;
var G__5710 = f;
var G__5711 = g;
var G__5712 = h;
var G__5713 = i;
var G__5714 = j;
var G__5715 = k;
var G__5716 = l;
var G__5717 = m;
var G__5718 = n;
var G__5719 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__5705,G__5706,G__5707,G__5708,G__5709,G__5710,G__5711,G__5712,G__5713,G__5714,G__5715,G__5716,G__5717,G__5718,G__5719) : self__.afn.call(null,G__5705,G__5706,G__5707,G__5708,G__5709,G__5710,G__5711,G__5712,G__5713,G__5714,G__5715,G__5716,G__5717,G__5718,G__5719));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__5720 = a;
var G__5721 = b;
var G__5722 = c;
var G__5723 = d;
var G__5724 = e;
var G__5725 = f;
var G__5726 = g;
var G__5727 = h;
var G__5728 = i;
var G__5729 = j;
var G__5730 = k;
var G__5731 = l;
var G__5732 = m;
var G__5733 = n;
var G__5734 = o;
var G__5735 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__5720,G__5721,G__5722,G__5723,G__5724,G__5725,G__5726,G__5727,G__5728,G__5729,G__5730,G__5731,G__5732,G__5733,G__5734,G__5735) : self__.afn.call(null,G__5720,G__5721,G__5722,G__5723,G__5724,G__5725,G__5726,G__5727,G__5728,G__5729,G__5730,G__5731,G__5732,G__5733,G__5734,G__5735));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__5736 = a;
var G__5737 = b;
var G__5738 = c;
var G__5739 = d;
var G__5740 = e;
var G__5741 = f;
var G__5742 = g;
var G__5743 = h;
var G__5744 = i;
var G__5745 = j;
var G__5746 = k;
var G__5747 = l;
var G__5748 = m;
var G__5749 = n;
var G__5750 = o;
var G__5751 = p;
var G__5752 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__5736,G__5737,G__5738,G__5739,G__5740,G__5741,G__5742,G__5743,G__5744,G__5745,G__5746,G__5747,G__5748,G__5749,G__5750,G__5751,G__5752) : self__.afn.call(null,G__5736,G__5737,G__5738,G__5739,G__5740,G__5741,G__5742,G__5743,G__5744,G__5745,G__5746,G__5747,G__5748,G__5749,G__5750,G__5751,G__5752));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__5753 = a;
var G__5754 = b;
var G__5755 = c;
var G__5756 = d;
var G__5757 = e;
var G__5758 = f;
var G__5759 = g;
var G__5760 = h;
var G__5761 = i;
var G__5762 = j;
var G__5763 = k;
var G__5764 = l;
var G__5765 = m;
var G__5766 = n;
var G__5767 = o;
var G__5768 = p;
var G__5769 = q;
var G__5770 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__5753,G__5754,G__5755,G__5756,G__5757,G__5758,G__5759,G__5760,G__5761,G__5762,G__5763,G__5764,G__5765,G__5766,G__5767,G__5768,G__5769,G__5770) : self__.afn.call(null,G__5753,G__5754,G__5755,G__5756,G__5757,G__5758,G__5759,G__5760,G__5761,G__5762,G__5763,G__5764,G__5765,G__5766,G__5767,G__5768,G__5769,G__5770));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__5771 = a;
var G__5772 = b;
var G__5773 = c;
var G__5774 = d;
var G__5775 = e;
var G__5776 = f;
var G__5777 = g;
var G__5778 = h;
var G__5779 = i;
var G__5780 = j;
var G__5781 = k;
var G__5782 = l;
var G__5783 = m;
var G__5784 = n;
var G__5785 = o;
var G__5786 = p;
var G__5787 = q;
var G__5788 = r;
var G__5789 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__5771,G__5772,G__5773,G__5774,G__5775,G__5776,G__5777,G__5778,G__5779,G__5780,G__5781,G__5782,G__5783,G__5784,G__5785,G__5786,G__5787,G__5788,G__5789) : self__.afn.call(null,G__5771,G__5772,G__5773,G__5774,G__5775,G__5776,G__5777,G__5778,G__5779,G__5780,G__5781,G__5782,G__5783,G__5784,G__5785,G__5786,G__5787,G__5788,G__5789));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__5790 = a;
var G__5791 = b;
var G__5792 = c;
var G__5793 = d;
var G__5794 = e;
var G__5795 = f;
var G__5796 = g;
var G__5797 = h;
var G__5798 = i;
var G__5799 = j;
var G__5800 = k;
var G__5801 = l;
var G__5802 = m;
var G__5803 = n;
var G__5804 = o;
var G__5805 = p;
var G__5806 = q;
var G__5807 = r;
var G__5808 = s;
var G__5809 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__5790,G__5791,G__5792,G__5793,G__5794,G__5795,G__5796,G__5797,G__5798,G__5799,G__5800,G__5801,G__5802,G__5803,G__5804,G__5805,G__5806,G__5807,G__5808,G__5809) : self__.afn.call(null,G__5790,G__5791,G__5792,G__5793,G__5794,G__5795,G__5796,G__5797,G__5798,G__5799,G__5800,G__5801,G__5802,G__5803,G__5804,G__5805,G__5806,G__5807,G__5808,G__5809));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__5810 = self__.afn;
var G__5811 = a;
var G__5812 = b;
var G__5813 = c;
var G__5814 = d;
var G__5815 = e;
var G__5816 = f;
var G__5817 = g;
var G__5818 = h;
var G__5819 = i;
var G__5820 = j;
var G__5821 = k;
var G__5822 = l;
var G__5823 = m;
var G__5824 = n;
var G__5825 = o;
var G__5826 = p;
var G__5827 = q;
var G__5828 = r;
var G__5829 = s;
var G__5830 = t;
var G__5831 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__5810,G__5811,G__5812,G__5813,G__5814,G__5815,G__5816,G__5817,G__5818,G__5819,G__5820,G__5821,G__5822,G__5823,G__5824,G__5825,G__5826,G__5827,G__5828,G__5829,G__5830,G__5831) : cljs.core.apply.call(null,G__5810,G__5811,G__5812,G__5813,G__5814,G__5815,G__5816,G__5817,G__5818,G__5819,G__5820,G__5821,G__5822,G__5823,G__5824,G__5825,G__5826,G__5827,G__5828,G__5829,G__5830,G__5831));
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__5836 = o;
if(G__5836){
var bit__3808__auto__ = (G__5836.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__3808__auto__) || (G__5836.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__5836.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__5836);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__5836);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3115__auto__ = !((o == null));
if(and__3115__auto__){
var G__5840 = o;
if(G__5840){
var bit__3808__auto__ = (G__5840.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__3808__auto__) || (G__5840.cljs$core$IMeta$)){
return true;
} else {
if((!G__5840.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__5840);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__5840);
}
} else {
return and__3115__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__5843__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__5844 = ret;
var G__5845 = cljs.core.first(ks);
var G__5846 = cljs.core.next(ks);
coll = G__5844;
k = G__5845;
ks = G__5846;
continue;
} else {
return ret;
}
}
break;
}
};
var G__5843 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__5847__i = 0, G__5847__a = new Array(arguments.length -  2);
while (G__5847__i < G__5847__a.length) {G__5847__a[G__5847__i] = arguments[G__5847__i + 2]; ++G__5847__i;}
  ks = new cljs.core.IndexedSeq(G__5847__a,0);
} 
return G__5843__delegate.call(this,coll,k,ks);};
G__5843.cljs$lang$maxFixedArity = 2;
G__5843.cljs$lang$applyTo = (function (arglist__5848){
var coll = cljs.core.first(arglist__5848);
arglist__5848 = cljs.core.next(arglist__5848);
var k = cljs.core.first(arglist__5848);
var ks = cljs.core.rest(arglist__5848);
return G__5843__delegate(coll,k,ks);
});
G__5843.cljs$core$IFn$_invoke$arity$variadic = G__5843__delegate;
return G__5843;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__5849 = null;
if (arguments.length > 2) {
var G__5850__i = 0, G__5850__a = new Array(arguments.length -  2);
while (G__5850__i < G__5850__a.length) {G__5850__a[G__5850__i] = arguments[G__5850__i + 2]; ++G__5850__i;}
G__5849 = new cljs.core.IndexedSeq(G__5850__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__5849);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__5852 = x;
if(G__5852){
var bit__3808__auto__ = (G__5852.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__3808__auto__) || (G__5852.cljs$core$ICollection$)){
return true;
} else {
if((!G__5852.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__5852);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__5852);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__5854 = x;
if(G__5854){
var bit__3808__auto__ = (G__5854.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__3808__auto__) || (G__5854.cljs$core$ISet$)){
return true;
} else {
if((!G__5854.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__5854);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__5854);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__5856 = x;
if(G__5856){
var bit__3808__auto__ = (G__5856.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__3808__auto__) || (G__5856.cljs$core$IAssociative$)){
return true;
} else {
if((!G__5856.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__5856);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__5856);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__5858 = x;
if(G__5858){
var bit__3808__auto__ = (G__5858.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__3808__auto__) || (G__5858.cljs$core$ISequential$)){
return true;
} else {
if((!G__5858.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__5858);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__5858);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__5860 = x;
if(G__5860){
var bit__3808__auto__ = (G__5860.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__3808__auto__) || (G__5860.cljs$core$ISorted$)){
return true;
} else {
if((!G__5860.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__5860);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__5860);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__5862 = x;
if(G__5862){
var bit__3808__auto__ = (G__5862.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__3808__auto__) || (G__5862.cljs$core$IReduce$)){
return true;
} else {
if((!G__5862.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__5862);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__5862);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__5864 = x;
if(G__5864){
var bit__3808__auto__ = (G__5864.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__3808__auto__) || (G__5864.cljs$core$IMap$)){
return true;
} else {
if((!G__5864.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__5864);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__5864);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__5866 = x;
if(G__5866){
var bit__3808__auto__ = (G__5866.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__3808__auto__) || (G__5866.cljs$core$IVector$)){
return true;
} else {
if((!G__5866.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__5866);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__5866);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__5868 = x;
if(G__5868){
var bit__3801__auto__ = (G__5868.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__3801__auto__) || (G__5868.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj5874 = {};
return obj5874;
});
var js_obj__1 = (function() { 
var G__5877__delegate = function (keyvals){
var G__5875 = goog.object.create;
var G__5876 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__5875,G__5876) : cljs.core.apply.call(null,G__5875,G__5876));
};
var G__5877 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__5878__i = 0, G__5878__a = new Array(arguments.length -  0);
while (G__5878__i < G__5878__a.length) {G__5878__a[G__5878__i] = arguments[G__5878__i + 0]; ++G__5878__i;}
  keyvals = new cljs.core.IndexedSeq(G__5878__a,0);
} 
return G__5877__delegate.call(this,keyvals);};
G__5877.cljs$lang$maxFixedArity = 0;
G__5877.cljs$lang$applyTo = (function (arglist__5879){
var keyvals = cljs.core.seq(arglist__5879);
return G__5877__delegate(keyvals);
});
G__5877.cljs$core$IFn$_invoke$arity$variadic = G__5877__delegate;
return G__5877;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__5880 = null;
if (arguments.length > 0) {
var G__5881__i = 0, G__5881__a = new Array(arguments.length -  0);
while (G__5881__i < G__5881__a.length) {G__5881__a[G__5881__i] = arguments[G__5881__i + 0]; ++G__5881__i;}
G__5880 = new cljs.core.IndexedSeq(G__5881__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__5880);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__5884_5886 = obj;
var G__5885_5887 = ((function (G__5884_5886,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__5884_5886,keys))
;
goog.object.forEach(G__5884_5886,G__5885_5887);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__5888 = (i__$1 + (1));
var G__5889 = (j__$1 + (1));
var G__5890 = (len__$1 - (1));
i__$1 = G__5888;
j__$1 = G__5889;
len__$1 = G__5890;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__5891 = (i__$1 - (1));
var G__5892 = (j__$1 - (1));
var G__5893 = (len__$1 - (1));
i__$1 = G__5891;
j__$1 = G__5892;
len__$1 = G__5893;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj5895 = {};
return obj5895;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__5897 = s;
if(G__5897){
var bit__3808__auto__ = (G__5897.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__3808__auto__) || (G__5897.cljs$core$ISeq$)){
return true;
} else {
if((!G__5897.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__5897);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__5897);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__5899 = s;
if(G__5899){
var bit__3808__auto__ = (G__5899.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__3808__auto__) || (G__5899.cljs$core$ISeqable$)){
return true;
} else {
if((!G__5899.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__5899);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__5899);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3127__auto__ = cljs.core.fn_QMARK_(f);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var G__5903 = f;
if(G__5903){
var bit__3808__auto__ = (G__5903.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__3808__auto__) || (G__5903.cljs$core$IFn$)){
return true;
} else {
if((!G__5903.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__5903);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__5903);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__5916 = n;
return isNaN(G__5916);
})())) && (!((n === Infinity))) && (((function (){var G__5917 = n;
return parseFloat(G__5917);
})() === (function (){var G__5918 = n;
var G__5919 = (10);
return parseInt(G__5918,G__5919);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__5920__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__5921 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__5922 = etc;
s = G__5921;
xs = G__5922;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__5920 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__5923__i = 0, G__5923__a = new Array(arguments.length -  2);
while (G__5923__i < G__5923__a.length) {G__5923__a[G__5923__i] = arguments[G__5923__i + 2]; ++G__5923__i;}
  more = new cljs.core.IndexedSeq(G__5923__a,0);
} 
return G__5920__delegate.call(this,x,y,more);};
G__5920.cljs$lang$maxFixedArity = 2;
G__5920.cljs$lang$applyTo = (function (arglist__5924){
var x = cljs.core.first(arglist__5924);
arglist__5924 = cljs.core.next(arglist__5924);
var y = cljs.core.first(arglist__5924);
var more = cljs.core.rest(arglist__5924);
return G__5920__delegate(x,y,more);
});
G__5920.cljs$core$IFn$_invoke$arity$variadic = G__5920__delegate;
return G__5920;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__5925 = null;
if (arguments.length > 2) {
var G__5926__i = 0, G__5926__a = new Array(arguments.length -  2);
while (G__5926__i < G__5926__a.length) {G__5926__a[G__5926__i] = arguments[G__5926__i + 2]; ++G__5926__i;}
G__5925 = new cljs.core.IndexedSeq(G__5926__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__5925);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__5930 = x;
if(G__5930){
var bit__3801__auto__ = (G__5930.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__3801__auto__) || (G__5930.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__5931 = x;
var G__5932 = y;
return goog.array.defaultCompare(G__5931,G__5932);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__5937 = xs;
var G__5938 = ys;
var G__5939 = len;
var G__5940 = (n + (1));
xs = G__5937;
ys = G__5938;
len = G__5939;
n = G__5940;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__5945 = x;
var G__5946 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5945,G__5946) : f.call(null,G__5945,G__5946));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__5947 = y;
var G__5948 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5947,G__5948) : f.call(null,G__5947,G__5948));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__5954 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__5954) : cljs.core.to_array.call(null,G__5954));
})();
var G__5955_5957 = a;
var G__5956_5958 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__5955_5957,G__5956_5958);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__5964 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__5964) : keyfn.call(null,G__5964));
})(),(function (){var G__5965 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__5965) : keyfn.call(null,G__5965));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4423__auto__ = cljs.core.seq(coll);
if(temp__4423__auto__){
var s = temp__4423__auto__;
var G__5971 = f;
var G__5972 = cljs.core.first(s);
var G__5973 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__5971,G__5972,G__5973) : cljs.core.reduce.call(null,G__5971,G__5972,G__5973));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__5974 = val__$1;
var G__5975 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5974,G__5975) : f.call(null,G__5974,G__5975));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5976 = nval;
var G__5977 = cljs.core.next(coll__$1);
val__$1 = G__5976;
coll__$1 = G__5977;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__5981 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__5981) : cljs.core.to_array.call(null,G__5981));
})();
var G__5982_5984 = a;
goog.array.shuffle(G__5982_5984);

var G__5983 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__5983) : cljs.core.vec.call(null,G__5983));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__5987 = coll;
if(G__5987){
var bit__3801__auto__ = (G__5987.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__3801__auto__) || (G__5987.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__5988 = coll;
if(G__5988){
var bit__3801__auto__ = (G__5988.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__3801__auto__) || (G__5988.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__5997 = null;
var G__5997__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__5997__1 = (function (x){
var G__5994 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__5994) : cf.call(null,G__5994));
});
var G__5997__2 = (function (x,y){
var G__5995 = x;
var G__5996 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5995,G__5996) : f.call(null,G__5995,G__5996));
});
G__5997 = function(x,y){
switch(arguments.length){
case 0:
return G__5997__0.call(this);
case 1:
return G__5997__1.call(this,x);
case 2:
return G__5997__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__5997.cljs$core$IFn$_invoke$arity$0 = G__5997__0;
G__5997.cljs$core$IFn$_invoke$arity$1 = G__5997__1;
G__5997.cljs$core$IFn$_invoke$arity$2 = G__5997__2;
return G__5997;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__6004 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__6004) : xform.call(null,G__6004));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__6005 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__6005) : f__$1.call(null,G__6005));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__6006__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__6006 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6007__i = 0, G__6007__a = new Array(arguments.length -  2);
while (G__6007__i < G__6007__a.length) {G__6007__a[G__6007__i] = arguments[G__6007__i + 2]; ++G__6007__i;}
  more = new cljs.core.IndexedSeq(G__6007__a,0);
} 
return G__6006__delegate.call(this,x,y,more);};
G__6006.cljs$lang$maxFixedArity = 2;
G__6006.cljs$lang$applyTo = (function (arglist__6008){
var x = cljs.core.first(arglist__6008);
arglist__6008 = cljs.core.next(arglist__6008);
var y = cljs.core.first(arglist__6008);
var more = cljs.core.rest(arglist__6008);
return G__6006__delegate(x,y,more);
});
G__6006.cljs$core$IFn$_invoke$arity$variadic = G__6006__delegate;
return G__6006;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__6009 = null;
if (arguments.length > 2) {
var G__6010__i = 0, G__6010__a = new Array(arguments.length -  2);
while (G__6010__i < G__6010__a.length) {G__6010__a[G__6010__i] = arguments[G__6010__i + 2]; ++G__6010__i;}
G__6009 = new cljs.core.IndexedSeq(G__6010__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6009);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__6011__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__6011 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6012__i = 0, G__6012__a = new Array(arguments.length -  2);
while (G__6012__i < G__6012__a.length) {G__6012__a[G__6012__i] = arguments[G__6012__i + 2]; ++G__6012__i;}
  more = new cljs.core.IndexedSeq(G__6012__a,0);
} 
return G__6011__delegate.call(this,x,y,more);};
G__6011.cljs$lang$maxFixedArity = 2;
G__6011.cljs$lang$applyTo = (function (arglist__6013){
var x = cljs.core.first(arglist__6013);
arglist__6013 = cljs.core.next(arglist__6013);
var y = cljs.core.first(arglist__6013);
var more = cljs.core.rest(arglist__6013);
return G__6011__delegate(x,y,more);
});
G__6011.cljs$core$IFn$_invoke$arity$variadic = G__6011__delegate;
return G__6011;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__6014 = null;
if (arguments.length > 2) {
var G__6015__i = 0, G__6015__a = new Array(arguments.length -  2);
while (G__6015__i < G__6015__a.length) {G__6015__a[G__6015__i] = arguments[G__6015__i + 2]; ++G__6015__i;}
G__6014 = new cljs.core.IndexedSeq(G__6015__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6014);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__6016__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__6016 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6017__i = 0, G__6017__a = new Array(arguments.length -  2);
while (G__6017__i < G__6017__a.length) {G__6017__a[G__6017__i] = arguments[G__6017__i + 2]; ++G__6017__i;}
  more = new cljs.core.IndexedSeq(G__6017__a,0);
} 
return G__6016__delegate.call(this,x,y,more);};
G__6016.cljs$lang$maxFixedArity = 2;
G__6016.cljs$lang$applyTo = (function (arglist__6018){
var x = cljs.core.first(arglist__6018);
arglist__6018 = cljs.core.next(arglist__6018);
var y = cljs.core.first(arglist__6018);
var more = cljs.core.rest(arglist__6018);
return G__6016__delegate(x,y,more);
});
G__6016.cljs$core$IFn$_invoke$arity$variadic = G__6016__delegate;
return G__6016;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__6019 = null;
if (arguments.length > 2) {
var G__6020__i = 0, G__6020__a = new Array(arguments.length -  2);
while (G__6020__i < G__6020__a.length) {G__6020__a[G__6020__i] = arguments[G__6020__i + 2]; ++G__6020__i;}
G__6019 = new cljs.core.IndexedSeq(G__6020__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6019);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__6025__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__6025 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6026__i = 0, G__6026__a = new Array(arguments.length -  2);
while (G__6026__i < G__6026__a.length) {G__6026__a[G__6026__i] = arguments[G__6026__i + 2]; ++G__6026__i;}
  more = new cljs.core.IndexedSeq(G__6026__a,0);
} 
return G__6025__delegate.call(this,x,y,more);};
G__6025.cljs$lang$maxFixedArity = 2;
G__6025.cljs$lang$applyTo = (function (arglist__6027){
var x = cljs.core.first(arglist__6027);
arglist__6027 = cljs.core.next(arglist__6027);
var y = cljs.core.first(arglist__6027);
var more = cljs.core.rest(arglist__6027);
return G__6025__delegate(x,y,more);
});
G__6025.cljs$core$IFn$_invoke$arity$variadic = G__6025__delegate;
return G__6025;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__6028 = null;
if (arguments.length > 2) {
var G__6029__i = 0, G__6029__a = new Array(arguments.length -  2);
while (G__6029__i < G__6029__a.length) {G__6029__a[G__6029__i] = arguments[G__6029__i + 2]; ++G__6029__i;}
G__6028 = new cljs.core.IndexedSeq(G__6029__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6028);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__6030__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__6031 = y;
var G__6032 = cljs.core.first(more);
var G__6033 = cljs.core.next(more);
x = G__6031;
y = G__6032;
more = G__6033;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6030 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6034__i = 0, G__6034__a = new Array(arguments.length -  2);
while (G__6034__i < G__6034__a.length) {G__6034__a[G__6034__i] = arguments[G__6034__i + 2]; ++G__6034__i;}
  more = new cljs.core.IndexedSeq(G__6034__a,0);
} 
return G__6030__delegate.call(this,x,y,more);};
G__6030.cljs$lang$maxFixedArity = 2;
G__6030.cljs$lang$applyTo = (function (arglist__6035){
var x = cljs.core.first(arglist__6035);
arglist__6035 = cljs.core.next(arglist__6035);
var y = cljs.core.first(arglist__6035);
var more = cljs.core.rest(arglist__6035);
return G__6030__delegate(x,y,more);
});
G__6030.cljs$core$IFn$_invoke$arity$variadic = G__6030__delegate;
return G__6030;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__6036 = null;
if (arguments.length > 2) {
var G__6037__i = 0, G__6037__a = new Array(arguments.length -  2);
while (G__6037__i < G__6037__a.length) {G__6037__a[G__6037__i] = arguments[G__6037__i + 2]; ++G__6037__i;}
G__6036 = new cljs.core.IndexedSeq(G__6037__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6036);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__6038__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__6039 = y;
var G__6040 = cljs.core.first(more);
var G__6041 = cljs.core.next(more);
x = G__6039;
y = G__6040;
more = G__6041;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6038 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6042__i = 0, G__6042__a = new Array(arguments.length -  2);
while (G__6042__i < G__6042__a.length) {G__6042__a[G__6042__i] = arguments[G__6042__i + 2]; ++G__6042__i;}
  more = new cljs.core.IndexedSeq(G__6042__a,0);
} 
return G__6038__delegate.call(this,x,y,more);};
G__6038.cljs$lang$maxFixedArity = 2;
G__6038.cljs$lang$applyTo = (function (arglist__6043){
var x = cljs.core.first(arglist__6043);
arglist__6043 = cljs.core.next(arglist__6043);
var y = cljs.core.first(arglist__6043);
var more = cljs.core.rest(arglist__6043);
return G__6038__delegate(x,y,more);
});
G__6038.cljs$core$IFn$_invoke$arity$variadic = G__6038__delegate;
return G__6038;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__6044 = null;
if (arguments.length > 2) {
var G__6045__i = 0, G__6045__a = new Array(arguments.length -  2);
while (G__6045__i < G__6045__a.length) {G__6045__a[G__6045__i] = arguments[G__6045__i + 2]; ++G__6045__i;}
G__6044 = new cljs.core.IndexedSeq(G__6045__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6044);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__6046__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__6047 = y;
var G__6048 = cljs.core.first(more);
var G__6049 = cljs.core.next(more);
x = G__6047;
y = G__6048;
more = G__6049;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6046 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6050__i = 0, G__6050__a = new Array(arguments.length -  2);
while (G__6050__i < G__6050__a.length) {G__6050__a[G__6050__i] = arguments[G__6050__i + 2]; ++G__6050__i;}
  more = new cljs.core.IndexedSeq(G__6050__a,0);
} 
return G__6046__delegate.call(this,x,y,more);};
G__6046.cljs$lang$maxFixedArity = 2;
G__6046.cljs$lang$applyTo = (function (arglist__6051){
var x = cljs.core.first(arglist__6051);
arglist__6051 = cljs.core.next(arglist__6051);
var y = cljs.core.first(arglist__6051);
var more = cljs.core.rest(arglist__6051);
return G__6046__delegate(x,y,more);
});
G__6046.cljs$core$IFn$_invoke$arity$variadic = G__6046__delegate;
return G__6046;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__6052 = null;
if (arguments.length > 2) {
var G__6053__i = 0, G__6053__a = new Array(arguments.length -  2);
while (G__6053__i < G__6053__a.length) {G__6053__a[G__6053__i] = arguments[G__6053__i + 2]; ++G__6053__i;}
G__6052 = new cljs.core.IndexedSeq(G__6053__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6052);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__6054__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__6055 = y;
var G__6056 = cljs.core.first(more);
var G__6057 = cljs.core.next(more);
x = G__6055;
y = G__6056;
more = G__6057;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6054 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6058__i = 0, G__6058__a = new Array(arguments.length -  2);
while (G__6058__i < G__6058__a.length) {G__6058__a[G__6058__i] = arguments[G__6058__i + 2]; ++G__6058__i;}
  more = new cljs.core.IndexedSeq(G__6058__a,0);
} 
return G__6054__delegate.call(this,x,y,more);};
G__6054.cljs$lang$maxFixedArity = 2;
G__6054.cljs$lang$applyTo = (function (arglist__6059){
var x = cljs.core.first(arglist__6059);
arglist__6059 = cljs.core.next(arglist__6059);
var y = cljs.core.first(arglist__6059);
var more = cljs.core.rest(arglist__6059);
return G__6054__delegate(x,y,more);
});
G__6054.cljs$core$IFn$_invoke$arity$variadic = G__6054__delegate;
return G__6054;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__6060 = null;
if (arguments.length > 2) {
var G__6061__i = 0, G__6061__a = new Array(arguments.length -  2);
while (G__6061__i < G__6061__a.length) {G__6061__a[G__6061__i] = arguments[G__6061__i + 2]; ++G__6061__i;}
G__6060 = new cljs.core.IndexedSeq(G__6061__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6060);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__3444__auto__ = x;
var y__3445__auto__ = y;
return ((x__3444__auto__ > y__3445__auto__) ? x__3444__auto__ : y__3445__auto__);
});
var max__3 = (function() { 
var G__6062__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__3444__auto__ = x;
var y__3445__auto__ = y;
return ((x__3444__auto__ > y__3445__auto__) ? x__3444__auto__ : y__3445__auto__);
})(),more);
};
var G__6062 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6063__i = 0, G__6063__a = new Array(arguments.length -  2);
while (G__6063__i < G__6063__a.length) {G__6063__a[G__6063__i] = arguments[G__6063__i + 2]; ++G__6063__i;}
  more = new cljs.core.IndexedSeq(G__6063__a,0);
} 
return G__6062__delegate.call(this,x,y,more);};
G__6062.cljs$lang$maxFixedArity = 2;
G__6062.cljs$lang$applyTo = (function (arglist__6064){
var x = cljs.core.first(arglist__6064);
arglist__6064 = cljs.core.next(arglist__6064);
var y = cljs.core.first(arglist__6064);
var more = cljs.core.rest(arglist__6064);
return G__6062__delegate(x,y,more);
});
G__6062.cljs$core$IFn$_invoke$arity$variadic = G__6062__delegate;
return G__6062;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__6065 = null;
if (arguments.length > 2) {
var G__6066__i = 0, G__6066__a = new Array(arguments.length -  2);
while (G__6066__i < G__6066__a.length) {G__6066__a[G__6066__i] = arguments[G__6066__i + 2]; ++G__6066__i;}
G__6065 = new cljs.core.IndexedSeq(G__6066__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6065);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__3451__auto__ = x;
var y__3452__auto__ = y;
return ((x__3451__auto__ < y__3452__auto__) ? x__3451__auto__ : y__3452__auto__);
});
var min__3 = (function() { 
var G__6067__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__3451__auto__ = x;
var y__3452__auto__ = y;
return ((x__3451__auto__ < y__3452__auto__) ? x__3451__auto__ : y__3452__auto__);
})(),more);
};
var G__6067 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6068__i = 0, G__6068__a = new Array(arguments.length -  2);
while (G__6068__i < G__6068__a.length) {G__6068__a[G__6068__i] = arguments[G__6068__i + 2]; ++G__6068__i;}
  more = new cljs.core.IndexedSeq(G__6068__a,0);
} 
return G__6067__delegate.call(this,x,y,more);};
G__6067.cljs$lang$maxFixedArity = 2;
G__6067.cljs$lang$applyTo = (function (arglist__6069){
var x = cljs.core.first(arglist__6069);
arglist__6069 = cljs.core.next(arglist__6069);
var y = cljs.core.first(arglist__6069);
var more = cljs.core.rest(arglist__6069);
return G__6067__delegate(x,y,more);
});
G__6067.cljs$core$IFn$_invoke$arity$variadic = G__6067__delegate;
return G__6067;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__6070 = null;
if (arguments.length > 2) {
var G__6071__i = 0, G__6071__a = new Array(arguments.length -  2);
while (G__6071__i < G__6071__a.length) {G__6071__a[G__6071__i] = arguments[G__6071__i + 2]; ++G__6071__i;}
G__6070 = new cljs.core.IndexedSeq(G__6071__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6070);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__6072__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__6072 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6073__i = 0, G__6073__a = new Array(arguments.length -  2);
while (G__6073__i < G__6073__a.length) {G__6073__a[G__6073__i] = arguments[G__6073__i + 2]; ++G__6073__i;}
  more = new cljs.core.IndexedSeq(G__6073__a,0);
} 
return G__6072__delegate.call(this,x,y,more);};
G__6072.cljs$lang$maxFixedArity = 2;
G__6072.cljs$lang$applyTo = (function (arglist__6074){
var x = cljs.core.first(arglist__6074);
arglist__6074 = cljs.core.next(arglist__6074);
var y = cljs.core.first(arglist__6074);
var more = cljs.core.rest(arglist__6074);
return G__6072__delegate(x,y,more);
});
G__6072.cljs$core$IFn$_invoke$arity$variadic = G__6072__delegate;
return G__6072;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__6075 = null;
if (arguments.length > 2) {
var G__6076__i = 0, G__6076__a = new Array(arguments.length -  2);
while (G__6076__i < G__6076__a.length) {G__6076__a[G__6076__i] = arguments[G__6076__i + 2]; ++G__6076__i;}
G__6075 = new cljs.core.IndexedSeq(G__6076__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6075);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__6077__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__6077 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6078__i = 0, G__6078__a = new Array(arguments.length -  2);
while (G__6078__i < G__6078__a.length) {G__6078__a[G__6078__i] = arguments[G__6078__i + 2]; ++G__6078__i;}
  more = new cljs.core.IndexedSeq(G__6078__a,0);
} 
return G__6077__delegate.call(this,x,y,more);};
G__6077.cljs$lang$maxFixedArity = 2;
G__6077.cljs$lang$applyTo = (function (arglist__6079){
var x = cljs.core.first(arglist__6079);
arglist__6079 = cljs.core.next(arglist__6079);
var y = cljs.core.first(arglist__6079);
var more = cljs.core.rest(arglist__6079);
return G__6077__delegate(x,y,more);
});
G__6077.cljs$core$IFn$_invoke$arity$variadic = G__6077__delegate;
return G__6077;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__6080 = null;
if (arguments.length > 2) {
var G__6081__i = 0, G__6081__a = new Array(arguments.length -  2);
while (G__6081__i < G__6081__a.length) {G__6081__a[G__6081__i] = arguments[G__6081__i + 2]; ++G__6081__i;}
G__6080 = new cljs.core.IndexedSeq(G__6081__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6080);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__6086__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__6086 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6087__i = 0, G__6087__a = new Array(arguments.length -  2);
while (G__6087__i < G__6087__a.length) {G__6087__a[G__6087__i] = arguments[G__6087__i + 2]; ++G__6087__i;}
  more = new cljs.core.IndexedSeq(G__6087__a,0);
} 
return G__6086__delegate.call(this,x,y,more);};
G__6086.cljs$lang$maxFixedArity = 2;
G__6086.cljs$lang$applyTo = (function (arglist__6088){
var x = cljs.core.first(arglist__6088);
arglist__6088 = cljs.core.next(arglist__6088);
var y = cljs.core.first(arglist__6088);
var more = cljs.core.rest(arglist__6088);
return G__6086__delegate(x,y,more);
});
G__6086.cljs$core$IFn$_invoke$arity$variadic = G__6086__delegate;
return G__6086;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__6089 = null;
if (arguments.length > 2) {
var G__6090__i = 0, G__6090__a = new Array(arguments.length -  2);
while (G__6090__i < G__6090__a.length) {G__6090__a[G__6090__i] = arguments[G__6090__i + 2]; ++G__6090__i;}
G__6089 = new cljs.core.IndexedSeq(G__6090__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6089);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__6091__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__6091 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6092__i = 0, G__6092__a = new Array(arguments.length -  2);
while (G__6092__i < G__6092__a.length) {G__6092__a[G__6092__i] = arguments[G__6092__i + 2]; ++G__6092__i;}
  more = new cljs.core.IndexedSeq(G__6092__a,0);
} 
return G__6091__delegate.call(this,x,y,more);};
G__6091.cljs$lang$maxFixedArity = 2;
G__6091.cljs$lang$applyTo = (function (arglist__6093){
var x = cljs.core.first(arglist__6093);
arglist__6093 = cljs.core.next(arglist__6093);
var y = cljs.core.first(arglist__6093);
var more = cljs.core.rest(arglist__6093);
return G__6091__delegate(x,y,more);
});
G__6091.cljs$core$IFn$_invoke$arity$variadic = G__6091__delegate;
return G__6091;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__6094 = null;
if (arguments.length > 2) {
var G__6095__i = 0, G__6095__a = new Array(arguments.length -  2);
while (G__6095__i < G__6095__a.length) {G__6095__a[G__6095__i] = arguments[G__6095__i + 2]; ++G__6095__i;}
G__6094 = new cljs.core.IndexedSeq(G__6095__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6094);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__6096__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__6096 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6097__i = 0, G__6097__a = new Array(arguments.length -  2);
while (G__6097__i < G__6097__a.length) {G__6097__a[G__6097__i] = arguments[G__6097__i + 2]; ++G__6097__i;}
  more = new cljs.core.IndexedSeq(G__6097__a,0);
} 
return G__6096__delegate.call(this,x,y,more);};
G__6096.cljs$lang$maxFixedArity = 2;
G__6096.cljs$lang$applyTo = (function (arglist__6098){
var x = cljs.core.first(arglist__6098);
arglist__6098 = cljs.core.next(arglist__6098);
var y = cljs.core.first(arglist__6098);
var more = cljs.core.rest(arglist__6098);
return G__6096__delegate(x,y,more);
});
G__6096.cljs$core$IFn$_invoke$arity$variadic = G__6096__delegate;
return G__6096;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__6099 = null;
if (arguments.length > 2) {
var G__6100__i = 0, G__6100__a = new Array(arguments.length -  2);
while (G__6100__i < G__6100__a.length) {G__6100__a[G__6100__i] = arguments[G__6100__i + 2]; ++G__6100__i;}
G__6099 = new cljs.core.IndexedSeq(G__6100__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6099);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__6103 = x;
var G__6104 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__6103,G__6104) : cljs.core.mod.call(null,G__6103,G__6104));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__6105__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__6105 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6106__i = 0, G__6106__a = new Array(arguments.length -  2);
while (G__6106__i < G__6106__a.length) {G__6106__a[G__6106__i] = arguments[G__6106__i + 2]; ++G__6106__i;}
  more = new cljs.core.IndexedSeq(G__6106__a,0);
} 
return G__6105__delegate.call(this,x,y,more);};
G__6105.cljs$lang$maxFixedArity = 2;
G__6105.cljs$lang$applyTo = (function (arglist__6107){
var x = cljs.core.first(arglist__6107);
arglist__6107 = cljs.core.next(arglist__6107);
var y = cljs.core.first(arglist__6107);
var more = cljs.core.rest(arglist__6107);
return G__6105__delegate(x,y,more);
});
G__6105.cljs$core$IFn$_invoke$arity$variadic = G__6105__delegate;
return G__6105;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__6108 = null;
if (arguments.length > 2) {
var G__6109__i = 0, G__6109__a = new Array(arguments.length -  2);
while (G__6109__i < G__6109__a.length) {G__6109__a[G__6109__i] = arguments[G__6109__i + 2]; ++G__6109__i;}
G__6108 = new cljs.core.IndexedSeq(G__6109__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6108);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__6110__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__6110 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6111__i = 0, G__6111__a = new Array(arguments.length -  2);
while (G__6111__i < G__6111__a.length) {G__6111__a[G__6111__i] = arguments[G__6111__i + 2]; ++G__6111__i;}
  more = new cljs.core.IndexedSeq(G__6111__a,0);
} 
return G__6110__delegate.call(this,x,y,more);};
G__6110.cljs$lang$maxFixedArity = 2;
G__6110.cljs$lang$applyTo = (function (arglist__6112){
var x = cljs.core.first(arglist__6112);
arglist__6112 = cljs.core.next(arglist__6112);
var y = cljs.core.first(arglist__6112);
var more = cljs.core.rest(arglist__6112);
return G__6110__delegate(x,y,more);
});
G__6110.cljs$core$IFn$_invoke$arity$variadic = G__6110__delegate;
return G__6110;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__6113 = null;
if (arguments.length > 2) {
var G__6114__i = 0, G__6114__a = new Array(arguments.length -  2);
while (G__6114__i < G__6114__a.length) {G__6114__a[G__6114__i] = arguments[G__6114__i + 2]; ++G__6114__i;}
G__6113 = new cljs.core.IndexedSeq(G__6114__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6113);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__6117 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__6117) : Math.floor.call(null,G__6117));
} else {
var G__6118 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__6118) : Math.ceil.call(null,G__6118));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__6119__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__6119 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6120__i = 0, G__6120__a = new Array(arguments.length -  2);
while (G__6120__i < G__6120__a.length) {G__6120__a[G__6120__i] = arguments[G__6120__i + 2]; ++G__6120__i;}
  more = new cljs.core.IndexedSeq(G__6120__a,0);
} 
return G__6119__delegate.call(this,x,y,more);};
G__6119.cljs$lang$maxFixedArity = 2;
G__6119.cljs$lang$applyTo = (function (arglist__6121){
var x = cljs.core.first(arglist__6121);
arglist__6121 = cljs.core.next(arglist__6121);
var y = cljs.core.first(arglist__6121);
var more = cljs.core.rest(arglist__6121);
return G__6119__delegate(x,y,more);
});
G__6119.cljs$core$IFn$_invoke$arity$variadic = G__6119__delegate;
return G__6119;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__6122 = null;
if (arguments.length > 2) {
var G__6123__i = 0, G__6123__a = new Array(arguments.length -  2);
while (G__6123__i < G__6123__a.length) {G__6123__a[G__6123__i] = arguments[G__6123__i + 2]; ++G__6123__i;}
G__6122 = new cljs.core.IndexedSeq(G__6123__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6122);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__6124__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__6124 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6125__i = 0, G__6125__a = new Array(arguments.length -  2);
while (G__6125__i < G__6125__a.length) {G__6125__a[G__6125__i] = arguments[G__6125__i + 2]; ++G__6125__i;}
  more = new cljs.core.IndexedSeq(G__6125__a,0);
} 
return G__6124__delegate.call(this,x,y,more);};
G__6124.cljs$lang$maxFixedArity = 2;
G__6124.cljs$lang$applyTo = (function (arglist__6126){
var x = cljs.core.first(arglist__6126);
arglist__6126 = cljs.core.next(arglist__6126);
var y = cljs.core.first(arglist__6126);
var more = cljs.core.rest(arglist__6126);
return G__6124__delegate(x,y,more);
});
G__6124.cljs$core$IFn$_invoke$arity$variadic = G__6124__delegate;
return G__6124;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__6127 = null;
if (arguments.length > 2) {
var G__6128__i = 0, G__6128__a = new Array(arguments.length -  2);
while (G__6128__i < G__6128__a.length) {G__6128__a[G__6128__i] = arguments[G__6128__i + 2]; ++G__6128__i;}
G__6127 = new cljs.core.IndexedSeq(G__6128__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6127);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__6129__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__6129 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6130__i = 0, G__6130__a = new Array(arguments.length -  2);
while (G__6130__i < G__6130__a.length) {G__6130__a[G__6130__i] = arguments[G__6130__i + 2]; ++G__6130__i;}
  more = new cljs.core.IndexedSeq(G__6130__a,0);
} 
return G__6129__delegate.call(this,x,y,more);};
G__6129.cljs$lang$maxFixedArity = 2;
G__6129.cljs$lang$applyTo = (function (arglist__6131){
var x = cljs.core.first(arglist__6131);
arglist__6131 = cljs.core.next(arglist__6131);
var y = cljs.core.first(arglist__6131);
var more = cljs.core.rest(arglist__6131);
return G__6129__delegate(x,y,more);
});
G__6129.cljs$core$IFn$_invoke$arity$variadic = G__6129__delegate;
return G__6129;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__6132 = null;
if (arguments.length > 2) {
var G__6133__i = 0, G__6133__a = new Array(arguments.length -  2);
while (G__6133__i < G__6133__a.length) {G__6133__a[G__6133__i] = arguments[G__6133__i + 2]; ++G__6133__i;}
G__6132 = new cljs.core.IndexedSeq(G__6133__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6132);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__6134__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__6134 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6135__i = 0, G__6135__a = new Array(arguments.length -  2);
while (G__6135__i < G__6135__a.length) {G__6135__a[G__6135__i] = arguments[G__6135__i + 2]; ++G__6135__i;}
  more = new cljs.core.IndexedSeq(G__6135__a,0);
} 
return G__6134__delegate.call(this,x,y,more);};
G__6134.cljs$lang$maxFixedArity = 2;
G__6134.cljs$lang$applyTo = (function (arglist__6136){
var x = cljs.core.first(arglist__6136);
arglist__6136 = cljs.core.next(arglist__6136);
var y = cljs.core.first(arglist__6136);
var more = cljs.core.rest(arglist__6136);
return G__6134__delegate(x,y,more);
});
G__6134.cljs$core$IFn$_invoke$arity$variadic = G__6134__delegate;
return G__6134;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__6137 = null;
if (arguments.length > 2) {
var G__6138__i = 0, G__6138__a = new Array(arguments.length -  2);
while (G__6138__i < G__6138__a.length) {G__6138__a[G__6138__i] = arguments[G__6138__i + 2]; ++G__6138__i;}
G__6137 = new cljs.core.IndexedSeq(G__6138__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6137);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__6143__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__6144 = y;
var G__6145 = cljs.core.first(more);
var G__6146 = cljs.core.next(more);
x = G__6144;
y = G__6145;
more = G__6146;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6143 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6147__i = 0, G__6147__a = new Array(arguments.length -  2);
while (G__6147__i < G__6147__a.length) {G__6147__a[G__6147__i] = arguments[G__6147__i + 2]; ++G__6147__i;}
  more = new cljs.core.IndexedSeq(G__6147__a,0);
} 
return G__6143__delegate.call(this,x,y,more);};
G__6143.cljs$lang$maxFixedArity = 2;
G__6143.cljs$lang$applyTo = (function (arglist__6148){
var x = cljs.core.first(arglist__6148);
arglist__6148 = cljs.core.next(arglist__6148);
var y = cljs.core.first(arglist__6148);
var more = cljs.core.rest(arglist__6148);
return G__6143__delegate(x,y,more);
});
G__6143.cljs$core$IFn$_invoke$arity$variadic = G__6143__delegate;
return G__6143;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__6149 = null;
if (arguments.length > 2) {
var G__6150__i = 0, G__6150__a = new Array(arguments.length -  2);
while (G__6150__i < G__6150__a.length) {G__6150__a[G__6150__i] = arguments[G__6150__i + 2]; ++G__6150__i;}
G__6149 = new cljs.core.IndexedSeq(G__6150__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6149);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__6151 = (n__$1 - (1));
var G__6152 = cljs.core.next(xs);
n__$1 = G__6151;
xs = G__6152;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__6156 = x;
return goog.string.buildString(G__6156);
}
});
var str__2 = (function() { 
var G__6157__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__6158 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__6159 = cljs.core.next(more);
sb = G__6158;
more = G__6159;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__6157 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__6160__i = 0, G__6160__a = new Array(arguments.length -  1);
while (G__6160__i < G__6160__a.length) {G__6160__a[G__6160__i] = arguments[G__6160__i + 1]; ++G__6160__i;}
  ys = new cljs.core.IndexedSeq(G__6160__a,0);
} 
return G__6157__delegate.call(this,x,ys);};
G__6157.cljs$lang$maxFixedArity = 1;
G__6157.cljs$lang$applyTo = (function (arglist__6161){
var x = cljs.core.first(arglist__6161);
var ys = cljs.core.rest(arglist__6161);
return G__6157__delegate(x,ys);
});
G__6157.cljs$core$IFn$_invoke$arity$variadic = G__6157__delegate;
return G__6157;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__6162 = null;
if (arguments.length > 1) {
var G__6163__i = 0, G__6163__a = new Array(arguments.length -  1);
while (G__6163__i < G__6163__a.length) {G__6163__a[G__6163__i] = arguments[G__6163__i + 1]; ++G__6163__i;}
G__6162 = new cljs.core.IndexedSeq(G__6163__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__6162);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__6164 = cljs.core.next(xs);
var G__6165 = cljs.core.next(ys);
xs = G__6164;
ys = G__6165;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__6166 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__6167 = cljs.core.next(s);
res = G__6166;
s = G__6167;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__6172 = ((h + (cljs.core.hash((function (){var G__6170 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__6170) : cljs.core.key.call(null,G__6170));
})()) ^ cljs.core.hash((function (){var G__6171 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__6171) : cljs.core.val.call(null,G__6171));
})()))) % (4503599627370496));
var G__6173 = cljs.core.next(s);
h = G__6172;
s = G__6173;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__6174 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__6175 = cljs.core.next(s__$1);
h = G__6174;
s__$1 = G__6175;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__6186_6196 = cljs.core.seq(fn_map);
var chunk__6187_6197 = null;
var count__6188_6198 = (0);
var i__6189_6199 = (0);
while(true){
if((i__6189_6199 < count__6188_6198)){
var vec__6190_6200 = chunk__6187_6197.cljs$core$IIndexed$_nth$arity$2(null,i__6189_6199);
var key_name_6201 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6190_6200,(0),null);
var f_6202 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6190_6200,(1),null);
var str_name_6203 = (function (){var G__6191 = key_name_6201;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__6191) : cljs.core.name.call(null,G__6191));
})();
(obj[str_name_6203] = f_6202);

var G__6204 = seq__6186_6196;
var G__6205 = chunk__6187_6197;
var G__6206 = count__6188_6198;
var G__6207 = (i__6189_6199 + (1));
seq__6186_6196 = G__6204;
chunk__6187_6197 = G__6205;
count__6188_6198 = G__6206;
i__6189_6199 = G__6207;
continue;
} else {
var temp__4425__auto___6208 = cljs.core.seq(seq__6186_6196);
if(temp__4425__auto___6208){
var seq__6186_6209__$1 = temp__4425__auto___6208;
if(cljs.core.chunked_seq_QMARK_(seq__6186_6209__$1)){
var c__3914__auto___6210 = (function (){var G__6192 = seq__6186_6209__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__6192) : cljs.core.chunk_first.call(null,G__6192));
})();
var G__6211 = (function (){var G__6193 = seq__6186_6209__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__6193) : cljs.core.chunk_rest.call(null,G__6193));
})();
var G__6212 = c__3914__auto___6210;
var G__6213 = cljs.core.count(c__3914__auto___6210);
var G__6214 = (0);
seq__6186_6196 = G__6211;
chunk__6187_6197 = G__6212;
count__6188_6198 = G__6213;
i__6189_6199 = G__6214;
continue;
} else {
var vec__6194_6215 = cljs.core.first(seq__6186_6209__$1);
var key_name_6216 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6194_6215,(0),null);
var f_6217 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6194_6215,(1),null);
var str_name_6218 = (function (){var G__6195 = key_name_6216;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__6195) : cljs.core.name.call(null,G__6195));
})();
(obj[str_name_6218] = f_6217);

var G__6219 = cljs.core.next(seq__6186_6209__$1);
var G__6220 = null;
var G__6221 = (0);
var G__6222 = (0);
seq__6186_6196 = G__6219;
chunk__6187_6197 = G__6220;
count__6188_6198 = G__6221;
i__6189_6199 = G__6222;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__6224 = coll;
if(G__6224){
var bit__3808__auto__ = (G__6224.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__3808__auto__) || (G__6224.cljs$core$IReversible$)){
return true;
} else {
if((!G__6224.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__6224);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__6224);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__6225 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__6225;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__6226 = (i - (1));
var G__6227 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__6226;
r = G__6227;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__6228__i = 0, G__6228__a = new Array(arguments.length -  0);
while (G__6228__i < G__6228__a.length) {G__6228__a[G__6228__i] = arguments[G__6228__i + 0]; ++G__6228__i;}
  xs = new cljs.core.IndexedSeq(G__6228__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__6229){
var xs = cljs.core.seq(arglist__6229);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3127__auto__ = (coll == null);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var G__6233 = coll;
if(G__6233){
var bit__3801__auto__ = (G__6233.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__3801__auto__) || (G__6233.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__6235 = x;
if(G__6235){
var bit__3808__auto__ = (G__6235.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__3808__auto__) || (G__6235.cljs$core$IList$)){
return true;
} else {
if((!G__6235.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__6235);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__6235);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3115__auto__ = cljs.core.not(a.ns);
if(and__3115__auto__){
return b.ns;
} else {
return and__3115__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__6242 = a.ns;
var G__6243 = b.ns;
return goog.array.defaultCompare(G__6242,G__6243);
})();
if(((0) === nsc)){
var G__6244 = a.name;
var G__6245 = b.name;
return goog.array.defaultCompare(G__6244,G__6245);
} else {
return nsc;
}
}
} else {
var G__6246 = a.name;
var G__6247 = b.name;
return goog.array.defaultCompare(G__6246,G__6247);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__6249 = null;
var G__6249__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__6249__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__6249 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__6249__2.call(this,self__,coll);
case 3:
return G__6249__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6249.cljs$core$IFn$_invoke$arity$2 = G__6249__2;
G__6249.cljs$core$IFn$_invoke$arity$3 = G__6249__3;
return G__6249;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args6248){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6248)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__3548__auto__ = self__._hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__6251 = x;
if(G__6251){
var bit__3801__auto__ = (G__6251.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__3801__auto__) || (G__6251.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__6253 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__6253) : cljs.core.name.call(null,G__6253));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__6254 = ls.sval();
ls = G__6254;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition0$ = 2;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition0$ = 524306;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__6256 = s;
if(G__6256){
var bit__3801__auto__ = (G__6256.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__3801__auto__) || (G__6256.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__6257 = cljs.core.next(s__$1);
s__$1 = G__6257;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_6258 = (0);
var xs_6259 = cljs.core.seq(coll);
while(true){
if(xs_6259){
(ret[i_6258] = cljs.core.to_array(cljs.core.first(xs_6259)));

var G__6260 = (i_6258 + (1));
var G__6261 = cljs.core.next(xs_6259);
i_6258 = G__6260;
xs_6259 = G__6261;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__6264 = (i + (1));
var G__6265 = cljs.core.next(s__$1);
i = G__6264;
s__$1 = G__6265;
continue;
} else {
return a;
}
break;
}
} else {
var n__4014__auto___6266 = size;
var i_6267 = (0);
while(true){
if((i_6267 < n__4014__auto___6266)){
(a[i_6267] = init_val_or_seq);

var G__6268 = (i_6267 + (1));
i_6267 = G__6268;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__6271 = (i + (1));
var G__6272 = cljs.core.next(s__$1);
i = G__6271;
s__$1 = G__6272;
continue;
} else {
return a;
}
break;
}
} else {
var n__4014__auto___6273 = size;
var i_6274 = (0);
while(true){
if((i_6274 < n__4014__auto___6273)){
(a[i_6274] = init_val_or_seq);

var G__6275 = (i_6274 + (1));
i_6274 = G__6275;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__6278 = (i + (1));
var G__6279 = cljs.core.next(s__$1);
i = G__6278;
s__$1 = G__6279;
continue;
} else {
return a;
}
break;
}
} else {
var n__4014__auto___6280 = size;
var i_6281 = (0);
while(true){
if((i_6281 < n__4014__auto___6280)){
(a[i_6281] = init_val_or_seq);

var G__6282 = (i_6281 + (1));
i_6281 = G__6282;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__6285 = (i + (1));
var G__6286 = cljs.core.next(s__$1);
i = G__6285;
s__$1 = G__6286;
continue;
} else {
return a;
}
break;
}
} else {
var n__4014__auto___6287 = size;
var i_6288 = (0);
while(true){
if((i_6288 < n__4014__auto___6287)){
(a[i_6288] = init_val_or_seq);

var G__6289 = (i_6288 + (1));
i_6288 = G__6289;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__6290 = cljs.core.next(s__$1);
var G__6291 = (i - (1));
var G__6292 = (sum + (1));
s__$1 = G__6290;
i = G__6291;
sum = G__6292;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__6312__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__6312 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__6313__i = 0, G__6313__a = new Array(arguments.length -  2);
while (G__6313__i < G__6313__a.length) {G__6313__a[G__6313__i] = arguments[G__6313__i + 2]; ++G__6313__i;}
  zs = new cljs.core.IndexedSeq(G__6313__a,0);
} 
return G__6312__delegate.call(this,x,y,zs);};
G__6312.cljs$lang$maxFixedArity = 2;
G__6312.cljs$lang$applyTo = (function (arglist__6314){
var x = cljs.core.first(arglist__6314);
arglist__6314 = cljs.core.next(arglist__6314);
var y = cljs.core.first(arglist__6314);
var zs = cljs.core.rest(arglist__6314);
return G__6312__delegate(x,y,zs);
});
G__6312.cljs$core$IFn$_invoke$arity$variadic = G__6312__delegate;
return G__6312;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__6315 = null;
if (arguments.length > 2) {
var G__6316__i = 0, G__6316__a = new Array(arguments.length -  2);
while (G__6316__i < G__6316__a.length) {G__6316__a[G__6316__i] = arguments[G__6316__i + 2]; ++G__6316__i;}
G__6315 = new cljs.core.IndexedSeq(G__6316__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6315);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__6317__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__6317 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__6318__i = 0, G__6318__a = new Array(arguments.length -  4);
while (G__6318__i < G__6318__a.length) {G__6318__a[G__6318__i] = arguments[G__6318__i + 4]; ++G__6318__i;}
  more = new cljs.core.IndexedSeq(G__6318__a,0);
} 
return G__6317__delegate.call(this,a,b,c,d,more);};
G__6317.cljs$lang$maxFixedArity = 4;
G__6317.cljs$lang$applyTo = (function (arglist__6319){
var a = cljs.core.first(arglist__6319);
arglist__6319 = cljs.core.next(arglist__6319);
var b = cljs.core.first(arglist__6319);
arglist__6319 = cljs.core.next(arglist__6319);
var c = cljs.core.first(arglist__6319);
arglist__6319 = cljs.core.next(arglist__6319);
var d = cljs.core.first(arglist__6319);
var more = cljs.core.rest(arglist__6319);
return G__6317__delegate(a,b,c,d,more);
});
G__6317.cljs$core$IFn$_invoke$arity$variadic = G__6317__delegate;
return G__6317;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__6320 = null;
if (arguments.length > 4) {
var G__6321__i = 0, G__6321__a = new Array(arguments.length -  4);
while (G__6321__i < G__6321__a.length) {G__6321__a[G__6321__i] = arguments[G__6321__i + 4]; ++G__6321__i;}
G__6320 = new cljs.core.IndexedSeq(G__6321__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__6320);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__6322__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__6323 = ntcoll;
var G__6324 = cljs.core.first(vals);
var G__6325 = cljs.core.next(vals);
tcoll = G__6323;
val = G__6324;
vals = G__6325;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__6322 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__6326__i = 0, G__6326__a = new Array(arguments.length -  2);
while (G__6326__i < G__6326__a.length) {G__6326__a[G__6326__i] = arguments[G__6326__i + 2]; ++G__6326__i;}
  vals = new cljs.core.IndexedSeq(G__6326__a,0);
} 
return G__6322__delegate.call(this,tcoll,val,vals);};
G__6322.cljs$lang$maxFixedArity = 2;
G__6322.cljs$lang$applyTo = (function (arglist__6327){
var tcoll = cljs.core.first(arglist__6327);
arglist__6327 = cljs.core.next(arglist__6327);
var val = cljs.core.first(arglist__6327);
var vals = cljs.core.rest(arglist__6327);
return G__6322__delegate(tcoll,val,vals);
});
G__6322.cljs$core$IFn$_invoke$arity$variadic = G__6322__delegate;
return G__6322;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__6328 = null;
if (arguments.length > 2) {
var G__6329__i = 0, G__6329__a = new Array(arguments.length -  2);
while (G__6329__i < G__6329__a.length) {G__6329__a[G__6329__i] = arguments[G__6329__i + 2]; ++G__6329__i;}
G__6328 = new cljs.core.IndexedSeq(G__6329__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__6328);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__6330__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__6331 = ntcoll;
var G__6332 = cljs.core.first(kvs);
var G__6333 = cljs.core.second(kvs);
var G__6334 = cljs.core.nnext(kvs);
tcoll = G__6331;
key = G__6332;
val = G__6333;
kvs = G__6334;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__6330 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__6335__i = 0, G__6335__a = new Array(arguments.length -  3);
while (G__6335__i < G__6335__a.length) {G__6335__a[G__6335__i] = arguments[G__6335__i + 3]; ++G__6335__i;}
  kvs = new cljs.core.IndexedSeq(G__6335__a,0);
} 
return G__6330__delegate.call(this,tcoll,key,val,kvs);};
G__6330.cljs$lang$maxFixedArity = 3;
G__6330.cljs$lang$applyTo = (function (arglist__6336){
var tcoll = cljs.core.first(arglist__6336);
arglist__6336 = cljs.core.next(arglist__6336);
var key = cljs.core.first(arglist__6336);
arglist__6336 = cljs.core.next(arglist__6336);
var val = cljs.core.first(arglist__6336);
var kvs = cljs.core.rest(arglist__6336);
return G__6330__delegate(tcoll,key,val,kvs);
});
G__6330.cljs$core$IFn$_invoke$arity$variadic = G__6330__delegate;
return G__6330;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__6337 = null;
if (arguments.length > 3) {
var G__6338__i = 0, G__6338__a = new Array(arguments.length -  3);
while (G__6338__i < G__6338__a.length) {G__6338__a[G__6338__i] = arguments[G__6338__i + 3]; ++G__6338__i;}
G__6337 = new cljs.core.IndexedSeq(G__6338__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__6337);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__6339__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__6340 = ntcoll;
var G__6341 = cljs.core.first(ks);
var G__6342 = cljs.core.next(ks);
tcoll = G__6340;
key = G__6341;
ks = G__6342;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__6339 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__6343__i = 0, G__6343__a = new Array(arguments.length -  2);
while (G__6343__i < G__6343__a.length) {G__6343__a[G__6343__i] = arguments[G__6343__i + 2]; ++G__6343__i;}
  ks = new cljs.core.IndexedSeq(G__6343__a,0);
} 
return G__6339__delegate.call(this,tcoll,key,ks);};
G__6339.cljs$lang$maxFixedArity = 2;
G__6339.cljs$lang$applyTo = (function (arglist__6344){
var tcoll = cljs.core.first(arglist__6344);
arglist__6344 = cljs.core.next(arglist__6344);
var key = cljs.core.first(arglist__6344);
var ks = cljs.core.rest(arglist__6344);
return G__6339__delegate(tcoll,key,ks);
});
G__6339.cljs$core$IFn$_invoke$arity$variadic = G__6339__delegate;
return G__6339;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__6345 = null;
if (arguments.length > 2) {
var G__6346__i = 0, G__6346__a = new Array(arguments.length -  2);
while (G__6346__i < G__6346__a.length) {G__6346__a[G__6346__i] = arguments[G__6346__i + 2]; ++G__6346__i;}
G__6345 = new cljs.core.IndexedSeq(G__6346__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__6345);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__6347__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__6348 = ntcoll;
var G__6349 = cljs.core.first(vals);
var G__6350 = cljs.core.next(vals);
tcoll = G__6348;
val = G__6349;
vals = G__6350;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__6347 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__6351__i = 0, G__6351__a = new Array(arguments.length -  2);
while (G__6351__i < G__6351__a.length) {G__6351__a[G__6351__i] = arguments[G__6351__i + 2]; ++G__6351__i;}
  vals = new cljs.core.IndexedSeq(G__6351__a,0);
} 
return G__6347__delegate.call(this,tcoll,val,vals);};
G__6347.cljs$lang$maxFixedArity = 2;
G__6347.cljs$lang$applyTo = (function (arglist__6352){
var tcoll = cljs.core.first(arglist__6352);
arglist__6352 = cljs.core.next(arglist__6352);
var val = cljs.core.first(arglist__6352);
var vals = cljs.core.rest(arglist__6352);
return G__6347__delegate(tcoll,val,vals);
});
G__6347.cljs$core$IFn$_invoke$arity$variadic = G__6347__delegate;
return G__6347;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__6353 = null;
if (arguments.length > 2) {
var G__6354__i = 0, G__6354__a = new Array(arguments.length -  2);
while (G__6354__i < G__6354__a.length) {G__6354__a[G__6354__i] = arguments[G__6354__i + 2]; ++G__6354__i;}
G__6353 = new cljs.core.IndexedSeq(G__6354__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__6353);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4058 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4058);
} else {
var G__6565 = a4058;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__6565) : f.call(null,G__6565));
}
} else {
var b4059 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4058,b4059);
} else {
var G__6566 = a4058;
var G__6567 = b4059;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6566,G__6567) : f.call(null,G__6566,G__6567));
}
} else {
var c4060 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4058,b4059,c4060);
} else {
var G__6568 = a4058;
var G__6569 = b4059;
var G__6570 = c4060;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__6568,G__6569,G__6570) : f.call(null,G__6568,G__6569,G__6570));
}
} else {
var d4061 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4058,b4059,c4060,d4061);
} else {
var G__6571 = a4058;
var G__6572 = b4059;
var G__6573 = c4060;
var G__6574 = d4061;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__6571,G__6572,G__6573,G__6574) : f.call(null,G__6571,G__6572,G__6573,G__6574));
}
} else {
var e4062 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4058,b4059,c4060,d4061,e4062);
} else {
var G__6575 = a4058;
var G__6576 = b4059;
var G__6577 = c4060;
var G__6578 = d4061;
var G__6579 = e4062;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__6575,G__6576,G__6577,G__6578,G__6579) : f.call(null,G__6575,G__6576,G__6577,G__6578,G__6579));
}
} else {
var f4063 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4058,b4059,c4060,d4061,e4062,f4063);
} else {
var G__6580 = a4058;
var G__6581 = b4059;
var G__6582 = c4060;
var G__6583 = d4061;
var G__6584 = e4062;
var G__6585 = f4063;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__6580,G__6581,G__6582,G__6583,G__6584,G__6585) : f.call(null,G__6580,G__6581,G__6582,G__6583,G__6584,G__6585));
}
} else {
var g4064 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4058,b4059,c4060,d4061,e4062,f4063,g4064);
} else {
var G__6586 = a4058;
var G__6587 = b4059;
var G__6588 = c4060;
var G__6589 = d4061;
var G__6590 = e4062;
var G__6591 = f4063;
var G__6592 = g4064;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__6586,G__6587,G__6588,G__6589,G__6590,G__6591,G__6592) : f.call(null,G__6586,G__6587,G__6588,G__6589,G__6590,G__6591,G__6592));
}
} else {
var h4065 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4058,b4059,c4060,d4061,e4062,f4063,g4064,h4065);
} else {
var G__6593 = a4058;
var G__6594 = b4059;
var G__6595 = c4060;
var G__6596 = d4061;
var G__6597 = e4062;
var G__6598 = f4063;
var G__6599 = g4064;
var G__6600 = h4065;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__6593,G__6594,G__6595,G__6596,G__6597,G__6598,G__6599,G__6600) : f.call(null,G__6593,G__6594,G__6595,G__6596,G__6597,G__6598,G__6599,G__6600));
}
} else {
var i4066 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4058,b4059,c4060,d4061,e4062,f4063,g4064,h4065,i4066);
} else {
var G__6601 = a4058;
var G__6602 = b4059;
var G__6603 = c4060;
var G__6604 = d4061;
var G__6605 = e4062;
var G__6606 = f4063;
var G__6607 = g4064;
var G__6608 = h4065;
var G__6609 = i4066;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__6601,G__6602,G__6603,G__6604,G__6605,G__6606,G__6607,G__6608,G__6609) : f.call(null,G__6601,G__6602,G__6603,G__6604,G__6605,G__6606,G__6607,G__6608,G__6609));
}
} else {
var j4067 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4058,b4059,c4060,d4061,e4062,f4063,g4064,h4065,i4066,j4067);
} else {
var G__6610 = a4058;
var G__6611 = b4059;
var G__6612 = c4060;
var G__6613 = d4061;
var G__6614 = e4062;
var G__6615 = f4063;
var G__6616 = g4064;
var G__6617 = h4065;
var G__6618 = i4066;
var G__6619 = j4067;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__6610,G__6611,G__6612,G__6613,G__6614,G__6615,G__6616,G__6617,G__6618,G__6619) : f.call(null,G__6610,G__6611,G__6612,G__6613,G__6614,G__6615,G__6616,G__6617,G__6618,G__6619));
}
} else {
var k4068 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4058,b4059,c4060,d4061,e4062,f4063,g4064,h4065,i4066,j4067,k4068);
} else {
var G__6620 = a4058;
var G__6621 = b4059;
var G__6622 = c4060;
var G__6623 = d4061;
var G__6624 = e4062;
var G__6625 = f4063;
var G__6626 = g4064;
var G__6627 = h4065;
var G__6628 = i4066;
var G__6629 = j4067;
var G__6630 = k4068;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__6620,G__6621,G__6622,G__6623,G__6624,G__6625,G__6626,G__6627,G__6628,G__6629,G__6630) : f.call(null,G__6620,G__6621,G__6622,G__6623,G__6624,G__6625,G__6626,G__6627,G__6628,G__6629,G__6630));
}
} else {
var l4069 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4058,b4059,c4060,d4061,e4062,f4063,g4064,h4065,i4066,j4067,k4068,l4069);
} else {
var G__6631 = a4058;
var G__6632 = b4059;
var G__6633 = c4060;
var G__6634 = d4061;
var G__6635 = e4062;
var G__6636 = f4063;
var G__6637 = g4064;
var G__6638 = h4065;
var G__6639 = i4066;
var G__6640 = j4067;
var G__6641 = k4068;
var G__6642 = l4069;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__6631,G__6632,G__6633,G__6634,G__6635,G__6636,G__6637,G__6638,G__6639,G__6640,G__6641,G__6642) : f.call(null,G__6631,G__6632,G__6633,G__6634,G__6635,G__6636,G__6637,G__6638,G__6639,G__6640,G__6641,G__6642));
}
} else {
var m4070 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4058,b4059,c4060,d4061,e4062,f4063,g4064,h4065,i4066,j4067,k4068,l4069,m4070);
} else {
var G__6643 = a4058;
var G__6644 = b4059;
var G__6645 = c4060;
var G__6646 = d4061;
var G__6647 = e4062;
var G__6648 = f4063;
var G__6649 = g4064;
var G__6650 = h4065;
var G__6651 = i4066;
var G__6652 = j4067;
var G__6653 = k4068;
var G__6654 = l4069;
var G__6655 = m4070;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__6643,G__6644,G__6645,G__6646,G__6647,G__6648,G__6649,G__6650,G__6651,G__6652,G__6653,G__6654,G__6655) : f.call(null,G__6643,G__6644,G__6645,G__6646,G__6647,G__6648,G__6649,G__6650,G__6651,G__6652,G__6653,G__6654,G__6655));
}
} else {
var n4071 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4058,b4059,c4060,d4061,e4062,f4063,g4064,h4065,i4066,j4067,k4068,l4069,m4070,n4071);
} else {
var G__6656 = a4058;
var G__6657 = b4059;
var G__6658 = c4060;
var G__6659 = d4061;
var G__6660 = e4062;
var G__6661 = f4063;
var G__6662 = g4064;
var G__6663 = h4065;
var G__6664 = i4066;
var G__6665 = j4067;
var G__6666 = k4068;
var G__6667 = l4069;
var G__6668 = m4070;
var G__6669 = n4071;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__6656,G__6657,G__6658,G__6659,G__6660,G__6661,G__6662,G__6663,G__6664,G__6665,G__6666,G__6667,G__6668,G__6669) : f.call(null,G__6656,G__6657,G__6658,G__6659,G__6660,G__6661,G__6662,G__6663,G__6664,G__6665,G__6666,G__6667,G__6668,G__6669));
}
} else {
var o4072 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4058,b4059,c4060,d4061,e4062,f4063,g4064,h4065,i4066,j4067,k4068,l4069,m4070,n4071,o4072);
} else {
var G__6670 = a4058;
var G__6671 = b4059;
var G__6672 = c4060;
var G__6673 = d4061;
var G__6674 = e4062;
var G__6675 = f4063;
var G__6676 = g4064;
var G__6677 = h4065;
var G__6678 = i4066;
var G__6679 = j4067;
var G__6680 = k4068;
var G__6681 = l4069;
var G__6682 = m4070;
var G__6683 = n4071;
var G__6684 = o4072;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__6670,G__6671,G__6672,G__6673,G__6674,G__6675,G__6676,G__6677,G__6678,G__6679,G__6680,G__6681,G__6682,G__6683,G__6684) : f.call(null,G__6670,G__6671,G__6672,G__6673,G__6674,G__6675,G__6676,G__6677,G__6678,G__6679,G__6680,G__6681,G__6682,G__6683,G__6684));
}
} else {
var p4073 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4058,b4059,c4060,d4061,e4062,f4063,g4064,h4065,i4066,j4067,k4068,l4069,m4070,n4071,o4072,p4073);
} else {
var G__6685 = a4058;
var G__6686 = b4059;
var G__6687 = c4060;
var G__6688 = d4061;
var G__6689 = e4062;
var G__6690 = f4063;
var G__6691 = g4064;
var G__6692 = h4065;
var G__6693 = i4066;
var G__6694 = j4067;
var G__6695 = k4068;
var G__6696 = l4069;
var G__6697 = m4070;
var G__6698 = n4071;
var G__6699 = o4072;
var G__6700 = p4073;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__6685,G__6686,G__6687,G__6688,G__6689,G__6690,G__6691,G__6692,G__6693,G__6694,G__6695,G__6696,G__6697,G__6698,G__6699,G__6700) : f.call(null,G__6685,G__6686,G__6687,G__6688,G__6689,G__6690,G__6691,G__6692,G__6693,G__6694,G__6695,G__6696,G__6697,G__6698,G__6699,G__6700));
}
} else {
var q4074 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4058,b4059,c4060,d4061,e4062,f4063,g4064,h4065,i4066,j4067,k4068,l4069,m4070,n4071,o4072,p4073,q4074);
} else {
var G__6701 = a4058;
var G__6702 = b4059;
var G__6703 = c4060;
var G__6704 = d4061;
var G__6705 = e4062;
var G__6706 = f4063;
var G__6707 = g4064;
var G__6708 = h4065;
var G__6709 = i4066;
var G__6710 = j4067;
var G__6711 = k4068;
var G__6712 = l4069;
var G__6713 = m4070;
var G__6714 = n4071;
var G__6715 = o4072;
var G__6716 = p4073;
var G__6717 = q4074;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__6701,G__6702,G__6703,G__6704,G__6705,G__6706,G__6707,G__6708,G__6709,G__6710,G__6711,G__6712,G__6713,G__6714,G__6715,G__6716,G__6717) : f.call(null,G__6701,G__6702,G__6703,G__6704,G__6705,G__6706,G__6707,G__6708,G__6709,G__6710,G__6711,G__6712,G__6713,G__6714,G__6715,G__6716,G__6717));
}
} else {
var r4075 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4058,b4059,c4060,d4061,e4062,f4063,g4064,h4065,i4066,j4067,k4068,l4069,m4070,n4071,o4072,p4073,q4074,r4075);
} else {
var G__6718 = a4058;
var G__6719 = b4059;
var G__6720 = c4060;
var G__6721 = d4061;
var G__6722 = e4062;
var G__6723 = f4063;
var G__6724 = g4064;
var G__6725 = h4065;
var G__6726 = i4066;
var G__6727 = j4067;
var G__6728 = k4068;
var G__6729 = l4069;
var G__6730 = m4070;
var G__6731 = n4071;
var G__6732 = o4072;
var G__6733 = p4073;
var G__6734 = q4074;
var G__6735 = r4075;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__6718,G__6719,G__6720,G__6721,G__6722,G__6723,G__6724,G__6725,G__6726,G__6727,G__6728,G__6729,G__6730,G__6731,G__6732,G__6733,G__6734,G__6735) : f.call(null,G__6718,G__6719,G__6720,G__6721,G__6722,G__6723,G__6724,G__6725,G__6726,G__6727,G__6728,G__6729,G__6730,G__6731,G__6732,G__6733,G__6734,G__6735));
}
} else {
var s4076 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4058,b4059,c4060,d4061,e4062,f4063,g4064,h4065,i4066,j4067,k4068,l4069,m4070,n4071,o4072,p4073,q4074,r4075,s4076);
} else {
var G__6736 = a4058;
var G__6737 = b4059;
var G__6738 = c4060;
var G__6739 = d4061;
var G__6740 = e4062;
var G__6741 = f4063;
var G__6742 = g4064;
var G__6743 = h4065;
var G__6744 = i4066;
var G__6745 = j4067;
var G__6746 = k4068;
var G__6747 = l4069;
var G__6748 = m4070;
var G__6749 = n4071;
var G__6750 = o4072;
var G__6751 = p4073;
var G__6752 = q4074;
var G__6753 = r4075;
var G__6754 = s4076;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__6736,G__6737,G__6738,G__6739,G__6740,G__6741,G__6742,G__6743,G__6744,G__6745,G__6746,G__6747,G__6748,G__6749,G__6750,G__6751,G__6752,G__6753,G__6754) : f.call(null,G__6736,G__6737,G__6738,G__6739,G__6740,G__6741,G__6742,G__6743,G__6744,G__6745,G__6746,G__6747,G__6748,G__6749,G__6750,G__6751,G__6752,G__6753,G__6754));
}
} else {
var t4077 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4058,b4059,c4060,d4061,e4062,f4063,g4064,h4065,i4066,j4067,k4068,l4069,m4070,n4071,o4072,p4073,q4074,r4075,s4076,t4077);
} else {
var G__6755 = a4058;
var G__6756 = b4059;
var G__6757 = c4060;
var G__6758 = d4061;
var G__6759 = e4062;
var G__6760 = f4063;
var G__6761 = g4064;
var G__6762 = h4065;
var G__6763 = i4066;
var G__6764 = j4067;
var G__6765 = k4068;
var G__6766 = l4069;
var G__6767 = m4070;
var G__6768 = n4071;
var G__6769 = o4072;
var G__6770 = p4073;
var G__6771 = q4074;
var G__6772 = r4075;
var G__6773 = s4076;
var G__6774 = t4077;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__6755,G__6756,G__6757,G__6758,G__6759,G__6760,G__6761,G__6762,G__6763,G__6764,G__6765,G__6766,G__6767,G__6768,G__6769,G__6770,G__6771,G__6772,G__6773,G__6774) : f.call(null,G__6755,G__6756,G__6757,G__6758,G__6759,G__6760,G__6761,G__6762,G__6763,G__6764,G__6765,G__6766,G__6767,G__6768,G__6769,G__6770,G__6771,G__6772,G__6773,G__6774));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__6775__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__6775 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__6776__i = 0, G__6776__a = new Array(arguments.length -  5);
while (G__6776__i < G__6776__a.length) {G__6776__a[G__6776__i] = arguments[G__6776__i + 5]; ++G__6776__i;}
  args = new cljs.core.IndexedSeq(G__6776__a,0);
} 
return G__6775__delegate.call(this,f,a,b,c,d,args);};
G__6775.cljs$lang$maxFixedArity = 5;
G__6775.cljs$lang$applyTo = (function (arglist__6777){
var f = cljs.core.first(arglist__6777);
arglist__6777 = cljs.core.next(arglist__6777);
var a = cljs.core.first(arglist__6777);
arglist__6777 = cljs.core.next(arglist__6777);
var b = cljs.core.first(arglist__6777);
arglist__6777 = cljs.core.next(arglist__6777);
var c = cljs.core.first(arglist__6777);
arglist__6777 = cljs.core.next(arglist__6777);
var d = cljs.core.first(arglist__6777);
var args = cljs.core.rest(arglist__6777);
return G__6775__delegate(f,a,b,c,d,args);
});
G__6775.cljs$core$IFn$_invoke$arity$variadic = G__6775__delegate;
return G__6775;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__6778 = null;
if (arguments.length > 5) {
var G__6779__i = 0, G__6779__a = new Array(arguments.length -  5);
while (G__6779__i < G__6779__a.length) {G__6779__a[G__6779__i] = arguments[G__6779__i + 5]; ++G__6779__i;}
G__6778 = new cljs.core.IndexedSeq(G__6779__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__6778);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__6795 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__6795) : f.call(null,G__6795));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__6796 = cljs.core.meta(obj);
var G__6797 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6796,G__6797) : f.call(null,G__6796,G__6797));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__6798 = cljs.core.meta(obj);
var G__6799 = a;
var G__6800 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__6798,G__6799,G__6800) : f.call(null,G__6798,G__6799,G__6800));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__6801 = cljs.core.meta(obj);
var G__6802 = a;
var G__6803 = b;
var G__6804 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__6801,G__6802,G__6803,G__6804) : f.call(null,G__6801,G__6802,G__6803,G__6804));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__6805 = cljs.core.meta(obj);
var G__6806 = a;
var G__6807 = b;
var G__6808 = c;
var G__6809 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__6805,G__6806,G__6807,G__6808,G__6809) : f.call(null,G__6805,G__6806,G__6807,G__6808,G__6809));
})());
});
var vary_meta__7 = (function() { 
var G__6810__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__6810 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__6811__i = 0, G__6811__a = new Array(arguments.length -  6);
while (G__6811__i < G__6811__a.length) {G__6811__a[G__6811__i] = arguments[G__6811__i + 6]; ++G__6811__i;}
  args = new cljs.core.IndexedSeq(G__6811__a,0);
} 
return G__6810__delegate.call(this,obj,f,a,b,c,d,args);};
G__6810.cljs$lang$maxFixedArity = 6;
G__6810.cljs$lang$applyTo = (function (arglist__6812){
var obj = cljs.core.first(arglist__6812);
arglist__6812 = cljs.core.next(arglist__6812);
var f = cljs.core.first(arglist__6812);
arglist__6812 = cljs.core.next(arglist__6812);
var a = cljs.core.first(arglist__6812);
arglist__6812 = cljs.core.next(arglist__6812);
var b = cljs.core.first(arglist__6812);
arglist__6812 = cljs.core.next(arglist__6812);
var c = cljs.core.first(arglist__6812);
arglist__6812 = cljs.core.next(arglist__6812);
var d = cljs.core.first(arglist__6812);
var args = cljs.core.rest(arglist__6812);
return G__6810__delegate(obj,f,a,b,c,d,args);
});
G__6810.cljs$core$IFn$_invoke$arity$variadic = G__6810__delegate;
return G__6810;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__6813 = null;
if (arguments.length > 6) {
var G__6814__i = 0, G__6814__a = new Array(arguments.length -  6);
while (G__6814__i < G__6814__a.length) {G__6814__a[G__6814__i] = arguments[G__6814__i + 6]; ++G__6814__i;}
G__6813 = new cljs.core.IndexedSeq(G__6814__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__6813);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__6815__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__6815 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6816__i = 0, G__6816__a = new Array(arguments.length -  2);
while (G__6816__i < G__6816__a.length) {G__6816__a[G__6816__i] = arguments[G__6816__i + 2]; ++G__6816__i;}
  more = new cljs.core.IndexedSeq(G__6816__a,0);
} 
return G__6815__delegate.call(this,x,y,more);};
G__6815.cljs$lang$maxFixedArity = 2;
G__6815.cljs$lang$applyTo = (function (arglist__6817){
var x = cljs.core.first(arglist__6817);
arglist__6817 = cljs.core.next(arglist__6817);
var y = cljs.core.first(arglist__6817);
var more = cljs.core.rest(arglist__6817);
return G__6815__delegate(x,y,more);
});
G__6815.cljs$core$IFn$_invoke$arity$variadic = G__6815__delegate;
return G__6815;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__6818 = null;
if (arguments.length > 2) {
var G__6819__i = 0, G__6819__a = new Array(arguments.length -  2);
while (G__6819__i < G__6819__a.length) {G__6819__a[G__6819__i] = arguments[G__6819__i + 2]; ++G__6819__i;}
G__6818 = new cljs.core.IndexedSeq(G__6819__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6818);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t6823 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t6823 = (function (nil_iter,meta6824){
this.nil_iter = nil_iter;
this.meta6824 = meta6824;
this.cljs$lang$protocol_mask$partition0$ = 393216;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.t6823.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_6825,meta6824__$1){
var self__ = this;
var _6825__$1 = this;
return (new cljs.core.t6823(self__.nil_iter,meta6824__$1));
});

cljs.core.t6823.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_6825){
var self__ = this;
var _6825__$1 = this;
return self__.meta6824;
});

cljs.core.t6823.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t6823.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t6823.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t6823.cljs$lang$type = true;

cljs.core.t6823.cljs$lang$ctorStr = "cljs.core/t6823";

cljs.core.t6823.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/t6823");
});

cljs.core.__GT_t6823 = (function __GT_t6823(nil_iter__$1,meta6824){
return (new cljs.core.t6823(nil_iter__$1,meta6824));
});

}

return (new cljs.core.t6823(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3115__auto__ = !((lt.stepper == null));
if(and__3115__auto__){
return self__.iter.hasNext();
} else {
return and__3115__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__6826 = lt;
var G__6827 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__6826,G__6827) : self__.xform.call(null,G__6826,G__6827));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__6828 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__6828) : self__.xform.call(null,G__6828));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__6830 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__6830) : xform.call(null,G__6830));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__6832 = cljs.core.next(iters__$1);
iters__$1 = G__6832;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4014__auto___6833 = self__.iters.length;
var i_6834 = (0);
while(true){
if((i_6834 < n__4014__auto___6833)){
(self__.nexts[i_6834] = (self__.iters[i_6834]).next());

var G__6835 = (i_6834 + (1));
i_6834 = G__6835;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3115__auto__ = !((lt.stepper == null));
if(and__3115__auto__){
return this$.hasNext();
} else {
return and__3115__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__6831 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__6831) : self__.xform.call(null,G__6831));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__6840 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__6840) : xform.call(null,G__6840));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__6841_6845 = cljs.core.seq(colls);
var chunk__6842_6846 = null;
var count__6843_6847 = (0);
var i__6844_6848 = (0);
while(true){
if((i__6844_6848 < count__6843_6847)){
var coll_6849 = chunk__6842_6846.cljs$core$IIndexed$_nth$arity$2(null,i__6844_6848);
iters.push(cljs.core.iter(coll_6849));

var G__6850 = seq__6841_6845;
var G__6851 = chunk__6842_6846;
var G__6852 = count__6843_6847;
var G__6853 = (i__6844_6848 + (1));
seq__6841_6845 = G__6850;
chunk__6842_6846 = G__6851;
count__6843_6847 = G__6852;
i__6844_6848 = G__6853;
continue;
} else {
var temp__4425__auto___6854 = cljs.core.seq(seq__6841_6845);
if(temp__4425__auto___6854){
var seq__6841_6855__$1 = temp__4425__auto___6854;
if(cljs.core.chunked_seq_QMARK_(seq__6841_6855__$1)){
var c__3914__auto___6856 = cljs.core.chunk_first(seq__6841_6855__$1);
var G__6857 = cljs.core.chunk_rest(seq__6841_6855__$1);
var G__6858 = c__3914__auto___6856;
var G__6859 = cljs.core.count(c__3914__auto___6856);
var G__6860 = (0);
seq__6841_6845 = G__6857;
chunk__6842_6846 = G__6858;
count__6843_6847 = G__6859;
i__6844_6848 = G__6860;
continue;
} else {
var coll_6861 = cljs.core.first(seq__6841_6855__$1);
iters.push(cljs.core.iter(coll_6861));

var G__6862 = cljs.core.next(seq__6841_6855__$1);
var G__6863 = null;
var G__6864 = (0);
var G__6865 = (0);
seq__6841_6845 = G__6862;
chunk__6842_6846 = G__6863;
count__6843_6847 = G__6864;
i__6844_6848 = G__6865;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3127__auto__ = cljs.core.seq(coll);
if(or__3127__auto__){
return or__3127__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__6866__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__6866 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__6867__i = 0, G__6867__a = new Array(arguments.length -  2);
while (G__6867__i < G__6867__a.length) {G__6867__a[G__6867__i] = arguments[G__6867__i + 2]; ++G__6867__i;}
  colls = new cljs.core.IndexedSeq(G__6867__a,0);
} 
return G__6866__delegate.call(this,xform,coll,colls);};
G__6866.cljs$lang$maxFixedArity = 2;
G__6866.cljs$lang$applyTo = (function (arglist__6868){
var xform = cljs.core.first(arglist__6868);
arglist__6868 = cljs.core.next(arglist__6868);
var coll = cljs.core.first(arglist__6868);
var colls = cljs.core.rest(arglist__6868);
return G__6866__delegate(xform,coll,colls);
});
G__6866.cljs$core$IFn$_invoke$arity$variadic = G__6866__delegate;
return G__6866;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__6869 = null;
if (arguments.length > 2) {
var G__6870__i = 0, G__6870__a = new Array(arguments.length -  2);
while (G__6870__i < G__6870__a.length) {G__6870__a[G__6870__i] = arguments[G__6870__i + 2]; ++G__6870__i;}
G__6869 = new cljs.core.IndexedSeq(G__6870__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__6869);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__6872 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__6872) : pred.call(null,G__6872));
})())){
var G__6873 = pred;
var G__6874 = cljs.core.next(coll);
pred = G__6873;
coll = G__6874;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3127__auto__ = (function (){var G__6878 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__6878) : pred.call(null,G__6878));
})();
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
var G__6879 = pred;
var G__6880 = cljs.core.next(coll);
pred = G__6879;
coll = G__6880;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__6887 = null;
var G__6887__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__6887__1 = (function (x){
return cljs.core.not((function (){var G__6884 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__6884) : f.call(null,G__6884));
})());
});
var G__6887__2 = (function (x,y){
return cljs.core.not((function (){var G__6885 = x;
var G__6886 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6885,G__6886) : f.call(null,G__6885,G__6886));
})());
});
var G__6887__3 = (function() { 
var G__6888__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__6888 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__6889__i = 0, G__6889__a = new Array(arguments.length -  2);
while (G__6889__i < G__6889__a.length) {G__6889__a[G__6889__i] = arguments[G__6889__i + 2]; ++G__6889__i;}
  zs = new cljs.core.IndexedSeq(G__6889__a,0);
} 
return G__6888__delegate.call(this,x,y,zs);};
G__6888.cljs$lang$maxFixedArity = 2;
G__6888.cljs$lang$applyTo = (function (arglist__6890){
var x = cljs.core.first(arglist__6890);
arglist__6890 = cljs.core.next(arglist__6890);
var y = cljs.core.first(arglist__6890);
var zs = cljs.core.rest(arglist__6890);
return G__6888__delegate(x,y,zs);
});
G__6888.cljs$core$IFn$_invoke$arity$variadic = G__6888__delegate;
return G__6888;
})()
;
G__6887 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__6887__0.call(this);
case 1:
return G__6887__1.call(this,x);
case 2:
return G__6887__2.call(this,x,y);
default:
var G__6891 = null;
if (arguments.length > 2) {
var G__6892__i = 0, G__6892__a = new Array(arguments.length -  2);
while (G__6892__i < G__6892__a.length) {G__6892__a[G__6892__i] = arguments[G__6892__i + 2]; ++G__6892__i;}
G__6891 = new cljs.core.IndexedSeq(G__6892__a,0);
}
return G__6887__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6891);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6887.cljs$lang$maxFixedArity = 2;
G__6887.cljs$lang$applyTo = G__6887__3.cljs$lang$applyTo;
G__6887.cljs$core$IFn$_invoke$arity$0 = G__6887__0;
G__6887.cljs$core$IFn$_invoke$arity$1 = G__6887__1;
G__6887.cljs$core$IFn$_invoke$arity$2 = G__6887__2;
G__6887.cljs$core$IFn$_invoke$arity$variadic = G__6887__3.cljs$core$IFn$_invoke$arity$variadic;
return G__6887;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__6893__delegate = function (args){
return x;
};
var G__6893 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__6894__i = 0, G__6894__a = new Array(arguments.length -  0);
while (G__6894__i < G__6894__a.length) {G__6894__a[G__6894__i] = arguments[G__6894__i + 0]; ++G__6894__i;}
  args = new cljs.core.IndexedSeq(G__6894__a,0);
} 
return G__6893__delegate.call(this,args);};
G__6893.cljs$lang$maxFixedArity = 0;
G__6893.cljs$lang$applyTo = (function (arglist__6895){
var args = cljs.core.seq(arglist__6895);
return G__6893__delegate(args);
});
G__6893.cljs$core$IFn$_invoke$arity$variadic = G__6893__delegate;
return G__6893;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__6950 = null;
var G__6950__0 = (function (){
var G__6923 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__6923) : f.call(null,G__6923));
});
var G__6950__1 = (function (x){
var G__6924 = (function (){var G__6925 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__6925) : g.call(null,G__6925));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__6924) : f.call(null,G__6924));
});
var G__6950__2 = (function (x,y){
var G__6926 = (function (){var G__6927 = x;
var G__6928 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__6927,G__6928) : g.call(null,G__6927,G__6928));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__6926) : f.call(null,G__6926));
});
var G__6950__3 = (function (x,y,z){
var G__6929 = (function (){var G__6930 = x;
var G__6931 = y;
var G__6932 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__6930,G__6931,G__6932) : g.call(null,G__6930,G__6931,G__6932));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__6929) : f.call(null,G__6929));
});
var G__6950__4 = (function() { 
var G__6951__delegate = function (x,y,z,args){
var G__6933 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__6933) : f.call(null,G__6933));
};
var G__6951 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__6952__i = 0, G__6952__a = new Array(arguments.length -  3);
while (G__6952__i < G__6952__a.length) {G__6952__a[G__6952__i] = arguments[G__6952__i + 3]; ++G__6952__i;}
  args = new cljs.core.IndexedSeq(G__6952__a,0);
} 
return G__6951__delegate.call(this,x,y,z,args);};
G__6951.cljs$lang$maxFixedArity = 3;
G__6951.cljs$lang$applyTo = (function (arglist__6953){
var x = cljs.core.first(arglist__6953);
arglist__6953 = cljs.core.next(arglist__6953);
var y = cljs.core.first(arglist__6953);
arglist__6953 = cljs.core.next(arglist__6953);
var z = cljs.core.first(arglist__6953);
var args = cljs.core.rest(arglist__6953);
return G__6951__delegate(x,y,z,args);
});
G__6951.cljs$core$IFn$_invoke$arity$variadic = G__6951__delegate;
return G__6951;
})()
;
G__6950 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__6950__0.call(this);
case 1:
return G__6950__1.call(this,x);
case 2:
return G__6950__2.call(this,x,y);
case 3:
return G__6950__3.call(this,x,y,z);
default:
var G__6954 = null;
if (arguments.length > 3) {
var G__6955__i = 0, G__6955__a = new Array(arguments.length -  3);
while (G__6955__i < G__6955__a.length) {G__6955__a[G__6955__i] = arguments[G__6955__i + 3]; ++G__6955__i;}
G__6954 = new cljs.core.IndexedSeq(G__6955__a,0);
}
return G__6950__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__6954);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6950.cljs$lang$maxFixedArity = 3;
G__6950.cljs$lang$applyTo = G__6950__4.cljs$lang$applyTo;
G__6950.cljs$core$IFn$_invoke$arity$0 = G__6950__0;
G__6950.cljs$core$IFn$_invoke$arity$1 = G__6950__1;
G__6950.cljs$core$IFn$_invoke$arity$2 = G__6950__2;
G__6950.cljs$core$IFn$_invoke$arity$3 = G__6950__3;
G__6950.cljs$core$IFn$_invoke$arity$variadic = G__6950__4.cljs$core$IFn$_invoke$arity$variadic;
return G__6950;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__6956 = null;
var G__6956__0 = (function (){
var G__6934 = (function (){var G__6935 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__6935) : g.call(null,G__6935));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__6934) : f.call(null,G__6934));
});
var G__6956__1 = (function (x){
var G__6936 = (function (){var G__6937 = (function (){var G__6938 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__6938) : h.call(null,G__6938));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__6937) : g.call(null,G__6937));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__6936) : f.call(null,G__6936));
});
var G__6956__2 = (function (x,y){
var G__6939 = (function (){var G__6940 = (function (){var G__6941 = x;
var G__6942 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__6941,G__6942) : h.call(null,G__6941,G__6942));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__6940) : g.call(null,G__6940));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__6939) : f.call(null,G__6939));
});
var G__6956__3 = (function (x,y,z){
var G__6943 = (function (){var G__6944 = (function (){var G__6945 = x;
var G__6946 = y;
var G__6947 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__6945,G__6946,G__6947) : h.call(null,G__6945,G__6946,G__6947));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__6944) : g.call(null,G__6944));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__6943) : f.call(null,G__6943));
});
var G__6956__4 = (function() { 
var G__6957__delegate = function (x,y,z,args){
var G__6948 = (function (){var G__6949 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__6949) : g.call(null,G__6949));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__6948) : f.call(null,G__6948));
};
var G__6957 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__6958__i = 0, G__6958__a = new Array(arguments.length -  3);
while (G__6958__i < G__6958__a.length) {G__6958__a[G__6958__i] = arguments[G__6958__i + 3]; ++G__6958__i;}
  args = new cljs.core.IndexedSeq(G__6958__a,0);
} 
return G__6957__delegate.call(this,x,y,z,args);};
G__6957.cljs$lang$maxFixedArity = 3;
G__6957.cljs$lang$applyTo = (function (arglist__6959){
var x = cljs.core.first(arglist__6959);
arglist__6959 = cljs.core.next(arglist__6959);
var y = cljs.core.first(arglist__6959);
arglist__6959 = cljs.core.next(arglist__6959);
var z = cljs.core.first(arglist__6959);
var args = cljs.core.rest(arglist__6959);
return G__6957__delegate(x,y,z,args);
});
G__6957.cljs$core$IFn$_invoke$arity$variadic = G__6957__delegate;
return G__6957;
})()
;
G__6956 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__6956__0.call(this);
case 1:
return G__6956__1.call(this,x);
case 2:
return G__6956__2.call(this,x,y);
case 3:
return G__6956__3.call(this,x,y,z);
default:
var G__6960 = null;
if (arguments.length > 3) {
var G__6961__i = 0, G__6961__a = new Array(arguments.length -  3);
while (G__6961__i < G__6961__a.length) {G__6961__a[G__6961__i] = arguments[G__6961__i + 3]; ++G__6961__i;}
G__6960 = new cljs.core.IndexedSeq(G__6961__a,0);
}
return G__6956__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__6960);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6956.cljs$lang$maxFixedArity = 3;
G__6956.cljs$lang$applyTo = G__6956__4.cljs$lang$applyTo;
G__6956.cljs$core$IFn$_invoke$arity$0 = G__6956__0;
G__6956.cljs$core$IFn$_invoke$arity$1 = G__6956__1;
G__6956.cljs$core$IFn$_invoke$arity$2 = G__6956__2;
G__6956.cljs$core$IFn$_invoke$arity$3 = G__6956__3;
G__6956.cljs$core$IFn$_invoke$arity$variadic = G__6956__4.cljs$core$IFn$_invoke$arity$variadic;
return G__6956;
})()
});
var comp__4 = (function() { 
var G__6962__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__6963__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__6964 = cljs.core.first(fs__$2).call(null,ret);
var G__6965 = cljs.core.next(fs__$2);
ret = G__6964;
fs__$2 = G__6965;
continue;
} else {
return ret;
}
break;
}
};
var G__6963 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__6966__i = 0, G__6966__a = new Array(arguments.length -  0);
while (G__6966__i < G__6966__a.length) {G__6966__a[G__6966__i] = arguments[G__6966__i + 0]; ++G__6966__i;}
  args = new cljs.core.IndexedSeq(G__6966__a,0);
} 
return G__6963__delegate.call(this,args);};
G__6963.cljs$lang$maxFixedArity = 0;
G__6963.cljs$lang$applyTo = (function (arglist__6967){
var args = cljs.core.seq(arglist__6967);
return G__6963__delegate(args);
});
G__6963.cljs$core$IFn$_invoke$arity$variadic = G__6963__delegate;
return G__6963;
})()
;
;})(fs__$1))
};
var G__6962 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__6968__i = 0, G__6968__a = new Array(arguments.length -  3);
while (G__6968__i < G__6968__a.length) {G__6968__a[G__6968__i] = arguments[G__6968__i + 3]; ++G__6968__i;}
  fs = new cljs.core.IndexedSeq(G__6968__a,0);
} 
return G__6962__delegate.call(this,f1,f2,f3,fs);};
G__6962.cljs$lang$maxFixedArity = 3;
G__6962.cljs$lang$applyTo = (function (arglist__6969){
var f1 = cljs.core.first(arglist__6969);
arglist__6969 = cljs.core.next(arglist__6969);
var f2 = cljs.core.first(arglist__6969);
arglist__6969 = cljs.core.next(arglist__6969);
var f3 = cljs.core.first(arglist__6969);
var fs = cljs.core.rest(arglist__6969);
return G__6962__delegate(f1,f2,f3,fs);
});
G__6962.cljs$core$IFn$_invoke$arity$variadic = G__6962__delegate;
return G__6962;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__6970 = null;
if (arguments.length > 3) {
var G__6971__i = 0, G__6971__a = new Array(arguments.length -  3);
while (G__6971__i < G__6971__a.length) {G__6971__a[G__6971__i] = arguments[G__6971__i + 3]; ++G__6971__i;}
G__6970 = new cljs.core.IndexedSeq(G__6971__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__6970);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__7056 = null;
var G__7056__0 = (function (){
var G__7014 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7014) : f.call(null,G__7014));
});
var G__7056__1 = (function (x){
var G__7015 = arg1;
var G__7016 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7015,G__7016) : f.call(null,G__7015,G__7016));
});
var G__7056__2 = (function (x,y){
var G__7017 = arg1;
var G__7018 = x;
var G__7019 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7017,G__7018,G__7019) : f.call(null,G__7017,G__7018,G__7019));
});
var G__7056__3 = (function (x,y,z){
var G__7020 = arg1;
var G__7021 = x;
var G__7022 = y;
var G__7023 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7020,G__7021,G__7022,G__7023) : f.call(null,G__7020,G__7021,G__7022,G__7023));
});
var G__7056__4 = (function() { 
var G__7057__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__7057 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7058__i = 0, G__7058__a = new Array(arguments.length -  3);
while (G__7058__i < G__7058__a.length) {G__7058__a[G__7058__i] = arguments[G__7058__i + 3]; ++G__7058__i;}
  args = new cljs.core.IndexedSeq(G__7058__a,0);
} 
return G__7057__delegate.call(this,x,y,z,args);};
G__7057.cljs$lang$maxFixedArity = 3;
G__7057.cljs$lang$applyTo = (function (arglist__7059){
var x = cljs.core.first(arglist__7059);
arglist__7059 = cljs.core.next(arglist__7059);
var y = cljs.core.first(arglist__7059);
arglist__7059 = cljs.core.next(arglist__7059);
var z = cljs.core.first(arglist__7059);
var args = cljs.core.rest(arglist__7059);
return G__7057__delegate(x,y,z,args);
});
G__7057.cljs$core$IFn$_invoke$arity$variadic = G__7057__delegate;
return G__7057;
})()
;
G__7056 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__7056__0.call(this);
case 1:
return G__7056__1.call(this,x);
case 2:
return G__7056__2.call(this,x,y);
case 3:
return G__7056__3.call(this,x,y,z);
default:
var G__7060 = null;
if (arguments.length > 3) {
var G__7061__i = 0, G__7061__a = new Array(arguments.length -  3);
while (G__7061__i < G__7061__a.length) {G__7061__a[G__7061__i] = arguments[G__7061__i + 3]; ++G__7061__i;}
G__7060 = new cljs.core.IndexedSeq(G__7061__a,0);
}
return G__7056__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7060);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7056.cljs$lang$maxFixedArity = 3;
G__7056.cljs$lang$applyTo = G__7056__4.cljs$lang$applyTo;
G__7056.cljs$core$IFn$_invoke$arity$0 = G__7056__0;
G__7056.cljs$core$IFn$_invoke$arity$1 = G__7056__1;
G__7056.cljs$core$IFn$_invoke$arity$2 = G__7056__2;
G__7056.cljs$core$IFn$_invoke$arity$3 = G__7056__3;
G__7056.cljs$core$IFn$_invoke$arity$variadic = G__7056__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7056;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__7062 = null;
var G__7062__0 = (function (){
var G__7024 = arg1;
var G__7025 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7024,G__7025) : f.call(null,G__7024,G__7025));
});
var G__7062__1 = (function (x){
var G__7026 = arg1;
var G__7027 = arg2;
var G__7028 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7026,G__7027,G__7028) : f.call(null,G__7026,G__7027,G__7028));
});
var G__7062__2 = (function (x,y){
var G__7029 = arg1;
var G__7030 = arg2;
var G__7031 = x;
var G__7032 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7029,G__7030,G__7031,G__7032) : f.call(null,G__7029,G__7030,G__7031,G__7032));
});
var G__7062__3 = (function (x,y,z){
var G__7033 = arg1;
var G__7034 = arg2;
var G__7035 = x;
var G__7036 = y;
var G__7037 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7033,G__7034,G__7035,G__7036,G__7037) : f.call(null,G__7033,G__7034,G__7035,G__7036,G__7037));
});
var G__7062__4 = (function() { 
var G__7063__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__7063 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7064__i = 0, G__7064__a = new Array(arguments.length -  3);
while (G__7064__i < G__7064__a.length) {G__7064__a[G__7064__i] = arguments[G__7064__i + 3]; ++G__7064__i;}
  args = new cljs.core.IndexedSeq(G__7064__a,0);
} 
return G__7063__delegate.call(this,x,y,z,args);};
G__7063.cljs$lang$maxFixedArity = 3;
G__7063.cljs$lang$applyTo = (function (arglist__7065){
var x = cljs.core.first(arglist__7065);
arglist__7065 = cljs.core.next(arglist__7065);
var y = cljs.core.first(arglist__7065);
arglist__7065 = cljs.core.next(arglist__7065);
var z = cljs.core.first(arglist__7065);
var args = cljs.core.rest(arglist__7065);
return G__7063__delegate(x,y,z,args);
});
G__7063.cljs$core$IFn$_invoke$arity$variadic = G__7063__delegate;
return G__7063;
})()
;
G__7062 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__7062__0.call(this);
case 1:
return G__7062__1.call(this,x);
case 2:
return G__7062__2.call(this,x,y);
case 3:
return G__7062__3.call(this,x,y,z);
default:
var G__7066 = null;
if (arguments.length > 3) {
var G__7067__i = 0, G__7067__a = new Array(arguments.length -  3);
while (G__7067__i < G__7067__a.length) {G__7067__a[G__7067__i] = arguments[G__7067__i + 3]; ++G__7067__i;}
G__7066 = new cljs.core.IndexedSeq(G__7067__a,0);
}
return G__7062__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7066);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7062.cljs$lang$maxFixedArity = 3;
G__7062.cljs$lang$applyTo = G__7062__4.cljs$lang$applyTo;
G__7062.cljs$core$IFn$_invoke$arity$0 = G__7062__0;
G__7062.cljs$core$IFn$_invoke$arity$1 = G__7062__1;
G__7062.cljs$core$IFn$_invoke$arity$2 = G__7062__2;
G__7062.cljs$core$IFn$_invoke$arity$3 = G__7062__3;
G__7062.cljs$core$IFn$_invoke$arity$variadic = G__7062__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7062;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__7068 = null;
var G__7068__0 = (function (){
var G__7038 = arg1;
var G__7039 = arg2;
var G__7040 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7038,G__7039,G__7040) : f.call(null,G__7038,G__7039,G__7040));
});
var G__7068__1 = (function (x){
var G__7041 = arg1;
var G__7042 = arg2;
var G__7043 = arg3;
var G__7044 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7041,G__7042,G__7043,G__7044) : f.call(null,G__7041,G__7042,G__7043,G__7044));
});
var G__7068__2 = (function (x,y){
var G__7045 = arg1;
var G__7046 = arg2;
var G__7047 = arg3;
var G__7048 = x;
var G__7049 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7045,G__7046,G__7047,G__7048,G__7049) : f.call(null,G__7045,G__7046,G__7047,G__7048,G__7049));
});
var G__7068__3 = (function (x,y,z){
var G__7050 = arg1;
var G__7051 = arg2;
var G__7052 = arg3;
var G__7053 = x;
var G__7054 = y;
var G__7055 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__7050,G__7051,G__7052,G__7053,G__7054,G__7055) : f.call(null,G__7050,G__7051,G__7052,G__7053,G__7054,G__7055));
});
var G__7068__4 = (function() { 
var G__7069__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__7069 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7070__i = 0, G__7070__a = new Array(arguments.length -  3);
while (G__7070__i < G__7070__a.length) {G__7070__a[G__7070__i] = arguments[G__7070__i + 3]; ++G__7070__i;}
  args = new cljs.core.IndexedSeq(G__7070__a,0);
} 
return G__7069__delegate.call(this,x,y,z,args);};
G__7069.cljs$lang$maxFixedArity = 3;
G__7069.cljs$lang$applyTo = (function (arglist__7071){
var x = cljs.core.first(arglist__7071);
arglist__7071 = cljs.core.next(arglist__7071);
var y = cljs.core.first(arglist__7071);
arglist__7071 = cljs.core.next(arglist__7071);
var z = cljs.core.first(arglist__7071);
var args = cljs.core.rest(arglist__7071);
return G__7069__delegate(x,y,z,args);
});
G__7069.cljs$core$IFn$_invoke$arity$variadic = G__7069__delegate;
return G__7069;
})()
;
G__7068 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__7068__0.call(this);
case 1:
return G__7068__1.call(this,x);
case 2:
return G__7068__2.call(this,x,y);
case 3:
return G__7068__3.call(this,x,y,z);
default:
var G__7072 = null;
if (arguments.length > 3) {
var G__7073__i = 0, G__7073__a = new Array(arguments.length -  3);
while (G__7073__i < G__7073__a.length) {G__7073__a[G__7073__i] = arguments[G__7073__i + 3]; ++G__7073__i;}
G__7072 = new cljs.core.IndexedSeq(G__7073__a,0);
}
return G__7068__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7072);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7068.cljs$lang$maxFixedArity = 3;
G__7068.cljs$lang$applyTo = G__7068__4.cljs$lang$applyTo;
G__7068.cljs$core$IFn$_invoke$arity$0 = G__7068__0;
G__7068.cljs$core$IFn$_invoke$arity$1 = G__7068__1;
G__7068.cljs$core$IFn$_invoke$arity$2 = G__7068__2;
G__7068.cljs$core$IFn$_invoke$arity$3 = G__7068__3;
G__7068.cljs$core$IFn$_invoke$arity$variadic = G__7068__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7068;
})()
});
var partial__5 = (function() { 
var G__7074__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__7075__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__7075 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__7076__i = 0, G__7076__a = new Array(arguments.length -  0);
while (G__7076__i < G__7076__a.length) {G__7076__a[G__7076__i] = arguments[G__7076__i + 0]; ++G__7076__i;}
  args = new cljs.core.IndexedSeq(G__7076__a,0);
} 
return G__7075__delegate.call(this,args);};
G__7075.cljs$lang$maxFixedArity = 0;
G__7075.cljs$lang$applyTo = (function (arglist__7077){
var args = cljs.core.seq(arglist__7077);
return G__7075__delegate(args);
});
G__7075.cljs$core$IFn$_invoke$arity$variadic = G__7075__delegate;
return G__7075;
})()
;
};
var G__7074 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__7078__i = 0, G__7078__a = new Array(arguments.length -  4);
while (G__7078__i < G__7078__a.length) {G__7078__a[G__7078__i] = arguments[G__7078__i + 4]; ++G__7078__i;}
  more = new cljs.core.IndexedSeq(G__7078__a,0);
} 
return G__7074__delegate.call(this,f,arg1,arg2,arg3,more);};
G__7074.cljs$lang$maxFixedArity = 4;
G__7074.cljs$lang$applyTo = (function (arglist__7079){
var f = cljs.core.first(arglist__7079);
arglist__7079 = cljs.core.next(arglist__7079);
var arg1 = cljs.core.first(arglist__7079);
arglist__7079 = cljs.core.next(arglist__7079);
var arg2 = cljs.core.first(arglist__7079);
arglist__7079 = cljs.core.next(arglist__7079);
var arg3 = cljs.core.first(arglist__7079);
var more = cljs.core.rest(arglist__7079);
return G__7074__delegate(f,arg1,arg2,arg3,more);
});
G__7074.cljs$core$IFn$_invoke$arity$variadic = G__7074__delegate;
return G__7074;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__7080 = null;
if (arguments.length > 4) {
var G__7081__i = 0, G__7081__a = new Array(arguments.length -  4);
while (G__7081__i < G__7081__a.length) {G__7081__a[G__7081__i] = arguments[G__7081__i + 4]; ++G__7081__i;}
G__7080 = new cljs.core.IndexedSeq(G__7081__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__7080);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__7114 = null;
var G__7114__1 = (function (a){
var G__7098 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7098) : f.call(null,G__7098));
});
var G__7114__2 = (function (a,b){
var G__7099 = (((a == null))?x:a);
var G__7100 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7099,G__7100) : f.call(null,G__7099,G__7100));
});
var G__7114__3 = (function (a,b,c){
var G__7101 = (((a == null))?x:a);
var G__7102 = b;
var G__7103 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7101,G__7102,G__7103) : f.call(null,G__7101,G__7102,G__7103));
});
var G__7114__4 = (function() { 
var G__7115__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__7115 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__7116__i = 0, G__7116__a = new Array(arguments.length -  3);
while (G__7116__i < G__7116__a.length) {G__7116__a[G__7116__i] = arguments[G__7116__i + 3]; ++G__7116__i;}
  ds = new cljs.core.IndexedSeq(G__7116__a,0);
} 
return G__7115__delegate.call(this,a,b,c,ds);};
G__7115.cljs$lang$maxFixedArity = 3;
G__7115.cljs$lang$applyTo = (function (arglist__7117){
var a = cljs.core.first(arglist__7117);
arglist__7117 = cljs.core.next(arglist__7117);
var b = cljs.core.first(arglist__7117);
arglist__7117 = cljs.core.next(arglist__7117);
var c = cljs.core.first(arglist__7117);
var ds = cljs.core.rest(arglist__7117);
return G__7115__delegate(a,b,c,ds);
});
G__7115.cljs$core$IFn$_invoke$arity$variadic = G__7115__delegate;
return G__7115;
})()
;
G__7114 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__7114__1.call(this,a);
case 2:
return G__7114__2.call(this,a,b);
case 3:
return G__7114__3.call(this,a,b,c);
default:
var G__7118 = null;
if (arguments.length > 3) {
var G__7119__i = 0, G__7119__a = new Array(arguments.length -  3);
while (G__7119__i < G__7119__a.length) {G__7119__a[G__7119__i] = arguments[G__7119__i + 3]; ++G__7119__i;}
G__7118 = new cljs.core.IndexedSeq(G__7119__a,0);
}
return G__7114__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__7118);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7114.cljs$lang$maxFixedArity = 3;
G__7114.cljs$lang$applyTo = G__7114__4.cljs$lang$applyTo;
G__7114.cljs$core$IFn$_invoke$arity$1 = G__7114__1;
G__7114.cljs$core$IFn$_invoke$arity$2 = G__7114__2;
G__7114.cljs$core$IFn$_invoke$arity$3 = G__7114__3;
G__7114.cljs$core$IFn$_invoke$arity$variadic = G__7114__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7114;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__7120 = null;
var G__7120__2 = (function (a,b){
var G__7104 = (((a == null))?x:a);
var G__7105 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7104,G__7105) : f.call(null,G__7104,G__7105));
});
var G__7120__3 = (function (a,b,c){
var G__7106 = (((a == null))?x:a);
var G__7107 = (((b == null))?y:b);
var G__7108 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7106,G__7107,G__7108) : f.call(null,G__7106,G__7107,G__7108));
});
var G__7120__4 = (function() { 
var G__7121__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__7121 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__7122__i = 0, G__7122__a = new Array(arguments.length -  3);
while (G__7122__i < G__7122__a.length) {G__7122__a[G__7122__i] = arguments[G__7122__i + 3]; ++G__7122__i;}
  ds = new cljs.core.IndexedSeq(G__7122__a,0);
} 
return G__7121__delegate.call(this,a,b,c,ds);};
G__7121.cljs$lang$maxFixedArity = 3;
G__7121.cljs$lang$applyTo = (function (arglist__7123){
var a = cljs.core.first(arglist__7123);
arglist__7123 = cljs.core.next(arglist__7123);
var b = cljs.core.first(arglist__7123);
arglist__7123 = cljs.core.next(arglist__7123);
var c = cljs.core.first(arglist__7123);
var ds = cljs.core.rest(arglist__7123);
return G__7121__delegate(a,b,c,ds);
});
G__7121.cljs$core$IFn$_invoke$arity$variadic = G__7121__delegate;
return G__7121;
})()
;
G__7120 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__7120__2.call(this,a,b);
case 3:
return G__7120__3.call(this,a,b,c);
default:
var G__7124 = null;
if (arguments.length > 3) {
var G__7125__i = 0, G__7125__a = new Array(arguments.length -  3);
while (G__7125__i < G__7125__a.length) {G__7125__a[G__7125__i] = arguments[G__7125__i + 3]; ++G__7125__i;}
G__7124 = new cljs.core.IndexedSeq(G__7125__a,0);
}
return G__7120__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__7124);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7120.cljs$lang$maxFixedArity = 3;
G__7120.cljs$lang$applyTo = G__7120__4.cljs$lang$applyTo;
G__7120.cljs$core$IFn$_invoke$arity$2 = G__7120__2;
G__7120.cljs$core$IFn$_invoke$arity$3 = G__7120__3;
G__7120.cljs$core$IFn$_invoke$arity$variadic = G__7120__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7120;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__7126 = null;
var G__7126__2 = (function (a,b){
var G__7109 = (((a == null))?x:a);
var G__7110 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7109,G__7110) : f.call(null,G__7109,G__7110));
});
var G__7126__3 = (function (a,b,c){
var G__7111 = (((a == null))?x:a);
var G__7112 = (((b == null))?y:b);
var G__7113 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7111,G__7112,G__7113) : f.call(null,G__7111,G__7112,G__7113));
});
var G__7126__4 = (function() { 
var G__7127__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__7127 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__7128__i = 0, G__7128__a = new Array(arguments.length -  3);
while (G__7128__i < G__7128__a.length) {G__7128__a[G__7128__i] = arguments[G__7128__i + 3]; ++G__7128__i;}
  ds = new cljs.core.IndexedSeq(G__7128__a,0);
} 
return G__7127__delegate.call(this,a,b,c,ds);};
G__7127.cljs$lang$maxFixedArity = 3;
G__7127.cljs$lang$applyTo = (function (arglist__7129){
var a = cljs.core.first(arglist__7129);
arglist__7129 = cljs.core.next(arglist__7129);
var b = cljs.core.first(arglist__7129);
arglist__7129 = cljs.core.next(arglist__7129);
var c = cljs.core.first(arglist__7129);
var ds = cljs.core.rest(arglist__7129);
return G__7127__delegate(a,b,c,ds);
});
G__7127.cljs$core$IFn$_invoke$arity$variadic = G__7127__delegate;
return G__7127;
})()
;
G__7126 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__7126__2.call(this,a,b);
case 3:
return G__7126__3.call(this,a,b,c);
default:
var G__7130 = null;
if (arguments.length > 3) {
var G__7131__i = 0, G__7131__a = new Array(arguments.length -  3);
while (G__7131__i < G__7131__a.length) {G__7131__a[G__7131__i] = arguments[G__7131__i + 3]; ++G__7131__i;}
G__7130 = new cljs.core.IndexedSeq(G__7131__a,0);
}
return G__7126__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__7130);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7126.cljs$lang$maxFixedArity = 3;
G__7126.cljs$lang$applyTo = G__7126__4.cljs$lang$applyTo;
G__7126.cljs$core$IFn$_invoke$arity$2 = G__7126__2;
G__7126.cljs$core$IFn$_invoke$arity$3 = G__7126__3;
G__7126.cljs$core$IFn$_invoke$arity$variadic = G__7126__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7126;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__7162 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__7162) : cljs.core.volatile_BANG_.call(null,G__7162));
})();
return ((function (i){
return (function() {
var G__7192 = null;
var G__7192__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__7192__1 = (function (result){
var G__7163 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__7163) : rf.call(null,G__7163));
});
var G__7192__2 = (function (result,input){
var G__7164 = result;
var G__7165 = (function (){var G__7166 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__7167 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7166,G__7167) : f.call(null,G__7166,G__7167));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7164,G__7165) : rf.call(null,G__7164,G__7165));
});
G__7192 = function(result,input){
switch(arguments.length){
case 0:
return G__7192__0.call(this);
case 1:
return G__7192__1.call(this,result);
case 2:
return G__7192__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7192.cljs$core$IFn$_invoke$arity$0 = G__7192__0;
G__7192.cljs$core$IFn$_invoke$arity$1 = G__7192__1;
G__7192.cljs$core$IFn$_invoke$arity$2 = G__7192__2;
return G__7192;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll__$1);
if(temp__4425__auto__){
var s = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4014__auto___7193 = size;
var i_7194 = (0);
while(true){
if((i_7194 < n__4014__auto___7193)){
cljs.core.chunk_append(b,(function (){var G__7188 = (idx + i_7194);
var G__7189 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_7194);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7188,G__7189) : f.call(null,G__7188,G__7189));
})());

var G__7195 = (i_7194 + (1));
i_7194 = G__7195;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__7190 = idx;
var G__7191 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7190,G__7191) : f.call(null,G__7190,G__7191));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__7214 = null;
var G__7214__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__7214__1 = (function (result){
var G__7208 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__7208) : rf.call(null,G__7208));
});
var G__7214__2 = (function (result,input){
var v = (function (){var G__7209 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7209) : f.call(null,G__7209));
})();
if((v == null)){
return result;
} else {
var G__7210 = result;
var G__7211 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7210,G__7211) : rf.call(null,G__7210,G__7211));
}
});
G__7214 = function(result,input){
switch(arguments.length){
case 0:
return G__7214__0.call(this);
case 1:
return G__7214__1.call(this,result);
case 2:
return G__7214__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7214.cljs$core$IFn$_invoke$arity$0 = G__7214__0;
G__7214.cljs$core$IFn$_invoke$arity$1 = G__7214__1;
G__7214.cljs$core$IFn$_invoke$arity$2 = G__7214__2;
return G__7214;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4014__auto___7215 = size;
var i_7216 = (0);
while(true){
if((i_7216 < n__4014__auto___7215)){
var x_7217 = (function (){var G__7212 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_7216);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7212) : f.call(null,G__7212));
})();
if((x_7217 == null)){
} else {
cljs.core.chunk_append(b,x_7217);
}

var G__7218 = (i_7216 + (1));
i_7216 = G__7218;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__7213 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7213) : f.call(null,G__7213));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition1$ = 16386;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
})
cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__7219 = cljs.core.seq(self__.watches);
var chunk__7220 = null;
var count__7221 = (0);
var i__7222 = (0);
while(true){
if((i__7222 < count__7221)){
var vec__7223 = chunk__7220.cljs$core$IIndexed$_nth$arity$2(null,i__7222);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7223,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7223,(1),null);
var G__7224_7234 = key;
var G__7225_7235 = this$__$1;
var G__7226_7236 = oldval;
var G__7227_7237 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7224_7234,G__7225_7235,G__7226_7236,G__7227_7237) : f.call(null,G__7224_7234,G__7225_7235,G__7226_7236,G__7227_7237));

var G__7238 = seq__7219;
var G__7239 = chunk__7220;
var G__7240 = count__7221;
var G__7241 = (i__7222 + (1));
seq__7219 = G__7238;
chunk__7220 = G__7239;
count__7221 = G__7240;
i__7222 = G__7241;
continue;
} else {
var temp__4425__auto__ = cljs.core.seq(seq__7219);
if(temp__4425__auto__){
var seq__7219__$1 = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__7219__$1)){
var c__3914__auto__ = cljs.core.chunk_first(seq__7219__$1);
var G__7242 = cljs.core.chunk_rest(seq__7219__$1);
var G__7243 = c__3914__auto__;
var G__7244 = cljs.core.count(c__3914__auto__);
var G__7245 = (0);
seq__7219 = G__7242;
chunk__7220 = G__7243;
count__7221 = G__7244;
i__7222 = G__7245;
continue;
} else {
var vec__7228 = cljs.core.first(seq__7219__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7228,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7228,(1),null);
var G__7229_7246 = key;
var G__7230_7247 = this$__$1;
var G__7231_7248 = oldval;
var G__7232_7249 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7229_7246,G__7230_7247,G__7231_7248,G__7232_7249) : f.call(null,G__7229_7246,G__7230_7247,G__7231_7248,G__7232_7249));

var G__7250 = cljs.core.next(seq__7219__$1);
var G__7251 = null;
var G__7252 = (0);
var G__7253 = (0);
seq__7219 = G__7250;
chunk__7220 = G__7251;
count__7221 = G__7252;
i__7222 = G__7253;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__7233 = this$__$1;
return goog.getUid(G__7233);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__7257__delegate = function (x,p__7254){
var map__7256 = p__7254;
var map__7256__$1 = ((cljs.core.seq_QMARK_(map__7256))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__7256):map__7256);
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7256__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7256__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__7257 = function (x,var_args){
var p__7254 = null;
if (arguments.length > 1) {
var G__7258__i = 0, G__7258__a = new Array(arguments.length -  1);
while (G__7258__i < G__7258__a.length) {G__7258__a[G__7258__i] = arguments[G__7258__i + 1]; ++G__7258__i;}
  p__7254 = new cljs.core.IndexedSeq(G__7258__a,0);
} 
return G__7257__delegate.call(this,x,p__7254);};
G__7257.cljs$lang$maxFixedArity = 1;
G__7257.cljs$lang$applyTo = (function (arglist__7259){
var x = cljs.core.first(arglist__7259);
var p__7254 = cljs.core.rest(arglist__7259);
return G__7257__delegate(x,p__7254);
});
G__7257.cljs$core$IFn$_invoke$arity$variadic = G__7257__delegate;
return G__7257;
})()
;
atom = function(x,var_args){
var p__7254 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__7260 = null;
if (arguments.length > 1) {
var G__7261__i = 0, G__7261__a = new Array(arguments.length -  1);
while (G__7261__i < G__7261__a.length) {G__7261__a[G__7261__i] = arguments[G__7261__i + 1]; ++G__7261__i;}
G__7260 = new cljs.core.IndexedSeq(G__7261__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__7260);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__7264 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__7264) : validate.call(null,G__7264));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__7265 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__7265) : cljs.core.pr_str.call(null,G__7265));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__7272 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7272) : f.call(null,G__7272));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__7273 = a.state;
var G__7274 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7273,G__7274) : f.call(null,G__7273,G__7274));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__7275 = a.state;
var G__7276 = x;
var G__7277 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7275,G__7276,G__7277) : f.call(null,G__7275,G__7276,G__7277));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__7278__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__7278 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__7279__i = 0, G__7279__a = new Array(arguments.length -  4);
while (G__7279__i < G__7279__a.length) {G__7279__a[G__7279__i] = arguments[G__7279__i + 4]; ++G__7279__i;}
  more = new cljs.core.IndexedSeq(G__7279__a,0);
} 
return G__7278__delegate.call(this,a,f,x,y,more);};
G__7278.cljs$lang$maxFixedArity = 4;
G__7278.cljs$lang$applyTo = (function (arglist__7280){
var a = cljs.core.first(arglist__7280);
arglist__7280 = cljs.core.next(arglist__7280);
var f = cljs.core.first(arglist__7280);
arglist__7280 = cljs.core.next(arglist__7280);
var x = cljs.core.first(arglist__7280);
arglist__7280 = cljs.core.next(arglist__7280);
var y = cljs.core.first(arglist__7280);
var more = cljs.core.rest(arglist__7280);
return G__7278__delegate(a,f,x,y,more);
});
G__7278.cljs$core$IFn$_invoke$arity$variadic = G__7278__delegate;
return G__7278;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__7281 = null;
if (arguments.length > 4) {
var G__7282__i = 0, G__7282__a = new Array(arguments.length -  4);
while (G__7282__i < G__7282__a.length) {G__7282__a[G__7282__i] = arguments[G__7282__i + 4]; ++G__7282__i;}
G__7281 = new cljs.core.IndexedSeq(G__7282__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__7281);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition0$ = 32768;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__7349 = null;
var G__7349__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__7349__1 = (function (result){
var G__7316 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__7316) : rf.call(null,G__7316));
});
var G__7349__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__7317 = i;
var G__7318 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7317,G__7318) : f.call(null,G__7317,G__7318));
})();
if((v == null)){
return result;
} else {
var G__7319 = result;
var G__7320 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7319,G__7320) : rf.call(null,G__7319,G__7320));
}
});
G__7349 = function(result,input){
switch(arguments.length){
case 0:
return G__7349__0.call(this);
case 1:
return G__7349__1.call(this,result);
case 2:
return G__7349__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7349.cljs$core$IFn$_invoke$arity$0 = G__7349__0;
G__7349.cljs$core$IFn$_invoke$arity$1 = G__7349__1;
G__7349.cljs$core$IFn$_invoke$arity$2 = G__7349__2;
return G__7349;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll__$1);
if(temp__4425__auto__){
var s = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4014__auto___7350 = size;
var i_7351 = (0);
while(true){
if((i_7351 < n__4014__auto___7350)){
var x_7352 = (function (){var G__7345 = (idx + i_7351);
var G__7346 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_7351);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7345,G__7346) : f.call(null,G__7345,G__7346));
})();
if((x_7352 == null)){
} else {
cljs.core.chunk_append(b,x_7352);
}

var G__7353 = (i_7351 + (1));
i_7351 = G__7353;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__7347 = idx;
var G__7348 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7347,G__7348) : f.call(null,G__7347,G__7348));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__7567 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__7567) : p.call(null,G__7567));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3115__auto__ = (function (){var G__7569 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__7569) : p.call(null,G__7569));
})();
if(cljs.core.truth_(and__3115__auto__)){
var G__7570 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__7570) : p.call(null,G__7570));
} else {
return and__3115__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3115__auto__ = (function (){var G__7572 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__7572) : p.call(null,G__7572));
})();
if(cljs.core.truth_(and__3115__auto__)){
var and__3115__auto____$1 = (function (){var G__7574 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__7574) : p.call(null,G__7574));
})();
if(cljs.core.truth_(and__3115__auto____$1)){
var G__7575 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__7575) : p.call(null,G__7575));
} else {
return and__3115__auto____$1;
}
} else {
return and__3115__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__7744__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__7744 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7745__i = 0, G__7745__a = new Array(arguments.length -  3);
while (G__7745__i < G__7745__a.length) {G__7745__a[G__7745__i] = arguments[G__7745__i + 3]; ++G__7745__i;}
  args = new cljs.core.IndexedSeq(G__7745__a,0);
} 
return G__7744__delegate.call(this,x,y,z,args);};
G__7744.cljs$lang$maxFixedArity = 3;
G__7744.cljs$lang$applyTo = (function (arglist__7746){
var x = cljs.core.first(arglist__7746);
arglist__7746 = cljs.core.next(arglist__7746);
var y = cljs.core.first(arglist__7746);
arglist__7746 = cljs.core.next(arglist__7746);
var z = cljs.core.first(arglist__7746);
var args = cljs.core.rest(arglist__7746);
return G__7744__delegate(x,y,z,args);
});
G__7744.cljs$core$IFn$_invoke$arity$variadic = G__7744__delegate;
return G__7744;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__7747 = null;
if (arguments.length > 3) {
var G__7748__i = 0, G__7748__a = new Array(arguments.length -  3);
while (G__7748__i < G__7748__a.length) {G__7748__a[G__7748__i] = arguments[G__7748__i + 3]; ++G__7748__i;}
G__7747 = new cljs.core.IndexedSeq(G__7748__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7747);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3115__auto__ = (function (){var G__7607 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7607) : p1.call(null,G__7607));
})();
if(cljs.core.truth_(and__3115__auto__)){
var G__7608 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7608) : p2.call(null,G__7608));
} else {
return and__3115__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3115__auto__ = (function (){var G__7610 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7610) : p1.call(null,G__7610));
})();
if(cljs.core.truth_(and__3115__auto__)){
var and__3115__auto____$1 = (function (){var G__7612 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7612) : p1.call(null,G__7612));
})();
if(cljs.core.truth_(and__3115__auto____$1)){
var and__3115__auto____$2 = (function (){var G__7614 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7614) : p2.call(null,G__7614));
})();
if(cljs.core.truth_(and__3115__auto____$2)){
var G__7615 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7615) : p2.call(null,G__7615));
} else {
return and__3115__auto____$2;
}
} else {
return and__3115__auto____$1;
}
} else {
return and__3115__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3115__auto__ = (function (){var G__7617 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7617) : p1.call(null,G__7617));
})();
if(cljs.core.truth_(and__3115__auto__)){
var and__3115__auto____$1 = (function (){var G__7619 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7619) : p1.call(null,G__7619));
})();
if(cljs.core.truth_(and__3115__auto____$1)){
var and__3115__auto____$2 = (function (){var G__7621 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7621) : p1.call(null,G__7621));
})();
if(cljs.core.truth_(and__3115__auto____$2)){
var and__3115__auto____$3 = (function (){var G__7623 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7623) : p2.call(null,G__7623));
})();
if(cljs.core.truth_(and__3115__auto____$3)){
var and__3115__auto____$4 = (function (){var G__7625 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7625) : p2.call(null,G__7625));
})();
if(cljs.core.truth_(and__3115__auto____$4)){
var G__7626 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7626) : p2.call(null,G__7626));
} else {
return and__3115__auto____$4;
}
} else {
return and__3115__auto____$3;
}
} else {
return and__3115__auto____$2;
}
} else {
return and__3115__auto____$1;
}
} else {
return and__3115__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__7749__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__7354_SHARP_){
var and__3115__auto__ = (function (){var G__7631 = p1__7354_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7631) : p1.call(null,G__7631));
})();
if(cljs.core.truth_(and__3115__auto__)){
var G__7632 = p1__7354_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7632) : p2.call(null,G__7632));
} else {
return and__3115__auto__;
}
}),args)));
};
var G__7749 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7750__i = 0, G__7750__a = new Array(arguments.length -  3);
while (G__7750__i < G__7750__a.length) {G__7750__a[G__7750__i] = arguments[G__7750__i + 3]; ++G__7750__i;}
  args = new cljs.core.IndexedSeq(G__7750__a,0);
} 
return G__7749__delegate.call(this,x,y,z,args);};
G__7749.cljs$lang$maxFixedArity = 3;
G__7749.cljs$lang$applyTo = (function (arglist__7751){
var x = cljs.core.first(arglist__7751);
arglist__7751 = cljs.core.next(arglist__7751);
var y = cljs.core.first(arglist__7751);
arglist__7751 = cljs.core.next(arglist__7751);
var z = cljs.core.first(arglist__7751);
var args = cljs.core.rest(arglist__7751);
return G__7749__delegate(x,y,z,args);
});
G__7749.cljs$core$IFn$_invoke$arity$variadic = G__7749__delegate;
return G__7749;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__7752 = null;
if (arguments.length > 3) {
var G__7753__i = 0, G__7753__a = new Array(arguments.length -  3);
while (G__7753__i < G__7753__a.length) {G__7753__a[G__7753__i] = arguments[G__7753__i + 3]; ++G__7753__i;}
G__7752 = new cljs.core.IndexedSeq(G__7753__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7752);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3115__auto__ = (function (){var G__7678 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7678) : p1.call(null,G__7678));
})();
if(cljs.core.truth_(and__3115__auto__)){
var and__3115__auto____$1 = (function (){var G__7680 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7680) : p2.call(null,G__7680));
})();
if(cljs.core.truth_(and__3115__auto____$1)){
var G__7681 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__7681) : p3.call(null,G__7681));
} else {
return and__3115__auto____$1;
}
} else {
return and__3115__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3115__auto__ = (function (){var G__7683 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7683) : p1.call(null,G__7683));
})();
if(cljs.core.truth_(and__3115__auto__)){
var and__3115__auto____$1 = (function (){var G__7685 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7685) : p2.call(null,G__7685));
})();
if(cljs.core.truth_(and__3115__auto____$1)){
var and__3115__auto____$2 = (function (){var G__7687 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__7687) : p3.call(null,G__7687));
})();
if(cljs.core.truth_(and__3115__auto____$2)){
var and__3115__auto____$3 = (function (){var G__7689 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7689) : p1.call(null,G__7689));
})();
if(cljs.core.truth_(and__3115__auto____$3)){
var and__3115__auto____$4 = (function (){var G__7691 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7691) : p2.call(null,G__7691));
})();
if(cljs.core.truth_(and__3115__auto____$4)){
var G__7692 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__7692) : p3.call(null,G__7692));
} else {
return and__3115__auto____$4;
}
} else {
return and__3115__auto____$3;
}
} else {
return and__3115__auto____$2;
}
} else {
return and__3115__auto____$1;
}
} else {
return and__3115__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3115__auto__ = (function (){var G__7694 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7694) : p1.call(null,G__7694));
})();
if(cljs.core.truth_(and__3115__auto__)){
var and__3115__auto____$1 = (function (){var G__7696 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7696) : p2.call(null,G__7696));
})();
if(cljs.core.truth_(and__3115__auto____$1)){
var and__3115__auto____$2 = (function (){var G__7698 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__7698) : p3.call(null,G__7698));
})();
if(cljs.core.truth_(and__3115__auto____$2)){
var and__3115__auto____$3 = (function (){var G__7700 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7700) : p1.call(null,G__7700));
})();
if(cljs.core.truth_(and__3115__auto____$3)){
var and__3115__auto____$4 = (function (){var G__7702 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7702) : p2.call(null,G__7702));
})();
if(cljs.core.truth_(and__3115__auto____$4)){
var and__3115__auto____$5 = (function (){var G__7704 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__7704) : p3.call(null,G__7704));
})();
if(cljs.core.truth_(and__3115__auto____$5)){
var and__3115__auto____$6 = (function (){var G__7706 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7706) : p1.call(null,G__7706));
})();
if(cljs.core.truth_(and__3115__auto____$6)){
var and__3115__auto____$7 = (function (){var G__7708 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7708) : p2.call(null,G__7708));
})();
if(cljs.core.truth_(and__3115__auto____$7)){
var G__7709 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__7709) : p3.call(null,G__7709));
} else {
return and__3115__auto____$7;
}
} else {
return and__3115__auto____$6;
}
} else {
return and__3115__auto____$5;
}
} else {
return and__3115__auto____$4;
}
} else {
return and__3115__auto____$3;
}
} else {
return and__3115__auto____$2;
}
} else {
return and__3115__auto____$1;
}
} else {
return and__3115__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__7754__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__7355_SHARP_){
var and__3115__auto__ = (function (){var G__7716 = p1__7355_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7716) : p1.call(null,G__7716));
})();
if(cljs.core.truth_(and__3115__auto__)){
var and__3115__auto____$1 = (function (){var G__7718 = p1__7355_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7718) : p2.call(null,G__7718));
})();
if(cljs.core.truth_(and__3115__auto____$1)){
var G__7719 = p1__7355_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__7719) : p3.call(null,G__7719));
} else {
return and__3115__auto____$1;
}
} else {
return and__3115__auto__;
}
}),args)));
};
var G__7754 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7755__i = 0, G__7755__a = new Array(arguments.length -  3);
while (G__7755__i < G__7755__a.length) {G__7755__a[G__7755__i] = arguments[G__7755__i + 3]; ++G__7755__i;}
  args = new cljs.core.IndexedSeq(G__7755__a,0);
} 
return G__7754__delegate.call(this,x,y,z,args);};
G__7754.cljs$lang$maxFixedArity = 3;
G__7754.cljs$lang$applyTo = (function (arglist__7756){
var x = cljs.core.first(arglist__7756);
arglist__7756 = cljs.core.next(arglist__7756);
var y = cljs.core.first(arglist__7756);
arglist__7756 = cljs.core.next(arglist__7756);
var z = cljs.core.first(arglist__7756);
var args = cljs.core.rest(arglist__7756);
return G__7754__delegate(x,y,z,args);
});
G__7754.cljs$core$IFn$_invoke$arity$variadic = G__7754__delegate;
return G__7754;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__7757 = null;
if (arguments.length > 3) {
var G__7758__i = 0, G__7758__a = new Array(arguments.length -  3);
while (G__7758__i < G__7758__a.length) {G__7758__a[G__7758__i] = arguments[G__7758__i + 3]; ++G__7758__i;}
G__7757 = new cljs.core.IndexedSeq(G__7758__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7757);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__7759__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__7356_SHARP_){
var G__7735 = x;
return (p1__7356_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7356_SHARP_.cljs$core$IFn$_invoke$arity$1(G__7735) : p1__7356_SHARP_.call(null,G__7735));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__7357_SHARP_){
var and__3115__auto__ = (function (){var G__7737 = x;
return (p1__7357_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7357_SHARP_.cljs$core$IFn$_invoke$arity$1(G__7737) : p1__7357_SHARP_.call(null,G__7737));
})();
if(cljs.core.truth_(and__3115__auto__)){
var G__7738 = y;
return (p1__7357_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7357_SHARP_.cljs$core$IFn$_invoke$arity$1(G__7738) : p1__7357_SHARP_.call(null,G__7738));
} else {
return and__3115__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__7358_SHARP_){
var and__3115__auto__ = (function (){var G__7740 = x;
return (p1__7358_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7358_SHARP_.cljs$core$IFn$_invoke$arity$1(G__7740) : p1__7358_SHARP_.call(null,G__7740));
})();
if(cljs.core.truth_(and__3115__auto__)){
var and__3115__auto____$1 = (function (){var G__7742 = y;
return (p1__7358_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7358_SHARP_.cljs$core$IFn$_invoke$arity$1(G__7742) : p1__7358_SHARP_.call(null,G__7742));
})();
if(cljs.core.truth_(and__3115__auto____$1)){
var G__7743 = z;
return (p1__7358_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7358_SHARP_.cljs$core$IFn$_invoke$arity$1(G__7743) : p1__7358_SHARP_.call(null,G__7743));
} else {
return and__3115__auto____$1;
}
} else {
return and__3115__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__7760__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__7359_SHARP_){
return cljs.core.every_QMARK_(p1__7359_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__7760 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7761__i = 0, G__7761__a = new Array(arguments.length -  3);
while (G__7761__i < G__7761__a.length) {G__7761__a[G__7761__i] = arguments[G__7761__i + 3]; ++G__7761__i;}
  args = new cljs.core.IndexedSeq(G__7761__a,0);
} 
return G__7760__delegate.call(this,x,y,z,args);};
G__7760.cljs$lang$maxFixedArity = 3;
G__7760.cljs$lang$applyTo = (function (arglist__7762){
var x = cljs.core.first(arglist__7762);
arglist__7762 = cljs.core.next(arglist__7762);
var y = cljs.core.first(arglist__7762);
arglist__7762 = cljs.core.next(arglist__7762);
var z = cljs.core.first(arglist__7762);
var args = cljs.core.rest(arglist__7762);
return G__7760__delegate(x,y,z,args);
});
G__7760.cljs$core$IFn$_invoke$arity$variadic = G__7760__delegate;
return G__7760;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__7763 = null;
if (arguments.length > 3) {
var G__7764__i = 0, G__7764__a = new Array(arguments.length -  3);
while (G__7764__i < G__7764__a.length) {G__7764__a[G__7764__i] = arguments[G__7764__i + 3]; ++G__7764__i;}
G__7763 = new cljs.core.IndexedSeq(G__7764__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7763);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__7759 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__7765__i = 0, G__7765__a = new Array(arguments.length -  3);
while (G__7765__i < G__7765__a.length) {G__7765__a[G__7765__i] = arguments[G__7765__i + 3]; ++G__7765__i;}
  ps = new cljs.core.IndexedSeq(G__7765__a,0);
} 
return G__7759__delegate.call(this,p1,p2,p3,ps);};
G__7759.cljs$lang$maxFixedArity = 3;
G__7759.cljs$lang$applyTo = (function (arglist__7766){
var p1 = cljs.core.first(arglist__7766);
arglist__7766 = cljs.core.next(arglist__7766);
var p2 = cljs.core.first(arglist__7766);
arglist__7766 = cljs.core.next(arglist__7766);
var p3 = cljs.core.first(arglist__7766);
var ps = cljs.core.rest(arglist__7766);
return G__7759__delegate(p1,p2,p3,ps);
});
G__7759.cljs$core$IFn$_invoke$arity$variadic = G__7759__delegate;
return G__7759;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__7767 = null;
if (arguments.length > 3) {
var G__7768__i = 0, G__7768__a = new Array(arguments.length -  3);
while (G__7768__i < G__7768__a.length) {G__7768__a[G__7768__i] = arguments[G__7768__i + 3]; ++G__7768__i;}
G__7767 = new cljs.core.IndexedSeq(G__7768__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__7767);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__7974 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__7974) : p.call(null,G__7974));
});
var sp1__2 = (function (x,y){
var or__3127__auto__ = (function (){var G__7976 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__7976) : p.call(null,G__7976));
})();
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
var G__7977 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__7977) : p.call(null,G__7977));
}
});
var sp1__3 = (function (x,y,z){
var or__3127__auto__ = (function (){var G__7979 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__7979) : p.call(null,G__7979));
})();
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (function (){var G__7981 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__7981) : p.call(null,G__7981));
})();
if(cljs.core.truth_(or__3127__auto____$1)){
return or__3127__auto____$1;
} else {
var G__7982 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__7982) : p.call(null,G__7982));
}
}
});
var sp1__4 = (function() { 
var G__8143__delegate = function (x,y,z,args){
var or__3127__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__8143 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8144__i = 0, G__8144__a = new Array(arguments.length -  3);
while (G__8144__i < G__8144__a.length) {G__8144__a[G__8144__i] = arguments[G__8144__i + 3]; ++G__8144__i;}
  args = new cljs.core.IndexedSeq(G__8144__a,0);
} 
return G__8143__delegate.call(this,x,y,z,args);};
G__8143.cljs$lang$maxFixedArity = 3;
G__8143.cljs$lang$applyTo = (function (arglist__8145){
var x = cljs.core.first(arglist__8145);
arglist__8145 = cljs.core.next(arglist__8145);
var y = cljs.core.first(arglist__8145);
arglist__8145 = cljs.core.next(arglist__8145);
var z = cljs.core.first(arglist__8145);
var args = cljs.core.rest(arglist__8145);
return G__8143__delegate(x,y,z,args);
});
G__8143.cljs$core$IFn$_invoke$arity$variadic = G__8143__delegate;
return G__8143;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__8146 = null;
if (arguments.length > 3) {
var G__8147__i = 0, G__8147__a = new Array(arguments.length -  3);
while (G__8147__i < G__8147__a.length) {G__8147__a[G__8147__i] = arguments[G__8147__i + 3]; ++G__8147__i;}
G__8146 = new cljs.core.IndexedSeq(G__8147__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8146);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3127__auto__ = (function (){var G__8014 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8014) : p1.call(null,G__8014));
})();
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
var G__8015 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8015) : p2.call(null,G__8015));
}
});
var sp2__2 = (function (x,y){
var or__3127__auto__ = (function (){var G__8017 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8017) : p1.call(null,G__8017));
})();
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (function (){var G__8019 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8019) : p1.call(null,G__8019));
})();
if(cljs.core.truth_(or__3127__auto____$1)){
return or__3127__auto____$1;
} else {
var or__3127__auto____$2 = (function (){var G__8021 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8021) : p2.call(null,G__8021));
})();
if(cljs.core.truth_(or__3127__auto____$2)){
return or__3127__auto____$2;
} else {
var G__8022 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8022) : p2.call(null,G__8022));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3127__auto__ = (function (){var G__8024 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8024) : p1.call(null,G__8024));
})();
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (function (){var G__8026 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8026) : p1.call(null,G__8026));
})();
if(cljs.core.truth_(or__3127__auto____$1)){
return or__3127__auto____$1;
} else {
var or__3127__auto____$2 = (function (){var G__8028 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8028) : p1.call(null,G__8028));
})();
if(cljs.core.truth_(or__3127__auto____$2)){
return or__3127__auto____$2;
} else {
var or__3127__auto____$3 = (function (){var G__8030 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8030) : p2.call(null,G__8030));
})();
if(cljs.core.truth_(or__3127__auto____$3)){
return or__3127__auto____$3;
} else {
var or__3127__auto____$4 = (function (){var G__8032 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8032) : p2.call(null,G__8032));
})();
if(cljs.core.truth_(or__3127__auto____$4)){
return or__3127__auto____$4;
} else {
var G__8033 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8033) : p2.call(null,G__8033));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__8148__delegate = function (x,y,z,args){
var or__3127__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
return cljs.core.some(((function (or__3127__auto__){
return (function (p1__7769_SHARP_){
var or__3127__auto____$1 = (function (){var G__8035 = p1__7769_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8035) : p1.call(null,G__8035));
})();
if(cljs.core.truth_(or__3127__auto____$1)){
return or__3127__auto____$1;
} else {
var G__8036 = p1__7769_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8036) : p2.call(null,G__8036));
}
});})(or__3127__auto__))
,args);
}
};
var G__8148 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8149__i = 0, G__8149__a = new Array(arguments.length -  3);
while (G__8149__i < G__8149__a.length) {G__8149__a[G__8149__i] = arguments[G__8149__i + 3]; ++G__8149__i;}
  args = new cljs.core.IndexedSeq(G__8149__a,0);
} 
return G__8148__delegate.call(this,x,y,z,args);};
G__8148.cljs$lang$maxFixedArity = 3;
G__8148.cljs$lang$applyTo = (function (arglist__8150){
var x = cljs.core.first(arglist__8150);
arglist__8150 = cljs.core.next(arglist__8150);
var y = cljs.core.first(arglist__8150);
arglist__8150 = cljs.core.next(arglist__8150);
var z = cljs.core.first(arglist__8150);
var args = cljs.core.rest(arglist__8150);
return G__8148__delegate(x,y,z,args);
});
G__8148.cljs$core$IFn$_invoke$arity$variadic = G__8148__delegate;
return G__8148;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__8151 = null;
if (arguments.length > 3) {
var G__8152__i = 0, G__8152__a = new Array(arguments.length -  3);
while (G__8152__i < G__8152__a.length) {G__8152__a[G__8152__i] = arguments[G__8152__i + 3]; ++G__8152__i;}
G__8151 = new cljs.core.IndexedSeq(G__8152__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8151);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3127__auto__ = (function (){var G__8082 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8082) : p1.call(null,G__8082));
})();
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (function (){var G__8084 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8084) : p2.call(null,G__8084));
})();
if(cljs.core.truth_(or__3127__auto____$1)){
return or__3127__auto____$1;
} else {
var G__8085 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8085) : p3.call(null,G__8085));
}
}
});
var sp3__2 = (function (x,y){
var or__3127__auto__ = (function (){var G__8087 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8087) : p1.call(null,G__8087));
})();
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (function (){var G__8089 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8089) : p2.call(null,G__8089));
})();
if(cljs.core.truth_(or__3127__auto____$1)){
return or__3127__auto____$1;
} else {
var or__3127__auto____$2 = (function (){var G__8091 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8091) : p3.call(null,G__8091));
})();
if(cljs.core.truth_(or__3127__auto____$2)){
return or__3127__auto____$2;
} else {
var or__3127__auto____$3 = (function (){var G__8093 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8093) : p1.call(null,G__8093));
})();
if(cljs.core.truth_(or__3127__auto____$3)){
return or__3127__auto____$3;
} else {
var or__3127__auto____$4 = (function (){var G__8095 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8095) : p2.call(null,G__8095));
})();
if(cljs.core.truth_(or__3127__auto____$4)){
return or__3127__auto____$4;
} else {
var G__8096 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8096) : p3.call(null,G__8096));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3127__auto__ = (function (){var G__8098 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8098) : p1.call(null,G__8098));
})();
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (function (){var G__8100 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8100) : p2.call(null,G__8100));
})();
if(cljs.core.truth_(or__3127__auto____$1)){
return or__3127__auto____$1;
} else {
var or__3127__auto____$2 = (function (){var G__8102 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8102) : p3.call(null,G__8102));
})();
if(cljs.core.truth_(or__3127__auto____$2)){
return or__3127__auto____$2;
} else {
var or__3127__auto____$3 = (function (){var G__8104 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8104) : p1.call(null,G__8104));
})();
if(cljs.core.truth_(or__3127__auto____$3)){
return or__3127__auto____$3;
} else {
var or__3127__auto____$4 = (function (){var G__8106 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8106) : p2.call(null,G__8106));
})();
if(cljs.core.truth_(or__3127__auto____$4)){
return or__3127__auto____$4;
} else {
var or__3127__auto____$5 = (function (){var G__8108 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8108) : p3.call(null,G__8108));
})();
if(cljs.core.truth_(or__3127__auto____$5)){
return or__3127__auto____$5;
} else {
var or__3127__auto____$6 = (function (){var G__8110 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8110) : p1.call(null,G__8110));
})();
if(cljs.core.truth_(or__3127__auto____$6)){
return or__3127__auto____$6;
} else {
var or__3127__auto____$7 = (function (){var G__8112 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8112) : p2.call(null,G__8112));
})();
if(cljs.core.truth_(or__3127__auto____$7)){
return or__3127__auto____$7;
} else {
var G__8113 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8113) : p3.call(null,G__8113));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__8153__delegate = function (x,y,z,args){
var or__3127__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
return cljs.core.some(((function (or__3127__auto__){
return (function (p1__7770_SHARP_){
var or__3127__auto____$1 = (function (){var G__8115 = p1__7770_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8115) : p1.call(null,G__8115));
})();
if(cljs.core.truth_(or__3127__auto____$1)){
return or__3127__auto____$1;
} else {
var or__3127__auto____$2 = (function (){var G__8117 = p1__7770_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8117) : p2.call(null,G__8117));
})();
if(cljs.core.truth_(or__3127__auto____$2)){
return or__3127__auto____$2;
} else {
var G__8118 = p1__7770_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8118) : p3.call(null,G__8118));
}
}
});})(or__3127__auto__))
,args);
}
};
var G__8153 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8154__i = 0, G__8154__a = new Array(arguments.length -  3);
while (G__8154__i < G__8154__a.length) {G__8154__a[G__8154__i] = arguments[G__8154__i + 3]; ++G__8154__i;}
  args = new cljs.core.IndexedSeq(G__8154__a,0);
} 
return G__8153__delegate.call(this,x,y,z,args);};
G__8153.cljs$lang$maxFixedArity = 3;
G__8153.cljs$lang$applyTo = (function (arglist__8155){
var x = cljs.core.first(arglist__8155);
arglist__8155 = cljs.core.next(arglist__8155);
var y = cljs.core.first(arglist__8155);
arglist__8155 = cljs.core.next(arglist__8155);
var z = cljs.core.first(arglist__8155);
var args = cljs.core.rest(arglist__8155);
return G__8153__delegate(x,y,z,args);
});
G__8153.cljs$core$IFn$_invoke$arity$variadic = G__8153__delegate;
return G__8153;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__8156 = null;
if (arguments.length > 3) {
var G__8157__i = 0, G__8157__a = new Array(arguments.length -  3);
while (G__8157__i < G__8157__a.length) {G__8157__a[G__8157__i] = arguments[G__8157__i + 3]; ++G__8157__i;}
G__8156 = new cljs.core.IndexedSeq(G__8157__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8156);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__8158__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__7771_SHARP_){
var G__8134 = x;
return (p1__7771_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7771_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8134) : p1__7771_SHARP_.call(null,G__8134));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__7772_SHARP_){
var or__3127__auto__ = (function (){var G__8136 = x;
return (p1__7772_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7772_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8136) : p1__7772_SHARP_.call(null,G__8136));
})();
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
var G__8137 = y;
return (p1__7772_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7772_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8137) : p1__7772_SHARP_.call(null,G__8137));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__7773_SHARP_){
var or__3127__auto__ = (function (){var G__8139 = x;
return (p1__7773_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7773_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8139) : p1__7773_SHARP_.call(null,G__8139));
})();
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (function (){var G__8141 = y;
return (p1__7773_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7773_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8141) : p1__7773_SHARP_.call(null,G__8141));
})();
if(cljs.core.truth_(or__3127__auto____$1)){
return or__3127__auto____$1;
} else {
var G__8142 = z;
return (p1__7773_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7773_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8142) : p1__7773_SHARP_.call(null,G__8142));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__8159__delegate = function (x,y,z,args){
var or__3127__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
return cljs.core.some(((function (or__3127__auto__,ps__$1){
return (function (p1__7774_SHARP_){
return cljs.core.some(p1__7774_SHARP_,args);
});})(or__3127__auto__,ps__$1))
,ps__$1);
}
};
var G__8159 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8160__i = 0, G__8160__a = new Array(arguments.length -  3);
while (G__8160__i < G__8160__a.length) {G__8160__a[G__8160__i] = arguments[G__8160__i + 3]; ++G__8160__i;}
  args = new cljs.core.IndexedSeq(G__8160__a,0);
} 
return G__8159__delegate.call(this,x,y,z,args);};
G__8159.cljs$lang$maxFixedArity = 3;
G__8159.cljs$lang$applyTo = (function (arglist__8161){
var x = cljs.core.first(arglist__8161);
arglist__8161 = cljs.core.next(arglist__8161);
var y = cljs.core.first(arglist__8161);
arglist__8161 = cljs.core.next(arglist__8161);
var z = cljs.core.first(arglist__8161);
var args = cljs.core.rest(arglist__8161);
return G__8159__delegate(x,y,z,args);
});
G__8159.cljs$core$IFn$_invoke$arity$variadic = G__8159__delegate;
return G__8159;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__8162 = null;
if (arguments.length > 3) {
var G__8163__i = 0, G__8163__a = new Array(arguments.length -  3);
while (G__8163__i < G__8163__a.length) {G__8163__a[G__8163__i] = arguments[G__8163__i + 3]; ++G__8163__i;}
G__8162 = new cljs.core.IndexedSeq(G__8163__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8162);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__8158 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__8164__i = 0, G__8164__a = new Array(arguments.length -  3);
while (G__8164__i < G__8164__a.length) {G__8164__a[G__8164__i] = arguments[G__8164__i + 3]; ++G__8164__i;}
  ps = new cljs.core.IndexedSeq(G__8164__a,0);
} 
return G__8158__delegate.call(this,p1,p2,p3,ps);};
G__8158.cljs$lang$maxFixedArity = 3;
G__8158.cljs$lang$applyTo = (function (arglist__8165){
var p1 = cljs.core.first(arglist__8165);
arglist__8165 = cljs.core.next(arglist__8165);
var p2 = cljs.core.first(arglist__8165);
arglist__8165 = cljs.core.next(arglist__8165);
var p3 = cljs.core.first(arglist__8165);
var ps = cljs.core.rest(arglist__8165);
return G__8158__delegate(p1,p2,p3,ps);
});
G__8158.cljs$core$IFn$_invoke$arity$variadic = G__8158__delegate;
return G__8158;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__8166 = null;
if (arguments.length > 3) {
var G__8167__i = 0, G__8167__a = new Array(arguments.length -  3);
while (G__8167__i < G__8167__a.length) {G__8167__a[G__8167__i] = arguments[G__8167__i + 3]; ++G__8167__i;}
G__8166 = new cljs.core.IndexedSeq(G__8167__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__8166);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__8222 = null;
var G__8222__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8222__1 = (function (result){
var G__8208 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8208) : rf.call(null,G__8208));
});
var G__8222__2 = (function (result,input){
var G__8209 = result;
var G__8210 = (function (){var G__8211 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8211) : f.call(null,G__8211));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8209,G__8210) : rf.call(null,G__8209,G__8210));
});
var G__8222__3 = (function() { 
var G__8223__delegate = function (result,input,inputs){
var G__8212 = result;
var G__8213 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8212,G__8213) : rf.call(null,G__8212,G__8213));
};
var G__8223 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__8224__i = 0, G__8224__a = new Array(arguments.length -  2);
while (G__8224__i < G__8224__a.length) {G__8224__a[G__8224__i] = arguments[G__8224__i + 2]; ++G__8224__i;}
  inputs = new cljs.core.IndexedSeq(G__8224__a,0);
} 
return G__8223__delegate.call(this,result,input,inputs);};
G__8223.cljs$lang$maxFixedArity = 2;
G__8223.cljs$lang$applyTo = (function (arglist__8225){
var result = cljs.core.first(arglist__8225);
arglist__8225 = cljs.core.next(arglist__8225);
var input = cljs.core.first(arglist__8225);
var inputs = cljs.core.rest(arglist__8225);
return G__8223__delegate(result,input,inputs);
});
G__8223.cljs$core$IFn$_invoke$arity$variadic = G__8223__delegate;
return G__8223;
})()
;
G__8222 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__8222__0.call(this);
case 1:
return G__8222__1.call(this,result);
case 2:
return G__8222__2.call(this,result,input);
default:
var G__8226 = null;
if (arguments.length > 2) {
var G__8227__i = 0, G__8227__a = new Array(arguments.length -  2);
while (G__8227__i < G__8227__a.length) {G__8227__a[G__8227__i] = arguments[G__8227__i + 2]; ++G__8227__i;}
G__8226 = new cljs.core.IndexedSeq(G__8227__a,0);
}
return G__8222__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__8226);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8222.cljs$lang$maxFixedArity = 2;
G__8222.cljs$lang$applyTo = G__8222__3.cljs$lang$applyTo;
G__8222.cljs$core$IFn$_invoke$arity$0 = G__8222__0;
G__8222.cljs$core$IFn$_invoke$arity$1 = G__8222__1;
G__8222.cljs$core$IFn$_invoke$arity$2 = G__8222__2;
G__8222.cljs$core$IFn$_invoke$arity$variadic = G__8222__3.cljs$core$IFn$_invoke$arity$variadic;
return G__8222;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4014__auto___8228 = size;
var i_8229 = (0);
while(true){
if((i_8229 < n__4014__auto___8228)){
cljs.core.chunk_append(b,(function (){var G__8214 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8229);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8214) : f.call(null,G__8214));
})());

var G__8230 = (i_8229 + (1));
i_8229 = G__8230;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__8215 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8215) : f.call(null,G__8215));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__8216 = cljs.core.first(s1);
var G__8217 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8216,G__8217) : f.call(null,G__8216,G__8217));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__8218 = cljs.core.first(s1);
var G__8219 = cljs.core.first(s2);
var G__8220 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8218,G__8219,G__8220) : f.call(null,G__8218,G__8219,G__8220));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__8231__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__8168_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__8168_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__8231 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__8232__i = 0, G__8232__a = new Array(arguments.length -  4);
while (G__8232__i < G__8232__a.length) {G__8232__a[G__8232__i] = arguments[G__8232__i + 4]; ++G__8232__i;}
  colls = new cljs.core.IndexedSeq(G__8232__a,0);
} 
return G__8231__delegate.call(this,f,c1,c2,c3,colls);};
G__8231.cljs$lang$maxFixedArity = 4;
G__8231.cljs$lang$applyTo = (function (arglist__8233){
var f = cljs.core.first(arglist__8233);
arglist__8233 = cljs.core.next(arglist__8233);
var c1 = cljs.core.first(arglist__8233);
arglist__8233 = cljs.core.next(arglist__8233);
var c2 = cljs.core.first(arglist__8233);
arglist__8233 = cljs.core.next(arglist__8233);
var c3 = cljs.core.first(arglist__8233);
var colls = cljs.core.rest(arglist__8233);
return G__8231__delegate(f,c1,c2,c3,colls);
});
G__8231.cljs$core$IFn$_invoke$arity$variadic = G__8231__delegate;
return G__8231;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__8234 = null;
if (arguments.length > 4) {
var G__8235__i = 0, G__8235__a = new Array(arguments.length -  4);
while (G__8235__i < G__8235__a.length) {G__8235__a[G__8235__i] = arguments[G__8235__i + 4]; ++G__8235__i;}
G__8234 = new cljs.core.IndexedSeq(G__8235__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__8234);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__8244 = null;
var G__8244__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8244__1 = (function (result){
var G__8241 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8241) : rf.call(null,G__8241));
});
var G__8244__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__8242 = result;
var G__8243 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8242,G__8243) : rf.call(null,G__8242,G__8243));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__8244 = function(result,input){
switch(arguments.length){
case 0:
return G__8244__0.call(this);
case 1:
return G__8244__1.call(this,result);
case 2:
return G__8244__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8244.cljs$core$IFn$_invoke$arity$0 = G__8244__0;
G__8244.cljs$core$IFn$_invoke$arity$1 = G__8244__1;
G__8244.cljs$core$IFn$_invoke$arity$2 = G__8244__2;
return G__8244;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__8251 = null;
var G__8251__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8251__1 = (function (result){
var G__8248 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8248) : rf.call(null,G__8248));
});
var G__8251__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__8249 = result;
var G__8250 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8249,G__8250) : rf.call(null,G__8249,G__8250));
}
});
G__8251 = function(result,input){
switch(arguments.length){
case 0:
return G__8251__0.call(this);
case 1:
return G__8251__1.call(this,result);
case 2:
return G__8251__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8251.cljs$core$IFn$_invoke$arity$0 = G__8251__0;
G__8251.cljs$core$IFn$_invoke$arity$1 = G__8251__1;
G__8251.cljs$core$IFn$_invoke$arity$2 = G__8251__2;
return G__8251;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__8252 = (n__$1 - (1));
var G__8253 = cljs.core.rest(s);
n__$1 = G__8252;
coll__$1 = G__8253;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__8256 = cljs.core.next(s);
var G__8257 = cljs.core.next(lead);
s = G__8256;
lead = G__8257;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__8270 = null;
var G__8270__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8270__1 = (function (result){
var G__8264 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8264) : rf.call(null,G__8264));
});
var G__8270__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3115__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3115__auto__)){
var G__8265 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8265) : pred.call(null,G__8265));
} else {
return and__3115__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__8266 = result;
var G__8267 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8266,G__8267) : rf.call(null,G__8266,G__8267));
}
});
G__8270 = function(result,input){
switch(arguments.length){
case 0:
return G__8270__0.call(this);
case 1:
return G__8270__1.call(this,result);
case 2:
return G__8270__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8270.cljs$core$IFn$_invoke$arity$0 = G__8270__0;
G__8270.cljs$core$IFn$_invoke$arity$1 = G__8270__1;
G__8270.cljs$core$IFn$_invoke$arity$2 = G__8270__2;
return G__8270;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3115__auto__ = s;
if(and__3115__auto__){
var G__8269 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__8269) : pred__$1.call(null,G__8269));
} else {
return and__3115__auto__;
}
})())){
var G__8271 = pred__$1;
var G__8272 = cljs.core.rest(s);
pred__$1 = G__8271;
coll__$1 = G__8272;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__8281 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8281) : f.call(null,G__8281));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__8284__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__8284 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__8285__i = 0, G__8285__a = new Array(arguments.length -  2);
while (G__8285__i < G__8285__a.length) {G__8285__a[G__8285__i] = arguments[G__8285__i + 2]; ++G__8285__i;}
  colls = new cljs.core.IndexedSeq(G__8285__a,0);
} 
return G__8284__delegate.call(this,c1,c2,colls);};
G__8284.cljs$lang$maxFixedArity = 2;
G__8284.cljs$lang$applyTo = (function (arglist__8286){
var c1 = cljs.core.first(arglist__8286);
arglist__8286 = cljs.core.next(arglist__8286);
var c2 = cljs.core.first(arglist__8286);
var colls = cljs.core.rest(arglist__8286);
return G__8284__delegate(c1,c2,colls);
});
G__8284.cljs$core$IFn$_invoke$arity$variadic = G__8284__delegate;
return G__8284;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__8287 = null;
if (arguments.length > 2) {
var G__8288__i = 0, G__8288__a = new Array(arguments.length -  2);
while (G__8288__i < G__8288__a.length) {G__8288__a[G__8288__i] = arguments[G__8288__i + 2]; ++G__8288__i;}
G__8287 = new cljs.core.IndexedSeq(G__8288__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__8287);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__8303 = null;
var G__8303__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8303__1 = (function (result){
var G__8296 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8296) : rf.call(null,G__8296));
});
var G__8303__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__8297 = result;
var G__8298 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8297,G__8298) : rf.call(null,G__8297,G__8298));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__8299 = sepr;
var G__8300 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8299,G__8300) : rf.call(null,G__8299,G__8300));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__8301 = result;
var G__8302 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8301,G__8302) : rf.call(null,G__8301,G__8302));
}
});
G__8303 = function(result,input){
switch(arguments.length){
case 0:
return G__8303__0.call(this);
case 1:
return G__8303__1.call(this,result);
case 2:
return G__8303__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8303.cljs$core$IFn$_invoke$arity$0 = G__8303__0;
G__8303.cljs$core$IFn$_invoke$arity$1 = G__8303__1;
G__8303.cljs$core$IFn$_invoke$arity$2 = G__8303__2;
return G__8303;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4423__auto__ = cljs.core.seq(coll);
if(temp__4423__auto__){
var coll__$1 = temp__4423__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__8312__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__8312 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__8313__i = 0, G__8313__a = new Array(arguments.length -  1);
while (G__8313__i < G__8313__a.length) {G__8313__a[G__8313__i] = arguments[G__8313__i + 1]; ++G__8313__i;}
  colls = new cljs.core.IndexedSeq(G__8313__a,0);
} 
return G__8312__delegate.call(this,f,colls);};
G__8312.cljs$lang$maxFixedArity = 1;
G__8312.cljs$lang$applyTo = (function (arglist__8314){
var f = cljs.core.first(arglist__8314);
var colls = cljs.core.rest(arglist__8314);
return G__8312__delegate(f,colls);
});
G__8312.cljs$core$IFn$_invoke$arity$variadic = G__8312__delegate;
return G__8312;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__8315 = null;
if (arguments.length > 1) {
var G__8316__i = 0, G__8316__a = new Array(arguments.length -  1);
while (G__8316__i < G__8316__a.length) {G__8316__a[G__8316__i] = arguments[G__8316__i + 1]; ++G__8316__i;}
G__8315 = new cljs.core.IndexedSeq(G__8316__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__8315);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__8335 = null;
var G__8335__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8335__1 = (function (result){
var G__8329 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8329) : rf.call(null,G__8329));
});
var G__8335__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__8330 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8330) : pred.call(null,G__8330));
})())){
var G__8331 = result;
var G__8332 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8331,G__8332) : rf.call(null,G__8331,G__8332));
} else {
return result;
}
});
G__8335 = function(result,input){
switch(arguments.length){
case 0:
return G__8335__0.call(this);
case 1:
return G__8335__1.call(this,result);
case 2:
return G__8335__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8335.cljs$core$IFn$_invoke$arity$0 = G__8335__0;
G__8335.cljs$core$IFn$_invoke$arity$1 = G__8335__1;
G__8335.cljs$core$IFn$_invoke$arity$2 = G__8335__2;
return G__8335;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4014__auto___8336 = size;
var i_8337 = (0);
while(true){
if((i_8337 < n__4014__auto___8336)){
if(cljs.core.truth_((function (){var G__8333 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8337);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8333) : pred.call(null,G__8333));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8337));
} else {
}

var G__8338 = (i_8337 + (1));
i_8337 = G__8338;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__8334 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8334) : pred.call(null,G__8334));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__8345 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__8345) : branch_QMARK_.call(null,G__8345));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__8346 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__8346) : children.call(null,G__8346));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__8347_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__8347_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__8350 = to;
if(G__8350){
var bit__3801__auto__ = (G__8350.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__3801__auto__) || (G__8350.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__8351 = to;
if(G__8351){
var bit__3801__auto__ = (G__8351.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__3801__auto__) || (G__8351.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__8353 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8353) : f.call(null,G__8353));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__8354__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__8354 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__8355__i = 0, G__8355__a = new Array(arguments.length -  4);
while (G__8355__i < G__8355__a.length) {G__8355__a[G__8355__i] = arguments[G__8355__i + 4]; ++G__8355__i;}
  colls = new cljs.core.IndexedSeq(G__8355__a,0);
} 
return G__8354__delegate.call(this,f,c1,c2,c3,colls);};
G__8354.cljs$lang$maxFixedArity = 4;
G__8354.cljs$lang$applyTo = (function (arglist__8356){
var f = cljs.core.first(arglist__8356);
arglist__8356 = cljs.core.next(arglist__8356);
var c1 = cljs.core.first(arglist__8356);
arglist__8356 = cljs.core.next(arglist__8356);
var c2 = cljs.core.first(arglist__8356);
arglist__8356 = cljs.core.next(arglist__8356);
var c3 = cljs.core.first(arglist__8356);
var colls = cljs.core.rest(arglist__8356);
return G__8354__delegate(f,c1,c2,c3,colls);
});
G__8354.cljs$core$IFn$_invoke$arity$variadic = G__8354__delegate;
return G__8354;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__8357 = null;
if (arguments.length > 4) {
var G__8358__i = 0, G__8358__a = new Array(arguments.length -  4);
while (G__8358__i < G__8358__a.length) {G__8358__a[G__8358__i] = arguments[G__8358__i + 4]; ++G__8358__i;}
G__8357 = new cljs.core.IndexedSeq(G__8358__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__8357);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__8360 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8360) : pred.call(null,G__8360));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__8375 = m__$1;
if(G__8375){
var bit__3808__auto__ = (G__8375.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__3808__auto__) || (G__8375.cljs$core$ILookup$)){
return true;
} else {
if((!G__8375.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__8375);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__8375);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__8376 = sentinel;
var G__8377 = m__$2;
var G__8378 = cljs.core.next(ks__$1);
sentinel = G__8376;
m__$1 = G__8377;
ks__$1 = G__8378;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__8379,v){
var vec__8384 = p__8379;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8384,(0),null);
var ks = cljs.core.nthnext(vec__8384,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__8385,f){
var vec__8423 = p__8385;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8423,(0),null);
var ks = cljs.core.nthnext(vec__8423,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__8424 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8424) : f.call(null,G__8424));
})());
}
});
var update_in__4 = (function (m,p__8386,f,a){
var vec__8425 = p__8386;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8425,(0),null);
var ks = cljs.core.nthnext(vec__8425,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__8426 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__8427 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8426,G__8427) : f.call(null,G__8426,G__8427));
})());
}
});
var update_in__5 = (function (m,p__8387,f,a,b){
var vec__8428 = p__8387;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8428,(0),null);
var ks = cljs.core.nthnext(vec__8428,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__8429 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__8430 = a;
var G__8431 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8429,G__8430,G__8431) : f.call(null,G__8429,G__8430,G__8431));
})());
}
});
var update_in__6 = (function (m,p__8388,f,a,b,c){
var vec__8432 = p__8388;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8432,(0),null);
var ks = cljs.core.nthnext(vec__8432,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__8433 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__8434 = a;
var G__8435 = b;
var G__8436 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8433,G__8434,G__8435,G__8436) : f.call(null,G__8433,G__8434,G__8435,G__8436));
})());
}
});
var update_in__7 = (function() { 
var G__8438__delegate = function (m,p__8389,f,a,b,c,args){
var vec__8437 = p__8389;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8437,(0),null);
var ks = cljs.core.nthnext(vec__8437,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__8438 = function (m,p__8389,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__8439__i = 0, G__8439__a = new Array(arguments.length -  6);
while (G__8439__i < G__8439__a.length) {G__8439__a[G__8439__i] = arguments[G__8439__i + 6]; ++G__8439__i;}
  args = new cljs.core.IndexedSeq(G__8439__a,0);
} 
return G__8438__delegate.call(this,m,p__8389,f,a,b,c,args);};
G__8438.cljs$lang$maxFixedArity = 6;
G__8438.cljs$lang$applyTo = (function (arglist__8440){
var m = cljs.core.first(arglist__8440);
arglist__8440 = cljs.core.next(arglist__8440);
var p__8389 = cljs.core.first(arglist__8440);
arglist__8440 = cljs.core.next(arglist__8440);
var f = cljs.core.first(arglist__8440);
arglist__8440 = cljs.core.next(arglist__8440);
var a = cljs.core.first(arglist__8440);
arglist__8440 = cljs.core.next(arglist__8440);
var b = cljs.core.first(arglist__8440);
arglist__8440 = cljs.core.next(arglist__8440);
var c = cljs.core.first(arglist__8440);
var args = cljs.core.rest(arglist__8440);
return G__8438__delegate(m,p__8389,f,a,b,c,args);
});
G__8438.cljs$core$IFn$_invoke$arity$variadic = G__8438__delegate;
return G__8438;
})()
;
update_in = function(m,p__8389,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__8389,f);
case 4:
return update_in__4.call(this,m,p__8389,f,a);
case 5:
return update_in__5.call(this,m,p__8389,f,a,b);
case 6:
return update_in__6.call(this,m,p__8389,f,a,b,c);
default:
var G__8441 = null;
if (arguments.length > 6) {
var G__8442__i = 0, G__8442__a = new Array(arguments.length -  6);
while (G__8442__i < G__8442__a.length) {G__8442__a[G__8442__i] = arguments[G__8442__i + 6]; ++G__8442__i;}
G__8441 = new cljs.core.IndexedSeq(G__8442__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__8389,f,a,b,c, G__8441);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__8453 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8453) : f.call(null,G__8453));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__8454 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__8455 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8454,G__8455) : f.call(null,G__8454,G__8455));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__8456 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__8457 = x;
var G__8458 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8456,G__8457,G__8458) : f.call(null,G__8456,G__8457,G__8458));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__8459 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__8460 = x;
var G__8461 = y;
var G__8462 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8459,G__8460,G__8461,G__8462) : f.call(null,G__8459,G__8460,G__8461,G__8462));
})());
});
var update__7 = (function() { 
var G__8463__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__8463 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__8464__i = 0, G__8464__a = new Array(arguments.length -  6);
while (G__8464__i < G__8464__a.length) {G__8464__a[G__8464__i] = arguments[G__8464__i + 6]; ++G__8464__i;}
  more = new cljs.core.IndexedSeq(G__8464__a,0);
} 
return G__8463__delegate.call(this,m,k,f,x,y,z,more);};
G__8463.cljs$lang$maxFixedArity = 6;
G__8463.cljs$lang$applyTo = (function (arglist__8465){
var m = cljs.core.first(arglist__8465);
arglist__8465 = cljs.core.next(arglist__8465);
var k = cljs.core.first(arglist__8465);
arglist__8465 = cljs.core.next(arglist__8465);
var f = cljs.core.first(arglist__8465);
arglist__8465 = cljs.core.next(arglist__8465);
var x = cljs.core.first(arglist__8465);
arglist__8465 = cljs.core.next(arglist__8465);
var y = cljs.core.first(arglist__8465);
arglist__8465 = cljs.core.next(arglist__8465);
var z = cljs.core.first(arglist__8465);
var more = cljs.core.rest(arglist__8465);
return G__8463__delegate(m,k,f,x,y,z,more);
});
G__8463.cljs$core$IFn$_invoke$arity$variadic = G__8463__delegate;
return G__8463;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__8466 = null;
if (arguments.length > 6) {
var G__8467__i = 0, G__8467__a = new Array(arguments.length -  6);
while (G__8467__i < G__8467__a.length) {G__8467__a[G__8467__i] = arguments[G__8467__i + 6]; ++G__8467__i;}
G__8466 = new cljs.core.IndexedSeq(G__8467__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__8466);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__8468 = (ll - (5));
var G__8469 = r;
ll = G__8468;
ret = G__8469;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__8474 = cljs.core.pv_aget(node,(0));
var G__8475 = (level - (5));
node = G__8474;
level = G__8475;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__8476 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__8477 = (level - (5));
node = G__8476;
level = G__8477;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__8487 = init__$2;
var G__8488 = (j + i);
var G__8489 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8487,G__8488,G__8489) : f.call(null,G__8487,G__8488,G__8489));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__8500 = (j + (1));
var G__8501 = init__$3;
j = G__8500;
init__$2 = G__8501;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__8490 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__8490) : cljs.core.deref.call(null,G__8490));
} else {
var G__8502 = (i + len);
var G__8503 = init__$2;
i = G__8502;
init__$1 = G__8503;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__8491 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__8491) : cljs.core.tv_editable_root.call(null,G__8491));
})(),(function (){var G__8492 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__8492) : cljs.core.tv_editable_tail.call(null,G__8492));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__8493 = init__$2;
var G__8494 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8493,G__8494) : f.call(null,G__8493,G__8494));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__8504 = (j + (1));
var G__8505 = init__$3;
j = G__8504;
init__$2 = G__8505;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__8495 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__8495) : cljs.core.deref.call(null,G__8495));
} else {
var G__8506 = (i + len);
var G__8507 = init__$2;
i = G__8506;
init__$1 = G__8507;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__8496 = coll__$1;
var G__8497 = cljs.core.first_array_for_longvec(coll__$1);
var G__8498 = (0);
var G__8499 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8496,G__8497,G__8498,G__8499) : cljs.core.chunked_seq.call(null,G__8496,G__8497,G__8498,G__8499));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4014__auto___8508 = len;
var i_8509 = (0);
while(true){
if((i_8509 < n__4014__auto___8508)){
(new_tail[i_8509] = (self__.tail[i_8509]));

var G__8510 = (i_8509 + (1));
i_8509 = G__8510;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__8511 = null;
var G__8511__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__8511__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__8511 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__8511__2.call(this,self__,k);
case 3:
return G__8511__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8511.cljs$core$IFn$_invoke$arity$2 = G__8511__2;
G__8511.cljs$core$IFn$_invoke$arity$3 = G__8511__3;
return G__8511;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args8486){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args8486)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__8512 = (i + (1));
var G__8513 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__8512;
out = G__8513;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__8514__i = 0, G__8514__a = new Array(arguments.length -  0);
while (G__8514__i < G__8514__a.length) {G__8514__a[G__8514__i] = arguments[G__8514__i + 0]; ++G__8514__i;}
  args = new cljs.core.IndexedSeq(G__8514__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__8515){
var args = cljs.core.seq(arglist__8515);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__8516 = self__.vec;
var G__8517 = self__.node;
var G__8518 = self__.i;
var G__8519 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8516,G__8517,G__8518,G__8519) : cljs.core.chunked_seq.call(null,G__8516,G__8517,G__8518,G__8519));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__8520 = self__.vec;
var G__8521 = (self__.i + self__.off);
var G__8522 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__8520,G__8521,G__8522) : cljs.core.subvec.call(null,G__8520,G__8521,G__8522));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__8523 = self__.vec;
var G__8524 = (self__.i + self__.off);
var G__8525 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__8523,G__8524,G__8525) : cljs.core.subvec.call(null,G__8523,G__8524,G__8525));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__8526 = self__.vec;
var G__8527 = self__.node;
var G__8528 = self__.i;
var G__8529 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8526,G__8527,G__8528,G__8529) : cljs.core.chunked_seq.call(null,G__8526,G__8527,G__8528,G__8529));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__8530 = self__.vec;
var G__8531 = cljs.core.unchecked_array_for(self__.vec,end);
var G__8532 = end;
var G__8533 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8530,G__8531,G__8532,G__8533) : cljs.core.chunked_seq.call(null,G__8530,G__8531,G__8532,G__8533));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__8534 = self__.vec;
var G__8535 = self__.node;
var G__8536 = self__.i;
var G__8537 = self__.off;
var G__8538 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__8534,G__8535,G__8536,G__8537,G__8538) : cljs.core.chunked_seq.call(null,G__8534,G__8535,G__8536,G__8537,G__8538));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__8539 = self__.vec;
var G__8540 = cljs.core.unchecked_array_for(self__.vec,end);
var G__8541 = end;
var G__8542 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8539,G__8540,G__8541,G__8542) : cljs.core.chunked_seq.call(null,G__8539,G__8540,G__8541,G__8542));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__8544 = self__.meta;
var G__8545 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__8546 = self__.start;
var G__8547 = (function (){var x__3444__auto__ = self__.end;
var y__3445__auto__ = (v_pos + (1));
return ((x__3444__auto__ > y__3445__auto__) ? x__3444__auto__ : y__3445__auto__);
})();
var G__8548 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__8544,G__8545,G__8546,G__8547,G__8548) : cljs.core.build_subvec.call(null,G__8544,G__8545,G__8546,G__8547,G__8548));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__8549 = self__.meta;
var G__8550 = self__.v;
var G__8551 = self__.start;
var G__8552 = (self__.end - (1));
var G__8553 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__8549,G__8550,G__8551,G__8552,G__8553) : cljs.core.build_subvec.call(null,G__8549,G__8550,G__8551,G__8552,G__8553));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__8555 = meta__$1;
var G__8556 = self__.v;
var G__8557 = self__.start;
var G__8558 = self__.end;
var G__8559 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__8555,G__8556,G__8557,G__8558,G__8559) : cljs.core.build_subvec.call(null,G__8555,G__8556,G__8557,G__8558,G__8559));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__8560 = self__.meta;
var G__8561 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__8562 = self__.start;
var G__8563 = (self__.end + (1));
var G__8564 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__8560,G__8561,G__8562,G__8563,G__8564) : cljs.core.build_subvec.call(null,G__8560,G__8561,G__8562,G__8563,G__8564));
});

cljs.core.Subvec.prototype.call = (function() {
var G__8565 = null;
var G__8565__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__8565__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__8565 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__8565__2.call(this,self__,k);
case 3:
return G__8565__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8565.cljs$core$IFn$_invoke$arity$2 = G__8565__2;
G__8565.cljs$core$IFn$_invoke$arity$3 = G__8565__3;
return G__8565;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args8543){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args8543)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__8566 = meta;
var G__8567 = v.v;
var G__8568 = (v.start + start);
var G__8569 = (v.start + end);
var G__8570 = __hash;
meta = G__8566;
v = G__8567;
start = G__8568;
end = G__8569;
__hash = G__8570;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj8577 = {};
return obj8577;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__8585 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__8586 = (level - (5));
node = G__8585;
level = G__8586;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition1$ = 88;
this.cljs$lang$protocol_mask$partition0$ = 275;
})
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.call = (function() {
var G__8590 = null;
var G__8590__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__8590__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__8590 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__8590__2.call(this,self__,k);
case 3:
return G__8590__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8590.cljs$core$IFn$_invoke$arity$2 = G__8590__2;
G__8590.cljs$core$IFn$_invoke$arity$3 = G__8590__3;
return G__8590;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args8587){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args8587)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4423__auto__ = cljs.core.next(self__.front);
if(temp__4423__auto__){
var f1 = temp__4423__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4423__auto__ = cljs.core.next(self__.front);
if(temp__4423__auto__){
var f1 = temp__4423__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3127__auto__ = self__.front;
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3127__auto__ = self__.rear;
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition0$ = 2097152;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__8591 = (i + incr);
i = G__8591;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__8592 = (i + (1));
var G__8593 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__8592;
out = G__8593;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj8597 = {};
return obj8597;
})();
var l = ks.length;
var i_8598 = (0);
while(true){
if((i_8598 < l)){
var k_8599 = (ks[i_8598]);
(new_obj[k_8599] = (obj[k_8599]));

var G__8600 = (i_8598 + (1));
i_8598 = G__8600;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3115__auto__ = (function (){var G__8604 = k;
return goog.isString(G__8604);
})();
if(cljs.core.truth_(and__3115__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3115__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__8605 = init__$1;
var G__8606 = k;
var G__8607 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8605,G__8606,G__8607) : f.call(null,G__8605,G__8606,G__8607));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__8608 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__8608) : cljs.core.deref.call(null,G__8608));
} else {
var G__8614 = cljs.core.rest(keys__$1);
var G__8615 = init__$2;
keys__$1 = G__8614;
init__$1 = G__8615;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3115__auto__ = (function (){var G__8610 = k;
return goog.isString(G__8610);
})();
if(cljs.core.truth_(and__3115__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3115__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__8611 = k;
return goog.isString(G__8611);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3115__auto__ = (function (){var G__8613 = k;
return goog.isString(G__8613);
})();
if(cljs.core.truth_(and__3115__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3115__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__8601_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__8601_SHARP_,(self__.strobj[p1__8601_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__8616 = null;
var G__8616__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__8616__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__8616 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__8616__2.call(this,self__,k);
case 3:
return G__8616__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8616.cljs$core$IFn$_invoke$arity$2 = G__8616__2;
G__8616.cljs$core$IFn$_invoke$arity$3 = G__8616__3;
return G__8616;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args8602){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args8602)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj8618 = {};
return obj8618;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__8619 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8619,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8619,(1),null);
self__.s = cljs.core.next(self__.s);

return {"value": [k,v], "done": false};
} else {
return {"value": null, "done": true};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"value": [x,x], "done": false};
} else {
return {"value": null, "done": true};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__8620 = (i + (2));
i = G__8620;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__8621 = (i + (2));
i = G__8621;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__8622 = (i + (2));
i = G__8622;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__8623 = (i + (2));
i = G__8623;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__8624 = (i + (2));
i = G__8624;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3127__auto__ = (function (){var G__8628 = k;
return goog.isString(G__8628);
})();
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_8629 = (0);
while(true){
if((i_8629 < l)){
(narr[i_8629] = (arr[i_8629]));

var G__8630 = (i_8629 + (1));
i_8629 = G__8630;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__8632 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__8632) : cljs.core.keys.call(null,G__8632));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__8633 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__8633) : cljs.core.vals.call(null,G__8633));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__8634 = cljs.core.seq(coll);
var chunk__8635 = null;
var count__8636 = (0);
var i__8637 = (0);
while(true){
if((i__8637 < count__8636)){
var vec__8638 = chunk__8635.cljs$core$IIndexed$_nth$arity$2(null,i__8637);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8638,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8638,(1),null);
var G__8639_8652 = v;
var G__8640_8653 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8639_8652,G__8640_8653) : f.call(null,G__8639_8652,G__8640_8653));

var G__8654 = seq__8634;
var G__8655 = chunk__8635;
var G__8656 = count__8636;
var G__8657 = (i__8637 + (1));
seq__8634 = G__8654;
chunk__8635 = G__8655;
count__8636 = G__8656;
i__8637 = G__8657;
continue;
} else {
var temp__4425__auto__ = cljs.core.seq(seq__8634);
if(temp__4425__auto__){
var seq__8634__$1 = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__8634__$1)){
var c__3914__auto__ = cljs.core.chunk_first(seq__8634__$1);
var G__8658 = cljs.core.chunk_rest(seq__8634__$1);
var G__8659 = c__3914__auto__;
var G__8660 = cljs.core.count(c__3914__auto__);
var G__8661 = (0);
seq__8634 = G__8658;
chunk__8635 = G__8659;
count__8636 = G__8660;
i__8637 = G__8661;
continue;
} else {
var vec__8641 = cljs.core.first(seq__8634__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8641,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8641,(1),null);
var G__8642_8662 = v;
var G__8643_8663 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8642_8662,G__8643_8663) : f.call(null,G__8642_8662,G__8643_8663));

var G__8664 = cljs.core.next(seq__8634__$1);
var G__8665 = null;
var G__8666 = (0);
var G__8667 = (0);
seq__8634 = G__8664;
chunk__8635 = G__8665;
count__8636 = G__8666;
i__8637 = G__8667;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__8644 = init__$1;
var G__8645 = (self__.arr[i]);
var G__8646 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8644,G__8645,G__8646) : f.call(null,G__8644,G__8645,G__8646));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__8647 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__8647) : cljs.core.deref.call(null,G__8647));
} else {
var G__8668 = (i + (2));
var G__8669 = init__$2;
i = G__8668;
init__$1 = G__8669;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__8648 = other;
if(G__8648){
var bit__3801__auto__ = (G__8648.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__3801__auto__) || (G__8648.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__8670 = (i + (2));
i = G__8670;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj8650 = {};
return obj8650;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__8671 = (s + (2));
var G__8672 = d;
s = G__8671;
d = G__8672;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__8673 = (s + (2));
var G__8674 = (d + (2));
s = G__8673;
d = G__8674;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__8651 = cljs.core.aclone(self__.arr);
(G__8651[(idx + (1))] = v);

return G__8651;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__8675 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__8676 = cljs.core.next(es);
ret = G__8675;
es = G__8676;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__8677 = null;
var G__8677__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__8677__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__8677 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__8677__2.call(this,self__,k);
case 3:
return G__8677__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8677.cljs$core$IFn$_invoke$arity$2 = G__8677__2;
G__8677.cljs$core$IFn$_invoke$arity$3 = G__8677__3;
return G__8677;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args8631){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args8631)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__8678 = (i + (2));
var G__8679 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__8678;
ret = G__8679;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition0$ = 258;
this.cljs$lang$protocol_mask$partition1$ = 56;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__8680 = o;
if(G__8680){
var bit__3808__auto__ = (G__8680.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__3808__auto__) || (G__8680.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__8680.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__8680);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__8680);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__8681 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__8681) : cljs.core.key.call(null,G__8681));
})(),(function (){var G__8682 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__8682) : cljs.core.val.call(null,G__8682));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4423__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4423__auto__)){
var e = temp__4423__auto__;
var G__8688 = cljs.core.next(es);
var G__8689 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__8683 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__8683) : cljs.core.key.call(null,G__8683));
})(),(function (){var G__8684 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__8684) : cljs.core.val.call(null,G__8684));
})());
es = G__8688;
tcoll__$2 = G__8689;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__8685 = self__.len;
var G__8686 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__8685,G__8686) : cljs.core.array__GT_transient_hash_map.call(null,G__8685,G__8686));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__8687_8690 = self__.arr;
G__8687_8690.pop();

G__8687_8690.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__8691 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__8692 = (i + (2));
out = G__8691;
i = G__8692;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__8695 = cljs.core.aclone(arr);
(G__8695[i] = a);

return G__8695;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__8696 = cljs.core.aclone(arr);
(G__8696[i] = a);

(G__8696[j] = b);

return G__8696;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__8701 = init__$1;
var G__8702 = k;
var G__8703 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8701,G__8702,G__8703) : f.call(null,G__8701,G__8702,G__8703));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__8704 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__8704) : cljs.core.deref.call(null,G__8704));
} else {
var G__8705 = (i + (2));
var G__8706 = init__$2;
i = G__8705;
init__$1 = G__8706;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__8707 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__8707) : cljs.core.create_inode_seq.call(null,G__8707));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_8721 = (0);
var j_8722 = (0);
while(true){
if((i_8721 < (32))){
if((((self__.bitmap >>> i_8721) & (1)) === (0))){
var G__8723 = (i_8721 + (1));
var G__8724 = j_8722;
i_8721 = G__8723;
j_8722 = G__8724;
continue;
} else {
(nodes[i_8721] = ((!(((self__.arr[j_8722]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_8722])),(self__.arr[j_8722]),(self__.arr[(j_8722 + (1))]),added_leaf_QMARK_):(self__.arr[(j_8722 + (1))])));

var G__8725 = (i_8721 + (1));
var G__8726 = (j_8722 + (2));
i_8721 = G__8725;
j_8722 = G__8726;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__8708 = edit__$1;
var G__8709 = (shift + (5));
var G__8710 = key_or_nil;
var G__8711 = val_or_node;
var G__8712 = hash;
var G__8713 = key;
var G__8714 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__8708,G__8709,G__8710,G__8711,G__8712,G__8713,G__8714) : cljs.core.create_node.call(null,G__8708,G__8709,G__8710,G__8711,G__8712,G__8713,G__8714));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_8727 = (0);
var j_8728 = (0);
while(true){
if((i_8727 < (32))){
if((((self__.bitmap >>> i_8727) & (1)) === (0))){
var G__8729 = (i_8727 + (1));
var G__8730 = j_8728;
i_8727 = G__8729;
j_8728 = G__8730;
continue;
} else {
(nodes[i_8727] = ((!(((self__.arr[j_8728]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_8728])),(self__.arr[j_8728]),(self__.arr[(j_8728 + (1))]),added_leaf_QMARK_):(self__.arr[(j_8728 + (1))])));

var G__8731 = (i_8727 + (1));
var G__8732 = (j_8728 + (2));
i_8727 = G__8731;
j_8728 = G__8732;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__8715 = (shift + (5));
var G__8716 = key_or_nil;
var G__8717 = val_or_node;
var G__8718 = hash;
var G__8719 = key;
var G__8720 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__8715,G__8716,G__8717,G__8718,G__8719,G__8720) : cljs.core.create_node.call(null,G__8715,G__8716,G__8717,G__8718,G__8719,G__8720));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__8733 = (i + (1));
var G__8734 = (j + (2));
var G__8735 = (bitmap | ((1) << i));
i = G__8733;
j = G__8734;
bitmap = G__8735;
continue;
} else {
var G__8736 = (i + (1));
var G__8737 = j;
var G__8738 = bitmap;
i = G__8736;
j = G__8737;
bitmap = G__8738;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__8739 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__8739) : cljs.core.create_array_node_seq.call(null,G__8739));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__8740 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__8740) : cljs.core.deref.call(null,G__8740));
} else {
var G__8741 = (i + (1));
var G__8742 = init__$2;
i = G__8741;
init__$1 = G__8742;
continue;
}
} else {
var G__8743 = (i + (1));
var G__8744 = init__$1;
i = G__8743;
init__$1 = G__8744;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__8745 = (i + (2));
i = G__8745;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__8746 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__8746) : cljs.core.create_inode_seq.call(null,G__8746));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__8747 = self__.nodes;
var G__8748 = (self__.i + (2));
var G__8749 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__8747,G__8748,G__8749) : cljs.core.create_inode_seq.call(null,G__8747,G__8748,G__8749));
} else {
var G__8750 = self__.nodes;
var G__8751 = self__.i;
var G__8752 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__8750,G__8751,G__8752) : cljs.core.create_inode_seq.call(null,G__8750,G__8751,G__8752));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4423__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4423__auto__)){
var node = temp__4423__auto__;
var temp__4423__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4423__auto____$1)){
var node_seq = temp__4423__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__8756 = (j + (2));
j = G__8756;
continue;
}
} else {
var G__8757 = (j + (2));
j = G__8757;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__8758 = null;
var G__8759 = self__.nodes;
var G__8760 = self__.i;
var G__8761 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__8758,G__8759,G__8760,G__8761) : cljs.core.create_array_node_seq.call(null,G__8758,G__8759,G__8760,G__8761));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4423__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4423__auto__)){
var nj = temp__4423__auto__;
var temp__4423__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4423__auto____$1)){
var ns = temp__4423__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__8766 = (j + (1));
j = G__8766;
continue;
}
} else {
var G__8767 = (j + (1));
j = G__8767;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__8769 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__8769) : cljs.core.keys.call(null,G__8769));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__8770 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__8770) : cljs.core.vals.call(null,G__8770));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__8771 = cljs.core.seq(coll);
var chunk__8772 = null;
var count__8773 = (0);
var i__8774 = (0);
while(true){
if((i__8774 < count__8773)){
var vec__8775 = chunk__8772.cljs$core$IIndexed$_nth$arity$2(null,i__8774);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8775,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8775,(1),null);
var G__8776_8787 = v;
var G__8777_8788 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8776_8787,G__8777_8788) : f.call(null,G__8776_8787,G__8777_8788));

var G__8789 = seq__8771;
var G__8790 = chunk__8772;
var G__8791 = count__8773;
var G__8792 = (i__8774 + (1));
seq__8771 = G__8789;
chunk__8772 = G__8790;
count__8773 = G__8791;
i__8774 = G__8792;
continue;
} else {
var temp__4425__auto__ = cljs.core.seq(seq__8771);
if(temp__4425__auto__){
var seq__8771__$1 = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__8771__$1)){
var c__3914__auto__ = cljs.core.chunk_first(seq__8771__$1);
var G__8793 = cljs.core.chunk_rest(seq__8771__$1);
var G__8794 = c__3914__auto__;
var G__8795 = cljs.core.count(c__3914__auto__);
var G__8796 = (0);
seq__8771 = G__8793;
chunk__8772 = G__8794;
count__8773 = G__8795;
i__8774 = G__8796;
continue;
} else {
var vec__8778 = cljs.core.first(seq__8771__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8778,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8778,(1),null);
var G__8779_8797 = v;
var G__8780_8798 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8779_8797,G__8780_8798) : f.call(null,G__8779_8797,G__8780_8798));

var G__8799 = cljs.core.next(seq__8771__$1);
var G__8800 = null;
var G__8801 = (0);
var G__8802 = (0);
seq__8771 = G__8799;
chunk__8772 = G__8800;
count__8773 = G__8801;
i__8774 = G__8802;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__8781 = init;
var G__8782 = null;
var G__8783 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8781,G__8782,G__8783) : f.call(null,G__8781,G__8782,G__8783));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__8784 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__8784) : cljs.core.deref.call(null,G__8784));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj8786 = {};
return obj8786;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__8803 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__8804 = cljs.core.next(es);
ret = G__8803;
es = G__8804;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__8805 = null;
var G__8805__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__8805__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__8805 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__8805__2.call(this,self__,k);
case 3:
return G__8805__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8805.cljs$core$IFn$_invoke$arity$2 = G__8805__2;
G__8805.cljs$core$IFn$_invoke$arity$3 = G__8805__3;
return G__8805;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args8768){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args8768)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__8806 = (i + (2));
var G__8807 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__8806;
ret = G__8807;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__8808 = (i + (1));
var G__8809 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__8808;
out = G__8809;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition0$ = 258;
this.cljs$lang$protocol_mask$partition1$ = 56;
})
cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__8810 = o;
if(G__8810){
var bit__3808__auto__ = (G__8810.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__3808__auto__) || (G__8810.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__8810.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__8810);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__8810);
}
})()){
return tcoll.assoc_BANG_((function (){var G__8811 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__8811) : cljs.core.key.call(null,G__8811));
})(),(function (){var G__8812 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__8812) : cljs.core.val.call(null,G__8812));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4423__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4423__auto__)){
var e = temp__4423__auto__;
var G__8815 = cljs.core.next(es);
var G__8816 = tcoll__$1.assoc_BANG_((function (){var G__8813 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__8813) : cljs.core.key.call(null,G__8813));
})(),(function (){var G__8814 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__8814) : cljs.core.val.call(null,G__8814));
})());
es = G__8815;
tcoll__$1 = G__8816;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__8817 = ((ascending_QMARK_)?t.left:t.right);
var G__8818 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__8817;
stack__$1 = G__8818;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__8831 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__8831) : cljs.core.deref.call(null,G__8831));
} else {
var init__$2 = (function (){var G__8832 = init__$1;
var G__8833 = node.key;
var G__8834 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8832,G__8833,G__8834) : f.call(null,G__8832,G__8833,G__8834));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__8835 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__8835) : cljs.core.deref.call(null,G__8835));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__8836 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__8836) : cljs.core.deref.call(null,G__8836));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__8838 = null;
var G__8838__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__8838__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__8838 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__8838__2.call(this,self__,k);
case 3:
return G__8838__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8838.cljs$core$IFn$_invoke$arity$2 = G__8838__2;
G__8838.cljs$core$IFn$_invoke$arity$3 = G__8838__3;
return G__8838;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args8837){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args8837)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__8840 = null;
var G__8840__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__8840__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__8840 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__8840__2.call(this,self__,k);
case 3:
return G__8840__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8840.cljs$core$IFn$_invoke$arity$2 = G__8840__2;
G__8840.cljs$core$IFn$_invoke$arity$3 = G__8840__3;
return G__8840;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args8839){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args8839)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__8853 = k;
var G__8854 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__8853,G__8854) : comp.call(null,G__8853,G__8854));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__8873 = k;
var G__8874 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__8873,G__8874) : comp.call(null,G__8873,G__8874));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__8885 = k;
var G__8886 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__8885,G__8886) : comp.call(null,G__8885,G__8886));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__8888 = cljs.core.seq(coll);
var chunk__8889 = null;
var count__8890 = (0);
var i__8891 = (0);
while(true){
if((i__8891 < count__8890)){
var vec__8892 = chunk__8889.cljs$core$IIndexed$_nth$arity$2(null,i__8891);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8892,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8892,(1),null);
var G__8893_8905 = v;
var G__8894_8906 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8893_8905,G__8894_8906) : f.call(null,G__8893_8905,G__8894_8906));

var G__8907 = seq__8888;
var G__8908 = chunk__8889;
var G__8909 = count__8890;
var G__8910 = (i__8891 + (1));
seq__8888 = G__8907;
chunk__8889 = G__8908;
count__8890 = G__8909;
i__8891 = G__8910;
continue;
} else {
var temp__4425__auto__ = cljs.core.seq(seq__8888);
if(temp__4425__auto__){
var seq__8888__$1 = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__8888__$1)){
var c__3914__auto__ = cljs.core.chunk_first(seq__8888__$1);
var G__8911 = cljs.core.chunk_rest(seq__8888__$1);
var G__8912 = c__3914__auto__;
var G__8913 = cljs.core.count(c__3914__auto__);
var G__8914 = (0);
seq__8888 = G__8911;
chunk__8889 = G__8912;
count__8890 = G__8913;
i__8891 = G__8914;
continue;
} else {
var vec__8895 = cljs.core.first(seq__8888__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8895,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8895,(1),null);
var G__8896_8915 = v;
var G__8897_8916 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8896_8915,G__8897_8916) : f.call(null,G__8896_8915,G__8897_8916));

var G__8917 = cljs.core.next(seq__8888__$1);
var G__8918 = null;
var G__8919 = (0);
var G__8920 = (0);
seq__8888 = G__8917;
chunk__8889 = G__8918;
count__8890 = G__8919;
i__8891 = G__8920;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__8898 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__8898) : cljs.core.keys.call(null,G__8898));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__8899 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__8899) : cljs.core.vals.call(null,G__8899));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__8900 = k;
var G__8901 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__8900,G__8901) : self__.comp.call(null,G__8900,G__8901));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__8921 = t.left;
t = G__8921;
continue;
} else {
var G__8922 = t.right;
t = G__8922;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__8923 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__8924 = cljs.core.next(es);
ret = G__8923;
es = G__8924;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__8925 = null;
var G__8925__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__8925__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__8925 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__8925__2.call(this,self__,k);
case 3:
return G__8925__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8925.cljs$core$IFn$_invoke$arity$2 = G__8925__2;
G__8925.cljs$core$IFn$_invoke$arity$3 = G__8925__3;
return G__8925;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args8887){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args8887)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__8902 = k;
var G__8903 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__8902,G__8903) : self__.comp.call(null,G__8902,G__8903));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__8926 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__8927 = t.left;
stack = G__8926;
t = G__8927;
continue;
} else {
var G__8928 = stack;
var G__8929 = t.right;
stack = G__8928;
t = G__8929;
continue;
}
} else {
if((c > (0))){
var G__8930 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__8931 = t.right;
stack = G__8930;
t = G__8931;
continue;
} else {
var G__8932 = stack;
var G__8933 = t.left;
stack = G__8932;
t = G__8933;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__8904 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__8904) : cljs.core.key.call(null,G__8904));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__8934 = cljs.core.nnext(in$);
var G__8935 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__8934;
out = G__8935;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__8936__i = 0, G__8936__a = new Array(arguments.length -  0);
while (G__8936__i < G__8936__a.length) {G__8936__a[G__8936__i] = arguments[G__8936__i + 0]; ++G__8936__i;}
  keyvals = new cljs.core.IndexedSeq(G__8936__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__8937){
var keyvals = cljs.core.seq(arglist__8937);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__8938__i = 0, G__8938__a = new Array(arguments.length -  0);
while (G__8938__i < G__8938__a.length) {G__8938__a[G__8938__i] = arguments[G__8938__i + 0]; ++G__8938__i;}
  keyvals = new cljs.core.IndexedSeq(G__8938__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__8939){
var keyvals = cljs.core.seq(arglist__8939);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj8943 = {};
return obj8943;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__8944 = cljs.core.nnext(kvs);
kvs = G__8944;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__8945__i = 0, G__8945__a = new Array(arguments.length -  0);
while (G__8945__i < G__8945__a.length) {G__8945__a[G__8945__i] = arguments[G__8945__i + 0]; ++G__8945__i;}
  keyvals = new cljs.core.IndexedSeq(G__8945__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__8946){
var keyvals = cljs.core.seq(arglist__8946);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__8947 = cljs.core.nnext(in$);
var G__8948 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__8947;
out = G__8948;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__8949__i = 0, G__8949__a = new Array(arguments.length -  0);
while (G__8949__i < G__8949__a.length) {G__8949__a[G__8949__i] = arguments[G__8949__i + 0]; ++G__8949__i;}
  keyvals = new cljs.core.IndexedSeq(G__8949__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__8950){
var keyvals = cljs.core.seq(arglist__8950);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__8951 = cljs.core.nnext(in$);
var G__8952 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__8951;
out = G__8952;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__8953__i = 0, G__8953__a = new Array(arguments.length -  1);
while (G__8953__i < G__8953__a.length) {G__8953__a[G__8953__i] = arguments[G__8953__i + 1]; ++G__8953__i;}
  keyvals = new cljs.core.IndexedSeq(G__8953__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__8954){
var comparator = cljs.core.first(arglist__8954);
var keyvals = cljs.core.rest(arglist__8954);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__8955 = self__.mseq;
if(G__8955){
var bit__3808__auto__ = (G__8955.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__3808__auto__) || (G__8955.cljs$core$INext$)){
return true;
} else {
if((!G__8955.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__8955);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__8955);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__8956 = self__.mseq;
if(G__8956){
var bit__3808__auto__ = (G__8956.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__3808__auto__) || (G__8956.cljs$core$INext$)){
return true;
} else {
if((!G__8956.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__8956);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__8956);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4425__auto__ = cljs.core.seq(hash_map);
if(temp__4425__auto__){
var mseq = temp__4425__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__8957 = self__.mseq;
if(G__8957){
var bit__3808__auto__ = (G__8957.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__3808__auto__) || (G__8957.cljs$core$INext$)){
return true;
} else {
if((!G__8957.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__8957);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__8957);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__8958 = self__.mseq;
if(G__8958){
var bit__3808__auto__ = (G__8958.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__3808__auto__) || (G__8958.cljs$core$INext$)){
return true;
} else {
if((!G__8958.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__8958);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__8958);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4425__auto__ = cljs.core.seq(hash_map);
if(temp__4425__auto__){
var mseq = temp__4425__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__8959_SHARP_,p2__8960_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3127__auto__ = p1__8959_SHARP_;
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__8960_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__8961__i = 0, G__8961__a = new Array(arguments.length -  0);
while (G__8961__i < G__8961__a.length) {G__8961__a[G__8961__i] = arguments[G__8961__i + 0]; ++G__8961__i;}
  maps = new cljs.core.IndexedSeq(G__8961__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__8962){
var maps = cljs.core.seq(arglist__8962);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__8965 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__8966 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8965,G__8966) : f.call(null,G__8965,G__8966));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3127__auto__ = m1;
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__8967__i = 0, G__8967__a = new Array(arguments.length -  1);
while (G__8967__i < G__8967__a.length) {G__8967__a[G__8967__i] = arguments[G__8967__i + 1]; ++G__8967__i;}
  maps = new cljs.core.IndexedSeq(G__8967__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__8968){
var f = cljs.core.first(arglist__8968);
var maps = cljs.core.rest(arglist__8968);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__8969 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__8970 = cljs.core.next(keys);
ret = G__8969;
keys = G__8970;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__8973 = cljs.core.seq(coll);
var chunk__8974 = null;
var count__8975 = (0);
var i__8976 = (0);
while(true){
if((i__8976 < count__8975)){
var vec__8977 = chunk__8974.cljs$core$IIndexed$_nth$arity$2(null,i__8976);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8977,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8977,(1),null);
var G__8978_8983 = v;
var G__8979_8984 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8978_8983,G__8979_8984) : f.call(null,G__8978_8983,G__8979_8984));

var G__8985 = seq__8973;
var G__8986 = chunk__8974;
var G__8987 = count__8975;
var G__8988 = (i__8976 + (1));
seq__8973 = G__8985;
chunk__8974 = G__8986;
count__8975 = G__8987;
i__8976 = G__8988;
continue;
} else {
var temp__4425__auto__ = cljs.core.seq(seq__8973);
if(temp__4425__auto__){
var seq__8973__$1 = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__8973__$1)){
var c__3914__auto__ = cljs.core.chunk_first(seq__8973__$1);
var G__8989 = cljs.core.chunk_rest(seq__8973__$1);
var G__8990 = c__3914__auto__;
var G__8991 = cljs.core.count(c__3914__auto__);
var G__8992 = (0);
seq__8973 = G__8989;
chunk__8974 = G__8990;
count__8975 = G__8991;
i__8976 = G__8992;
continue;
} else {
var vec__8980 = cljs.core.first(seq__8973__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8980,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8980,(1),null);
var G__8981_8993 = v;
var G__8982_8994 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8981_8993,G__8982_8994) : f.call(null,G__8981_8993,G__8982_8994));

var G__8995 = cljs.core.next(seq__8973__$1);
var G__8996 = null;
var G__8997 = (0);
var G__8998 = (0);
seq__8973 = G__8995;
chunk__8974 = G__8996;
count__8975 = G__8997;
i__8976 = G__8998;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__8971_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__8971_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__8999 = null;
var G__8999__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__8999__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__8999 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__8999__2.call(this,self__,k);
case 3:
return G__8999__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8999.cljs$core$IFn$_invoke$arity$2 = G__8999__2;
G__8999.cljs$core$IFn$_invoke$arity$3 = G__8999__3;
return G__8999;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args8972){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args8972)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__9000 = (i + (1));
var G__9001 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__9000;
out = G__9001;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__9002 = (i + (1));
var G__9003 = cljs.core._conj_BANG_(out,(items[i]));
i = G__9002;
out = G__9003;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition1$ = 136;
this.cljs$lang$protocol_mask$partition0$ = 259;
})
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.call = (function() {
var G__9005 = null;
var G__9005__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__9005__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__9005 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9005__2.call(this,self__,k);
case 3:
return G__9005__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9005.cljs$core$IFn$_invoke$arity$2 = G__9005__2;
G__9005.cljs$core$IFn$_invoke$arity$3 = G__9005__3;
return G__9005;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args9004){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9004)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__9008 = cljs.core.seq(coll);
var chunk__9009 = null;
var count__9010 = (0);
var i__9011 = (0);
while(true){
if((i__9011 < count__9010)){
var vec__9012 = chunk__9009.cljs$core$IIndexed$_nth$arity$2(null,i__9011);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9012,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9012,(1),null);
var G__9013_9018 = v;
var G__9014_9019 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9013_9018,G__9014_9019) : f.call(null,G__9013_9018,G__9014_9019));

var G__9020 = seq__9008;
var G__9021 = chunk__9009;
var G__9022 = count__9010;
var G__9023 = (i__9011 + (1));
seq__9008 = G__9020;
chunk__9009 = G__9021;
count__9010 = G__9022;
i__9011 = G__9023;
continue;
} else {
var temp__4425__auto__ = cljs.core.seq(seq__9008);
if(temp__4425__auto__){
var seq__9008__$1 = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9008__$1)){
var c__3914__auto__ = cljs.core.chunk_first(seq__9008__$1);
var G__9024 = cljs.core.chunk_rest(seq__9008__$1);
var G__9025 = c__3914__auto__;
var G__9026 = cljs.core.count(c__3914__auto__);
var G__9027 = (0);
seq__9008 = G__9024;
chunk__9009 = G__9025;
count__9010 = G__9026;
i__9011 = G__9027;
continue;
} else {
var vec__9015 = cljs.core.first(seq__9008__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9015,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9015,(1),null);
var G__9016_9028 = v;
var G__9017_9029 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9016_9028,G__9017_9029) : f.call(null,G__9016_9028,G__9017_9029));

var G__9030 = cljs.core.next(seq__9008__$1);
var G__9031 = null;
var G__9032 = (0);
var G__9033 = (0);
seq__9008 = G__9030;
chunk__9009 = G__9031;
count__9010 = G__9032;
i__9011 = G__9033;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__9006_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__9006_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__9034 = null;
var G__9034__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9034__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9034 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9034__2.call(this,self__,k);
case 3:
return G__9034__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9034.cljs$core$IFn$_invoke$arity$2 = G__9034__2;
G__9034.cljs$core$IFn$_invoke$arity$3 = G__9034__3;
return G__9034;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args9007){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9007)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4008__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4008__auto__.length)){
var G__9035 = (i + (1));
var G__9036 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__9035;
res = G__9036;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__9037 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__9038 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__9037;
out = G__9038;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__9039__delegate = function (keys){
return cljs.core.set(keys);
};
var G__9039 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__9040__i = 0, G__9040__a = new Array(arguments.length -  0);
while (G__9040__i < G__9040__a.length) {G__9040__a[G__9040__i] = arguments[G__9040__i + 0]; ++G__9040__i;}
  keys = new cljs.core.IndexedSeq(G__9040__a,0);
} 
return G__9039__delegate.call(this,keys);};
G__9039.cljs$lang$maxFixedArity = 0;
G__9039.cljs$lang$applyTo = (function (arglist__9041){
var keys = cljs.core.seq(arglist__9041);
return G__9039__delegate(keys);
});
G__9039.cljs$core$IFn$_invoke$arity$variadic = G__9039__delegate;
return G__9039;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__9042 = null;
if (arguments.length > 0) {
var G__9043__i = 0, G__9043__a = new Array(arguments.length -  0);
while (G__9043__i < G__9043__a.length) {G__9043__a[G__9043__i] = arguments[G__9043__i + 0]; ++G__9043__i;}
G__9042 = new cljs.core.IndexedSeq(G__9043__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__9042);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__9044__i = 0, G__9044__a = new Array(arguments.length -  0);
while (G__9044__i < G__9044__a.length) {G__9044__a[G__9044__i] = arguments[G__9044__i + 0]; ++G__9044__i;}
  keys = new cljs.core.IndexedSeq(G__9044__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__9045){
var keys = cljs.core.seq(arglist__9045);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__9046__i = 0, G__9046__a = new Array(arguments.length -  1);
while (G__9046__i < G__9046__a.length) {G__9046__a[G__9046__i] = arguments[G__9046__i + 1]; ++G__9046__i;}
  keys = new cljs.core.IndexedSeq(G__9046__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__9047){
var comparator = cljs.core.first(arglist__9047);
var keys = cljs.core.rest(arglist__9047);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__9048_SHARP_){
var temp__4423__auto__ = cljs.core.find(smap,p1__9048_SHARP_);
if(cljs.core.truth_(temp__4423__auto__)){
var e = temp__4423__auto__;
return cljs.core.val(e);
} else {
return p1__9048_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4423__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4423__auto__)){
var e = temp__4423__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__9049_SHARP_){
var temp__4423__auto__ = cljs.core.find(smap,p1__9049_SHARP_);
if(cljs.core.truth_(temp__4423__auto__)){
var e = temp__4423__auto__;
return cljs.core.second(e);
} else {
return p1__9049_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__9070 = null;
var G__9070__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9070__1 = (function (result){
var G__9060 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9060) : rf.call(null,G__9060));
});
var G__9070__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__9061 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9061) : cljs.core.deref.call(null,G__9061));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__9062 = result;
var G__9063 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9062,G__9063) : rf.call(null,G__9062,G__9063));
}
});
G__9070 = function(result,input){
switch(arguments.length){
case 0:
return G__9070__0.call(this);
case 1:
return G__9070__1.call(this,result);
case 2:
return G__9070__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9070.cljs$core$IFn$_invoke$arity$0 = G__9070__0;
G__9070.cljs$core$IFn$_invoke$arity$1 = G__9070__1;
G__9070.cljs$core$IFn$_invoke$arity$2 = G__9070__2;
return G__9070;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__9068,seen__$1){
while(true){
var vec__9069 = p__9068;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9069,(0),null);
var xs__$1 = vec__9069;
var temp__4425__auto__ = cljs.core.seq(xs__$1);
if(temp__4425__auto__){
var s = temp__4425__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__9071 = cljs.core.rest(s);
var G__9072 = seen__$1;
p__9068 = G__9071;
seen__$1 = G__9072;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__9073 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__9074 = cljs.core.next(s__$1);
ret = G__9073;
s__$1 = G__9074;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__9076 = x;
if(G__9076){
var bit__3801__auto__ = (G__9076.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__3801__auto__) || (G__9076.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__9077 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__9078 = cljs.core.next(ks);
var G__9079 = cljs.core.next(vs);
map = G__9077;
ks = G__9078;
vs = G__9079;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__9090 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9090) : k.call(null,G__9090));
})() > (function (){var G__9091 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9091) : k.call(null,G__9091));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__9092__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__9080_SHARP_,p2__9081_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__9080_SHARP_,p2__9081_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__9092 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__9093__i = 0, G__9093__a = new Array(arguments.length -  3);
while (G__9093__i < G__9093__a.length) {G__9093__a[G__9093__i] = arguments[G__9093__i + 3]; ++G__9093__i;}
  more = new cljs.core.IndexedSeq(G__9093__a,0);
} 
return G__9092__delegate.call(this,k,x,y,more);};
G__9092.cljs$lang$maxFixedArity = 3;
G__9092.cljs$lang$applyTo = (function (arglist__9094){
var k = cljs.core.first(arglist__9094);
arglist__9094 = cljs.core.next(arglist__9094);
var x = cljs.core.first(arglist__9094);
arglist__9094 = cljs.core.next(arglist__9094);
var y = cljs.core.first(arglist__9094);
var more = cljs.core.rest(arglist__9094);
return G__9092__delegate(k,x,y,more);
});
G__9092.cljs$core$IFn$_invoke$arity$variadic = G__9092__delegate;
return G__9092;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__9095 = null;
if (arguments.length > 3) {
var G__9096__i = 0, G__9096__a = new Array(arguments.length -  3);
while (G__9096__i < G__9096__a.length) {G__9096__a[G__9096__i] = arguments[G__9096__i + 3]; ++G__9096__i;}
G__9095 = new cljs.core.IndexedSeq(G__9096__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__9095);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__9107 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9107) : k.call(null,G__9107));
})() < (function (){var G__9108 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9108) : k.call(null,G__9108));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__9109__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__9097_SHARP_,p2__9098_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__9097_SHARP_,p2__9098_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__9109 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__9110__i = 0, G__9110__a = new Array(arguments.length -  3);
while (G__9110__i < G__9110__a.length) {G__9110__a[G__9110__i] = arguments[G__9110__i + 3]; ++G__9110__i;}
  more = new cljs.core.IndexedSeq(G__9110__a,0);
} 
return G__9109__delegate.call(this,k,x,y,more);};
G__9109.cljs$lang$maxFixedArity = 3;
G__9109.cljs$lang$applyTo = (function (arglist__9111){
var k = cljs.core.first(arglist__9111);
arglist__9111 = cljs.core.next(arglist__9111);
var x = cljs.core.first(arglist__9111);
arglist__9111 = cljs.core.next(arglist__9111);
var y = cljs.core.first(arglist__9111);
var more = cljs.core.rest(arglist__9111);
return G__9109__delegate(k,x,y,more);
});
G__9109.cljs$core$IFn$_invoke$arity$variadic = G__9109__delegate;
return G__9109;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__9112 = null;
if (arguments.length > 3) {
var G__9113__i = 0, G__9113__a = new Array(arguments.length -  3);
while (G__9113__i < G__9113__a.length) {G__9113__a[G__9113__i] = arguments[G__9113__i + 3]; ++G__9113__i;}
G__9112 = new cljs.core.IndexedSeq(G__9113__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__9112);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__9130 = null;
var G__9130__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9130__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__9125 = result;
var G__9126 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9125,G__9126) : rf.call(null,G__9125,G__9126));
})());
})());
var G__9127 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9127) : rf.call(null,G__9127));
});
var G__9130__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__9128 = result;
var G__9129 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9128,G__9129) : rf.call(null,G__9128,G__9129));
} else {
return result;
}
});
G__9130 = function(result,input){
switch(arguments.length){
case 0:
return G__9130__0.call(this);
case 1:
return G__9130__1.call(this,result);
case 2:
return G__9130__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9130.cljs$core$IFn$_invoke$arity$0 = G__9130__0;
G__9130.cljs$core$IFn$_invoke$arity$1 = G__9130__1;
G__9130.cljs$core$IFn$_invoke$arity$2 = G__9130__2;
return G__9130;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__9143 = null;
var G__9143__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9143__1 = (function (result){
var G__9138 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9138) : rf.call(null,G__9138));
});
var G__9143__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__9139 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9139) : pred.call(null,G__9139));
})())){
var G__9140 = result;
var G__9141 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9140,G__9141) : rf.call(null,G__9140,G__9141));
} else {
return cljs.core.reduced(result);
}
});
G__9143 = function(result,input){
switch(arguments.length){
case 0:
return G__9143__0.call(this);
case 1:
return G__9143__1.call(this,result);
case 2:
return G__9143__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9143.cljs$core$IFn$_invoke$arity$0 = G__9143__0;
G__9143.cljs$core$IFn$_invoke$arity$1 = G__9143__1;
G__9143.cljs$core$IFn$_invoke$arity$2 = G__9143__2;
return G__9143;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
if(cljs.core.truth_((function (){var G__9142 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9142) : pred.call(null,G__9142));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__9148 = (function (){var G__9150 = cljs.core._entry_key(sc,e);
var G__9151 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9150,G__9151) : comp.call(null,G__9150,G__9151));
})();
var G__9149 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__9148,G__9149) : test.call(null,G__9148,G__9149));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4425__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4425__auto__)){
var vec__9155 = temp__4425__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9155,(0),null);
var s = vec__9155;
if(cljs.core.truth_((function (){var G__9156 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__9156) : include.call(null,G__9156));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4425__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4425__auto__)){
var vec__9157 = temp__4425__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9157,(0),null);
var s = vec__9157;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4425__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4425__auto__)){
var vec__9161 = temp__4425__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9161,(0),null);
var s = vec__9161;
if(cljs.core.truth_((function (){var G__9162 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__9162) : include.call(null,G__9162));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4425__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4425__auto__)){
var vec__9163 = temp__4425__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9163,(0),null);
var s = vec__9163;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__9164 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__9164) : Math.ceil.call(null,G__9164));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__9165 = ret;
var G__9166 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9165,G__9166) : f.call(null,G__9165,G__9166));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__9167 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9167) : cljs.core.deref.call(null,G__9167));
} else {
var G__9168 = (i + self__.step);
var G__9169 = ret__$1;
i = G__9168;
ret = G__9169;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__9187 = null;
var G__9187__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9187__1 = (function (result){
var G__9184 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9184) : rf.call(null,G__9184));
});
var G__9187__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__9185 = result;
var G__9186 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9185,G__9186) : rf.call(null,G__9185,G__9186));
} else {
return result;
}
});
G__9187 = function(result,input){
switch(arguments.length){
case 0:
return G__9187__0.call(this);
case 1:
return G__9187__1.call(this,result);
case 2:
return G__9187__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9187.cljs$core$IFn$_invoke$arity$0 = G__9187__0;
G__9187.cljs$core$IFn$_invoke$arity$1 = G__9187__1;
G__9187.cljs$core$IFn$_invoke$arity$2 = G__9187__2;
return G__9187;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__9209 = null;
var G__9209__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9209__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__9200 = result;
var G__9201 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9200,G__9201) : rf.call(null,G__9200,G__9201));
})());
})());
var G__9202 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9202) : rf.call(null,G__9202));
});
var G__9209__2 = (function (result,input){
var pval = (function (){var G__9203 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9203) : cljs.core.deref.call(null,G__9203));
})();
var val = (function (){var G__9204 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9204) : f.call(null,G__9204));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__9205 = result;
var G__9206 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9205,G__9206) : rf.call(null,G__9205,G__9206));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__9209 = function(result,input){
switch(arguments.length){
case 0:
return G__9209__0.call(this);
case 1:
return G__9209__1.call(this,result);
case 2:
return G__9209__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9209.cljs$core$IFn$_invoke$arity$0 = G__9209__0;
G__9209.cljs$core$IFn$_invoke$arity$1 = G__9209__1;
G__9209.cljs$core$IFn$_invoke$arity$2 = G__9209__2;
return G__9209;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__9207 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9207) : f.call(null,G__9207));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4425__auto__){
return (function (p1__9188_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__9208 = p1__9188_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9208) : f.call(null,G__9208));
})());
});})(fst,fv,s,temp__4425__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4423__auto__ = cljs.core.seq(coll);
if(temp__4423__auto__){
var s = temp__4423__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__9218 = init;
var G__9219 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9218,G__9219) : f.call(null,G__9218,G__9219));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__9314 = null;
var G__9314__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__9314__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9272 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9272) : f.call(null,G__9272));
})()],null));
});
var G__9314__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9273 = x;
var G__9274 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9273,G__9274) : f.call(null,G__9273,G__9274));
})()],null));
});
var G__9314__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9275 = x;
var G__9276 = y;
var G__9277 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9275,G__9276,G__9277) : f.call(null,G__9275,G__9276,G__9277));
})()],null));
});
var G__9314__4 = (function() { 
var G__9315__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__9315 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9316__i = 0, G__9316__a = new Array(arguments.length -  3);
while (G__9316__i < G__9316__a.length) {G__9316__a[G__9316__i] = arguments[G__9316__i + 3]; ++G__9316__i;}
  args = new cljs.core.IndexedSeq(G__9316__a,0);
} 
return G__9315__delegate.call(this,x,y,z,args);};
G__9315.cljs$lang$maxFixedArity = 3;
G__9315.cljs$lang$applyTo = (function (arglist__9317){
var x = cljs.core.first(arglist__9317);
arglist__9317 = cljs.core.next(arglist__9317);
var y = cljs.core.first(arglist__9317);
arglist__9317 = cljs.core.next(arglist__9317);
var z = cljs.core.first(arglist__9317);
var args = cljs.core.rest(arglist__9317);
return G__9315__delegate(x,y,z,args);
});
G__9315.cljs$core$IFn$_invoke$arity$variadic = G__9315__delegate;
return G__9315;
})()
;
G__9314 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9314__0.call(this);
case 1:
return G__9314__1.call(this,x);
case 2:
return G__9314__2.call(this,x,y);
case 3:
return G__9314__3.call(this,x,y,z);
default:
var G__9318 = null;
if (arguments.length > 3) {
var G__9319__i = 0, G__9319__a = new Array(arguments.length -  3);
while (G__9319__i < G__9319__a.length) {G__9319__a[G__9319__i] = arguments[G__9319__i + 3]; ++G__9319__i;}
G__9318 = new cljs.core.IndexedSeq(G__9319__a,0);
}
return G__9314__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9318);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9314.cljs$lang$maxFixedArity = 3;
G__9314.cljs$lang$applyTo = G__9314__4.cljs$lang$applyTo;
G__9314.cljs$core$IFn$_invoke$arity$0 = G__9314__0;
G__9314.cljs$core$IFn$_invoke$arity$1 = G__9314__1;
G__9314.cljs$core$IFn$_invoke$arity$2 = G__9314__2;
G__9314.cljs$core$IFn$_invoke$arity$3 = G__9314__3;
G__9314.cljs$core$IFn$_invoke$arity$variadic = G__9314__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9314;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__9320 = null;
var G__9320__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__9320__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9278 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9278) : f.call(null,G__9278));
})(),(function (){var G__9279 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9279) : g.call(null,G__9279));
})()],null));
});
var G__9320__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9280 = x;
var G__9281 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9280,G__9281) : f.call(null,G__9280,G__9281));
})(),(function (){var G__9282 = x;
var G__9283 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__9282,G__9283) : g.call(null,G__9282,G__9283));
})()],null));
});
var G__9320__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9284 = x;
var G__9285 = y;
var G__9286 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9284,G__9285,G__9286) : f.call(null,G__9284,G__9285,G__9286));
})(),(function (){var G__9287 = x;
var G__9288 = y;
var G__9289 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__9287,G__9288,G__9289) : g.call(null,G__9287,G__9288,G__9289));
})()],null));
});
var G__9320__4 = (function() { 
var G__9321__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__9321 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9322__i = 0, G__9322__a = new Array(arguments.length -  3);
while (G__9322__i < G__9322__a.length) {G__9322__a[G__9322__i] = arguments[G__9322__i + 3]; ++G__9322__i;}
  args = new cljs.core.IndexedSeq(G__9322__a,0);
} 
return G__9321__delegate.call(this,x,y,z,args);};
G__9321.cljs$lang$maxFixedArity = 3;
G__9321.cljs$lang$applyTo = (function (arglist__9323){
var x = cljs.core.first(arglist__9323);
arglist__9323 = cljs.core.next(arglist__9323);
var y = cljs.core.first(arglist__9323);
arglist__9323 = cljs.core.next(arglist__9323);
var z = cljs.core.first(arglist__9323);
var args = cljs.core.rest(arglist__9323);
return G__9321__delegate(x,y,z,args);
});
G__9321.cljs$core$IFn$_invoke$arity$variadic = G__9321__delegate;
return G__9321;
})()
;
G__9320 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9320__0.call(this);
case 1:
return G__9320__1.call(this,x);
case 2:
return G__9320__2.call(this,x,y);
case 3:
return G__9320__3.call(this,x,y,z);
default:
var G__9324 = null;
if (arguments.length > 3) {
var G__9325__i = 0, G__9325__a = new Array(arguments.length -  3);
while (G__9325__i < G__9325__a.length) {G__9325__a[G__9325__i] = arguments[G__9325__i + 3]; ++G__9325__i;}
G__9324 = new cljs.core.IndexedSeq(G__9325__a,0);
}
return G__9320__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9324);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9320.cljs$lang$maxFixedArity = 3;
G__9320.cljs$lang$applyTo = G__9320__4.cljs$lang$applyTo;
G__9320.cljs$core$IFn$_invoke$arity$0 = G__9320__0;
G__9320.cljs$core$IFn$_invoke$arity$1 = G__9320__1;
G__9320.cljs$core$IFn$_invoke$arity$2 = G__9320__2;
G__9320.cljs$core$IFn$_invoke$arity$3 = G__9320__3;
G__9320.cljs$core$IFn$_invoke$arity$variadic = G__9320__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9320;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__9326 = null;
var G__9326__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__9326__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9290 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9290) : f.call(null,G__9290));
})(),(function (){var G__9291 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9291) : g.call(null,G__9291));
})(),(function (){var G__9292 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__9292) : h.call(null,G__9292));
})()],null));
});
var G__9326__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9293 = x;
var G__9294 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9293,G__9294) : f.call(null,G__9293,G__9294));
})(),(function (){var G__9295 = x;
var G__9296 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__9295,G__9296) : g.call(null,G__9295,G__9296));
})(),(function (){var G__9297 = x;
var G__9298 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__9297,G__9298) : h.call(null,G__9297,G__9298));
})()],null));
});
var G__9326__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9299 = x;
var G__9300 = y;
var G__9301 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9299,G__9300,G__9301) : f.call(null,G__9299,G__9300,G__9301));
})(),(function (){var G__9302 = x;
var G__9303 = y;
var G__9304 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__9302,G__9303,G__9304) : g.call(null,G__9302,G__9303,G__9304));
})(),(function (){var G__9305 = x;
var G__9306 = y;
var G__9307 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__9305,G__9306,G__9307) : h.call(null,G__9305,G__9306,G__9307));
})()],null));
});
var G__9326__4 = (function() { 
var G__9327__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__9327 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9328__i = 0, G__9328__a = new Array(arguments.length -  3);
while (G__9328__i < G__9328__a.length) {G__9328__a[G__9328__i] = arguments[G__9328__i + 3]; ++G__9328__i;}
  args = new cljs.core.IndexedSeq(G__9328__a,0);
} 
return G__9327__delegate.call(this,x,y,z,args);};
G__9327.cljs$lang$maxFixedArity = 3;
G__9327.cljs$lang$applyTo = (function (arglist__9329){
var x = cljs.core.first(arglist__9329);
arglist__9329 = cljs.core.next(arglist__9329);
var y = cljs.core.first(arglist__9329);
arglist__9329 = cljs.core.next(arglist__9329);
var z = cljs.core.first(arglist__9329);
var args = cljs.core.rest(arglist__9329);
return G__9327__delegate(x,y,z,args);
});
G__9327.cljs$core$IFn$_invoke$arity$variadic = G__9327__delegate;
return G__9327;
})()
;
G__9326 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9326__0.call(this);
case 1:
return G__9326__1.call(this,x);
case 2:
return G__9326__2.call(this,x,y);
case 3:
return G__9326__3.call(this,x,y,z);
default:
var G__9330 = null;
if (arguments.length > 3) {
var G__9331__i = 0, G__9331__a = new Array(arguments.length -  3);
while (G__9331__i < G__9331__a.length) {G__9331__a[G__9331__i] = arguments[G__9331__i + 3]; ++G__9331__i;}
G__9330 = new cljs.core.IndexedSeq(G__9331__a,0);
}
return G__9326__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9330);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9326.cljs$lang$maxFixedArity = 3;
G__9326.cljs$lang$applyTo = G__9326__4.cljs$lang$applyTo;
G__9326.cljs$core$IFn$_invoke$arity$0 = G__9326__0;
G__9326.cljs$core$IFn$_invoke$arity$1 = G__9326__1;
G__9326.cljs$core$IFn$_invoke$arity$2 = G__9326__2;
G__9326.cljs$core$IFn$_invoke$arity$3 = G__9326__3;
G__9326.cljs$core$IFn$_invoke$arity$variadic = G__9326__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9326;
})()
});
var juxt__4 = (function() { 
var G__9332__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__9333 = null;
var G__9333__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__9220_SHARP_,p2__9221_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9220_SHARP_,(function (){return (p2__9221_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__9221_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__9221_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__9333__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__9222_SHARP_,p2__9223_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9222_SHARP_,(function (){var G__9308 = x;
return (p2__9223_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__9223_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9308) : p2__9223_SHARP_.call(null,G__9308));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__9333__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__9224_SHARP_,p2__9225_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9224_SHARP_,(function (){var G__9309 = x;
var G__9310 = y;
return (p2__9225_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__9225_SHARP_.cljs$core$IFn$_invoke$arity$2(G__9309,G__9310) : p2__9225_SHARP_.call(null,G__9309,G__9310));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__9333__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__9226_SHARP_,p2__9227_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9226_SHARP_,(function (){var G__9311 = x;
var G__9312 = y;
var G__9313 = z;
return (p2__9227_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__9227_SHARP_.cljs$core$IFn$_invoke$arity$3(G__9311,G__9312,G__9313) : p2__9227_SHARP_.call(null,G__9311,G__9312,G__9313));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__9333__4 = (function() { 
var G__9334__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__9228_SHARP_,p2__9229_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9228_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__9229_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__9334 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9335__i = 0, G__9335__a = new Array(arguments.length -  3);
while (G__9335__i < G__9335__a.length) {G__9335__a[G__9335__i] = arguments[G__9335__i + 3]; ++G__9335__i;}
  args = new cljs.core.IndexedSeq(G__9335__a,0);
} 
return G__9334__delegate.call(this,x,y,z,args);};
G__9334.cljs$lang$maxFixedArity = 3;
G__9334.cljs$lang$applyTo = (function (arglist__9336){
var x = cljs.core.first(arglist__9336);
arglist__9336 = cljs.core.next(arglist__9336);
var y = cljs.core.first(arglist__9336);
arglist__9336 = cljs.core.next(arglist__9336);
var z = cljs.core.first(arglist__9336);
var args = cljs.core.rest(arglist__9336);
return G__9334__delegate(x,y,z,args);
});
G__9334.cljs$core$IFn$_invoke$arity$variadic = G__9334__delegate;
return G__9334;
})()
;
G__9333 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9333__0.call(this);
case 1:
return G__9333__1.call(this,x);
case 2:
return G__9333__2.call(this,x,y);
case 3:
return G__9333__3.call(this,x,y,z);
default:
var G__9337 = null;
if (arguments.length > 3) {
var G__9338__i = 0, G__9338__a = new Array(arguments.length -  3);
while (G__9338__i < G__9338__a.length) {G__9338__a[G__9338__i] = arguments[G__9338__i + 3]; ++G__9338__i;}
G__9337 = new cljs.core.IndexedSeq(G__9338__a,0);
}
return G__9333__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9337);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9333.cljs$lang$maxFixedArity = 3;
G__9333.cljs$lang$applyTo = G__9333__4.cljs$lang$applyTo;
G__9333.cljs$core$IFn$_invoke$arity$0 = G__9333__0;
G__9333.cljs$core$IFn$_invoke$arity$1 = G__9333__1;
G__9333.cljs$core$IFn$_invoke$arity$2 = G__9333__2;
G__9333.cljs$core$IFn$_invoke$arity$3 = G__9333__3;
G__9333.cljs$core$IFn$_invoke$arity$variadic = G__9333__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9333;
})()
;})(fs__$1))
};
var G__9332 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__9339__i = 0, G__9339__a = new Array(arguments.length -  3);
while (G__9339__i < G__9339__a.length) {G__9339__a[G__9339__i] = arguments[G__9339__i + 3]; ++G__9339__i;}
  fs = new cljs.core.IndexedSeq(G__9339__a,0);
} 
return G__9332__delegate.call(this,f,g,h,fs);};
G__9332.cljs$lang$maxFixedArity = 3;
G__9332.cljs$lang$applyTo = (function (arglist__9340){
var f = cljs.core.first(arglist__9340);
arglist__9340 = cljs.core.next(arglist__9340);
var g = cljs.core.first(arglist__9340);
arglist__9340 = cljs.core.next(arglist__9340);
var h = cljs.core.first(arglist__9340);
var fs = cljs.core.rest(arglist__9340);
return G__9332__delegate(f,g,h,fs);
});
G__9332.cljs$core$IFn$_invoke$arity$variadic = G__9332__delegate;
return G__9332;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__9341 = null;
if (arguments.length > 3) {
var G__9342__i = 0, G__9342__a = new Array(arguments.length -  3);
while (G__9342__i < G__9342__a.length) {G__9342__a[G__9342__i] = arguments[G__9342__i + 3]; ++G__9342__i;}
G__9341 = new cljs.core.IndexedSeq(G__9342__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__9341);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__9343 = cljs.core.next(coll);
coll = G__9343;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__9344 = (n - (1));
var G__9345 = cljs.core.next(coll);
n = G__9344;
coll = G__9345;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__9349 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9349,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9349,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9349,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_9357 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__3127__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__9358_9364 = cljs.core.first(coll);
var G__9359_9365 = writer;
var G__9360_9366 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__9358_9364,G__9359_9365,G__9360_9366) : print_one.call(null,G__9358_9364,G__9359_9365,G__9360_9366));
} else {
}

var coll_9367__$1 = cljs.core.next(coll);
var n_9368 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_9367__$1) && (((n_9368 == null)) || (!((n_9368 === (0)))))){
cljs.core._write(writer,sep);

var G__9361_9369 = cljs.core.first(coll_9367__$1);
var G__9362_9370 = writer;
var G__9363_9371 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__9361_9369,G__9362_9370,G__9363_9371) : print_one.call(null,G__9361_9369,G__9362_9370,G__9363_9371));

var G__9372 = cljs.core.next(coll_9367__$1);
var G__9373 = (n_9368 - (1));
coll_9367__$1 = G__9372;
n_9368 = G__9373;
continue;
} else {
if((cljs.core.seq(coll_9367__$1)) && ((n_9368 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__3127__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_9357;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__9378 = cljs.core.seq(ss);
var chunk__9379 = null;
var count__9380 = (0);
var i__9381 = (0);
while(true){
if((i__9381 < count__9380)){
var s = chunk__9379.cljs$core$IIndexed$_nth$arity$2(null,i__9381);
cljs.core._write(writer,s);

var G__9382 = seq__9378;
var G__9383 = chunk__9379;
var G__9384 = count__9380;
var G__9385 = (i__9381 + (1));
seq__9378 = G__9382;
chunk__9379 = G__9383;
count__9380 = G__9384;
i__9381 = G__9385;
continue;
} else {
var temp__4425__auto__ = cljs.core.seq(seq__9378);
if(temp__4425__auto__){
var seq__9378__$1 = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9378__$1)){
var c__3914__auto__ = cljs.core.chunk_first(seq__9378__$1);
var G__9386 = cljs.core.chunk_rest(seq__9378__$1);
var G__9387 = c__3914__auto__;
var G__9388 = cljs.core.count(c__3914__auto__);
var G__9389 = (0);
seq__9378 = G__9386;
chunk__9379 = G__9387;
count__9380 = G__9388;
i__9381 = G__9389;
continue;
} else {
var s = cljs.core.first(seq__9378__$1);
cljs.core._write(writer,s);

var G__9390 = cljs.core.next(seq__9378__$1);
var G__9391 = null;
var G__9392 = (0);
var G__9393 = (0);
seq__9378 = G__9390;
chunk__9379 = G__9391;
count__9380 = G__9392;
i__9381 = G__9393;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__9394__i = 0, G__9394__a = new Array(arguments.length -  1);
while (G__9394__i < G__9394__a.length) {G__9394__a[G__9394__i] = arguments[G__9394__i + 1]; ++G__9394__i;}
  ss = new cljs.core.IndexedSeq(G__9394__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__9395){
var writer = cljs.core.first(arglist__9395);
var ss = cljs.core.rest(arglist__9395);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj9397 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj9397;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__9400 = "[\\\\\"\b\f\n\r\t]";
var G__9401 = "g";
return RegExp(G__9400,G__9401);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3115__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__3115__auto__)){
var and__3115__auto____$1 = (function (){var G__9415 = obj;
if(G__9415){
var bit__3808__auto__ = (G__9415.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__3808__auto__) || (G__9415.cljs$core$IMeta$)){
return true;
} else {
if((!G__9415.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__9415);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__9415);
}
})();
if(and__3115__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3115__auto____$1;
}
} else {
return and__3115__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__9416_9426 = cljs.core.meta(obj);
var G__9417_9427 = writer;
var G__9418_9428 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__9416_9426,G__9417_9427,G__9418_9428) : cljs.core.pr_writer.call(null,G__9416_9426,G__9417_9427,G__9418_9428));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__9419 = obj;
if(G__9419){
var bit__3801__auto__ = (G__9419.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__3801__auto__) || (G__9419.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__9420 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__9421 = cljs.core.pr_writer;
var G__9422 = writer;
var G__9423 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__9420,G__9421,G__9422,G__9423) : cljs.core.print_map.call(null,G__9420,G__9421,G__9422,G__9423));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__9424 = obj;
return goog.isString(G__9424);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__9429 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__9429;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__9425 = obj;
if(G__9425){
var bit__3808__auto__ = (G__9425.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__3808__auto__) || (G__9425.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__9425.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__9425);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__9425);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4423__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4423__auto__)){
var alt_impl = temp__4423__auto__;
var G__9433 = obj;
var G__9434 = writer;
var G__9435 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__9433,G__9434,G__9435) : alt_impl.call(null,G__9433,G__9434,G__9435));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__9440 = cljs.core.seq(cljs.core.next(objs));
var chunk__9441 = null;
var count__9442 = (0);
var i__9443 = (0);
while(true){
if((i__9443 < count__9442)){
var obj = chunk__9441.cljs$core$IIndexed$_nth$arity$2(null,i__9443);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__9444 = seq__9440;
var G__9445 = chunk__9441;
var G__9446 = count__9442;
var G__9447 = (i__9443 + (1));
seq__9440 = G__9444;
chunk__9441 = G__9445;
count__9442 = G__9446;
i__9443 = G__9447;
continue;
} else {
var temp__4425__auto__ = cljs.core.seq(seq__9440);
if(temp__4425__auto__){
var seq__9440__$1 = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9440__$1)){
var c__3914__auto__ = cljs.core.chunk_first(seq__9440__$1);
var G__9448 = cljs.core.chunk_rest(seq__9440__$1);
var G__9449 = c__3914__auto__;
var G__9450 = cljs.core.count(c__3914__auto__);
var G__9451 = (0);
seq__9440 = G__9448;
chunk__9441 = G__9449;
count__9442 = G__9450;
i__9443 = G__9451;
continue;
} else {
var obj = cljs.core.first(seq__9440__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__9452 = cljs.core.next(seq__9440__$1);
var G__9453 = null;
var G__9454 = (0);
var G__9455 = (0);
seq__9440 = G__9452;
chunk__9441 = G__9453;
count__9442 = G__9454;
i__9443 = G__9455;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__9456__i = 0, G__9456__a = new Array(arguments.length -  0);
while (G__9456__i < G__9456__a.length) {G__9456__a[G__9456__i] = arguments[G__9456__i + 0]; ++G__9456__i;}
  objs = new cljs.core.IndexedSeq(G__9456__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__9457){
var objs = cljs.core.seq(arglist__9457);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__9458__i = 0, G__9458__a = new Array(arguments.length -  0);
while (G__9458__i < G__9458__a.length) {G__9458__a[G__9458__i] = arguments[G__9458__i + 0]; ++G__9458__i;}
  objs = new cljs.core.IndexedSeq(G__9458__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__9459){
var objs = cljs.core.seq(arglist__9459);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__9460__i = 0, G__9460__a = new Array(arguments.length -  0);
while (G__9460__i < G__9460__a.length) {G__9460__a[G__9460__i] = arguments[G__9460__i + 0]; ++G__9460__i;}
  objs = new cljs.core.IndexedSeq(G__9460__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__9461){
var objs = cljs.core.seq(arglist__9461);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__9462__i = 0, G__9462__a = new Array(arguments.length -  0);
while (G__9462__i < G__9462__a.length) {G__9462__a[G__9462__i] = arguments[G__9462__i + 0]; ++G__9462__i;}
  objs = new cljs.core.IndexedSeq(G__9462__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__9463){
var objs = cljs.core.seq(arglist__9463);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__9464__i = 0, G__9464__a = new Array(arguments.length -  0);
while (G__9464__i < G__9464__a.length) {G__9464__a[G__9464__i] = arguments[G__9464__i + 0]; ++G__9464__i;}
  objs = new cljs.core.IndexedSeq(G__9464__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__9465){
var objs = cljs.core.seq(arglist__9465);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__9466__i = 0, G__9466__a = new Array(arguments.length -  0);
while (G__9466__i < G__9466__a.length) {G__9466__a[G__9466__i] = arguments[G__9466__i + 0]; ++G__9466__i;}
  objs = new cljs.core.IndexedSeq(G__9466__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__9467){
var objs = cljs.core.seq(arglist__9467);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__9468__i = 0, G__9468__a = new Array(arguments.length -  0);
while (G__9468__i < G__9468__a.length) {G__9468__a[G__9468__i] = arguments[G__9468__i + 0]; ++G__9468__i;}
  objs = new cljs.core.IndexedSeq(G__9468__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__9469){
var objs = cljs.core.seq(arglist__9469);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__9470__i = 0, G__9470__a = new Array(arguments.length -  0);
while (G__9470__i < G__9470__a.length) {G__9470__a[G__9470__i] = arguments[G__9470__i + 0]; ++G__9470__i;}
  objs = new cljs.core.IndexedSeq(G__9470__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__9471){
var objs = cljs.core.seq(arglist__9471);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__9478_9484 = cljs.core.key(e);
var G__9479_9485 = w;
var G__9480_9486 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__9478_9484,G__9479_9485,G__9480_9486) : print_one.call(null,G__9478_9484,G__9479_9485,G__9480_9486));

cljs.core._write(w," ");

var G__9481 = cljs.core.val(e);
var G__9482 = w;
var G__9483 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__9481,G__9482,G__9483) : print_one.call(null,G__9481,G__9482,G__9483));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__9487__i = 0, G__9487__a = new Array(arguments.length -  2);
while (G__9487__i < G__9487__a.length) {G__9487__a[G__9487__i] = arguments[G__9487__i + 2]; ++G__9487__i;}
  args = new cljs.core.IndexedSeq(G__9487__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__9488){
var iref = cljs.core.first(arglist__9488);
arglist__9488 = cljs.core.next(arglist__9488);
var f = cljs.core.first(arglist__9488);
var args = cljs.core.rest(arglist__9488);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__9491 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9491) : cljs.core.atom.call(null,G__9491));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition0$ = 32768;
this.cljs$lang$protocol_mask$partition1$ = 1;
})
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__9493 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9493) : cljs.core.deref.call(null,G__9493));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__9494_SHARP_,p2__9495_SHARP_){
var ret = (function (){var G__9498 = p1__9494_SHARP_;
var G__9499 = p2__9495_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9498,G__9499) : rf.call(null,G__9498,G__9499));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__9502 = null;
var G__9502__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9502__1 = (function (result){
var G__9501 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9501) : rf.call(null,G__9501));
});
var G__9502__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__9502 = function(result,input){
switch(arguments.length){
case 0:
return G__9502__0.call(this);
case 1:
return G__9502__1.call(this,result);
case 2:
return G__9502__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9502.cljs$core$IFn$_invoke$arity$0 = G__9502__0;
G__9502.cljs$core$IFn$_invoke$arity$1 = G__9502__1;
G__9502.cljs$core$IFn$_invoke$arity$2 = G__9502__2;
return G__9502;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__9511 = null;
var G__9511__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9511__1 = (function (result){
var G__9507 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9507) : rf.call(null,G__9507));
});
var G__9511__2 = (function (result,input){
var prior = (function (){var G__9508 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9508) : cljs.core.deref.call(null,G__9508));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__9509 = result;
var G__9510 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9509,G__9510) : rf.call(null,G__9509,G__9510));
}
});
G__9511 = function(result,input){
switch(arguments.length){
case 0:
return G__9511__0.call(this);
case 1:
return G__9511__1.call(this,result);
case 2:
return G__9511__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9511.cljs$core$IFn$_invoke$arity$0 = G__9511__0;
G__9511.cljs$core$IFn$_invoke$arity$1 = G__9511__1;
G__9511.cljs$core$IFn$_invoke$arity$2 = G__9511__2;
return G__9511;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__9513_SHARP_,p2__9512_SHARP_){
var G__9515 = p2__9512_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__9515) : proc.call(null,G__9515));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj9517 = {};
return obj9517;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3115__auto__ = x;
if(and__3115__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3115__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__3771__auto__ = (((x == null))?null:x);
return (function (){var or__3127__auto__ = (cljs.core._clj__GT_js[(function (){var G__9521 = x__3771__auto__;
return goog.typeOf(G__9521);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3115__auto__ = x;
if(and__3115__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3115__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__3771__auto__ = (((x == null))?null:x);
return (function (){var or__3127__auto__ = (cljs.core._key__GT_js[(function (){var G__9525 = x__3771__auto__;
return goog.typeOf(G__9525);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__9528 = k;
if(G__9528){
var bit__3808__auto__ = null;
if(cljs.core.truth_((function (){var or__3127__auto__ = bit__3808__auto__;
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
return G__9528.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__9528.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__9528);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__9528);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__9529 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__9529) : cljs.core.clj__GT_js.call(null,G__9529));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__9545 = x;
if(G__9545){
var bit__3808__auto__ = null;
if(cljs.core.truth_((function (){var or__3127__auto__ = bit__3808__auto__;
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
return G__9545.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__9545.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__9545);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__9545);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj9547 = {};
return obj9547;
})();
var seq__9548_9558 = cljs.core.seq(x);
var chunk__9549_9559 = null;
var count__9550_9560 = (0);
var i__9551_9561 = (0);
while(true){
if((i__9551_9561 < count__9550_9560)){
var vec__9552_9562 = chunk__9549_9559.cljs$core$IIndexed$_nth$arity$2(null,i__9551_9561);
var k_9563 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9552_9562,(0),null);
var v_9564 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9552_9562,(1),null);
(m[cljs.core.key__GT_js(k_9563)] = clj__GT_js(v_9564));

var G__9565 = seq__9548_9558;
var G__9566 = chunk__9549_9559;
var G__9567 = count__9550_9560;
var G__9568 = (i__9551_9561 + (1));
seq__9548_9558 = G__9565;
chunk__9549_9559 = G__9566;
count__9550_9560 = G__9567;
i__9551_9561 = G__9568;
continue;
} else {
var temp__4425__auto___9569 = cljs.core.seq(seq__9548_9558);
if(temp__4425__auto___9569){
var seq__9548_9570__$1 = temp__4425__auto___9569;
if(cljs.core.chunked_seq_QMARK_(seq__9548_9570__$1)){
var c__3914__auto___9571 = cljs.core.chunk_first(seq__9548_9570__$1);
var G__9572 = cljs.core.chunk_rest(seq__9548_9570__$1);
var G__9573 = c__3914__auto___9571;
var G__9574 = cljs.core.count(c__3914__auto___9571);
var G__9575 = (0);
seq__9548_9558 = G__9572;
chunk__9549_9559 = G__9573;
count__9550_9560 = G__9574;
i__9551_9561 = G__9575;
continue;
} else {
var vec__9553_9576 = cljs.core.first(seq__9548_9570__$1);
var k_9577 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9553_9576,(0),null);
var v_9578 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9553_9576,(1),null);
(m[cljs.core.key__GT_js(k_9577)] = clj__GT_js(v_9578));

var G__9579 = cljs.core.next(seq__9548_9570__$1);
var G__9580 = null;
var G__9581 = (0);
var G__9582 = (0);
seq__9548_9558 = G__9579;
chunk__9549_9559 = G__9580;
count__9550_9560 = G__9581;
i__9551_9561 = G__9582;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__9554_9583 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__9555_9584 = null;
var count__9556_9585 = (0);
var i__9557_9586 = (0);
while(true){
if((i__9557_9586 < count__9556_9585)){
var x_9587__$1 = chunk__9555_9584.cljs$core$IIndexed$_nth$arity$2(null,i__9557_9586);
arr.push(x_9587__$1);

var G__9588 = seq__9554_9583;
var G__9589 = chunk__9555_9584;
var G__9590 = count__9556_9585;
var G__9591 = (i__9557_9586 + (1));
seq__9554_9583 = G__9588;
chunk__9555_9584 = G__9589;
count__9556_9585 = G__9590;
i__9557_9586 = G__9591;
continue;
} else {
var temp__4425__auto___9592 = cljs.core.seq(seq__9554_9583);
if(temp__4425__auto___9592){
var seq__9554_9593__$1 = temp__4425__auto___9592;
if(cljs.core.chunked_seq_QMARK_(seq__9554_9593__$1)){
var c__3914__auto___9594 = cljs.core.chunk_first(seq__9554_9593__$1);
var G__9595 = cljs.core.chunk_rest(seq__9554_9593__$1);
var G__9596 = c__3914__auto___9594;
var G__9597 = cljs.core.count(c__3914__auto___9594);
var G__9598 = (0);
seq__9554_9583 = G__9595;
chunk__9555_9584 = G__9596;
count__9556_9585 = G__9597;
i__9557_9586 = G__9598;
continue;
} else {
var x_9599__$1 = cljs.core.first(seq__9554_9593__$1);
arr.push(x_9599__$1);

var G__9600 = cljs.core.next(seq__9554_9593__$1);
var G__9601 = null;
var G__9602 = (0);
var G__9603 = (0);
seq__9554_9583 = G__9600;
chunk__9555_9584 = G__9601;
count__9556_9585 = G__9602;
i__9557_9586 = G__9603;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj9605 = {};
return obj9605;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3115__auto__ = x;
if(and__3115__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3115__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__3771__auto__ = (((x == null))?null:x);
return (function (){var or__3127__auto__ = (cljs.core._js__GT_clj[(function (){var G__9609 = x__3771__auto__;
return goog.typeOf(G__9609);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__9666__delegate = function (x,opts){
var map__9639 = opts;
var map__9639__$1 = ((cljs.core.seq_QMARK_(map__9639))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__9639):map__9639);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9639__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__9639,map__9639__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__9655 = x__$1;
if(G__9655){
var bit__3808__auto__ = null;
if(cljs.core.truth_((function (){var or__3127__auto__ = bit__3808__auto__;
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
return G__9655.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__9655.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__9655);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__9655);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__3883__auto__ = ((function (map__9639,map__9639__$1,keywordize_keys,keyfn){
return (function iter__9656(s__9657){
return (new cljs.core.LazySeq(null,((function (map__9639,map__9639__$1,keywordize_keys,keyfn){
return (function (){
var s__9657__$1 = s__9657;
while(true){
var temp__4425__auto__ = cljs.core.seq(s__9657__$1);
if(temp__4425__auto__){
var s__9657__$2 = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(s__9657__$2)){
var c__3881__auto__ = cljs.core.chunk_first(s__9657__$2);
var size__3882__auto__ = cljs.core.count(c__3881__auto__);
var b__9659 = cljs.core.chunk_buffer(size__3882__auto__);
if((function (){var i__9658 = (0);
while(true){
if((i__9658 < size__3882__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__3881__auto__,i__9658);
cljs.core.chunk_append(b__9659,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__9664 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__9664) : keyfn.call(null,G__9664));
})(),thisfn((x__$1[k]))], null));

var G__9667 = (i__9658 + (1));
i__9658 = G__9667;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__9659),iter__9656(cljs.core.chunk_rest(s__9657__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__9659),null);
}
} else {
var k = cljs.core.first(s__9657__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__9665 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__9665) : keyfn.call(null,G__9665));
})(),thisfn((x__$1[k]))], null),iter__9656(cljs.core.rest(s__9657__$2)));
}
} else {
return null;
}
break;
}
});})(map__9639,map__9639__$1,keywordize_keys,keyfn))
,null,null));
});})(map__9639,map__9639__$1,keywordize_keys,keyfn))
;
return iter__3883__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__9639,map__9639__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__9666 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__9668__i = 0, G__9668__a = new Array(arguments.length -  1);
while (G__9668__i < G__9668__a.length) {G__9668__a[G__9668__i] = arguments[G__9668__i + 1]; ++G__9668__i;}
  opts = new cljs.core.IndexedSeq(G__9668__a,0);
} 
return G__9666__delegate.call(this,x,opts);};
G__9666.cljs$lang$maxFixedArity = 1;
G__9666.cljs$lang$applyTo = (function (arglist__9669){
var x = cljs.core.first(arglist__9669);
var opts = cljs.core.rest(arglist__9669);
return G__9666__delegate(x,opts);
});
G__9666.cljs$core$IFn$_invoke$arity$variadic = G__9666__delegate;
return G__9666;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__9670 = null;
if (arguments.length > 1) {
var G__9671__i = 0, G__9671__a = new Array(arguments.length -  1);
while (G__9671__i < G__9671__a.length) {G__9671__a[G__9671__i] = arguments[G__9671__i + 1]; ++G__9671__i;}
G__9670 = new cljs.core.IndexedSeq(G__9671__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__9670);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__9674 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9674) : cljs.core.atom.call(null,G__9674));
})();
return ((function (mem){
return (function() { 
var G__9676__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__9675 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9675) : cljs.core.deref.call(null,G__9675));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__9676 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9677__i = 0, G__9677__a = new Array(arguments.length -  0);
while (G__9677__i < G__9677__a.length) {G__9677__a[G__9677__i] = arguments[G__9677__i + 0]; ++G__9677__i;}
  args = new cljs.core.IndexedSeq(G__9677__a,0);
} 
return G__9676__delegate.call(this,args);};
G__9676.cljs$lang$maxFixedArity = 0;
G__9676.cljs$lang$applyTo = (function (arglist__9678){
var args = cljs.core.seq(arglist__9678);
return G__9676__delegate(args);
});
G__9676.cljs$core$IFn$_invoke$arity$variadic = G__9676__delegate;
return G__9676;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__9680 = ret;
f = G__9680;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__9681__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__9681 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__9682__i = 0, G__9682__a = new Array(arguments.length -  1);
while (G__9682__i < G__9682__a.length) {G__9682__a[G__9682__i] = arguments[G__9682__i + 1]; ++G__9682__i;}
  args = new cljs.core.IndexedSeq(G__9682__a,0);
} 
return G__9681__delegate.call(this,f,args);};
G__9681.cljs$lang$maxFixedArity = 1;
G__9681.cljs$lang$applyTo = (function (arglist__9683){
var f = cljs.core.first(arglist__9683);
var args = cljs.core.rest(arglist__9683);
return G__9681__delegate(f,args);
});
G__9681.cljs$core$IFn$_invoke$arity$variadic = G__9681__delegate;
return G__9681;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__9684 = null;
if (arguments.length > 1) {
var G__9685__i = 0, G__9685__a = new Array(arguments.length -  1);
while (G__9685__i < G__9685__a.length) {G__9685__a[G__9685__i] = arguments[G__9685__i + 1]; ++G__9685__i;}
G__9684 = new cljs.core.IndexedSeq(G__9685__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__9684);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__9688 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__9688) : Math.floor.call(null,G__9688));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__9690 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9690) : f.call(null,G__9690));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__9692 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9692) : cljs.core.atom.call(null,G__9692));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__9693__i = 0, G__9693__a = new Array(arguments.length -  1);
while (G__9693__i < G__9693__a.length) {G__9693__a[G__9693__i] = arguments[G__9693__i + 1]; ++G__9693__i;}
  args = new cljs.core.IndexedSeq(G__9693__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__9694){
var f = cljs.core.first(arglist__9694);
var args = cljs.core.rest(arglist__9694);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__9759 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9759) : cljs.core.deref.call(null,G__9759));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3127__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
var and__3115__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3115__auto__){
var and__3115__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3115__auto____$1){
var and__3115__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3115__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__9784 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__9782 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__9782) : child.call(null,G__9782));
})(),(function (){var G__9783 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__9783) : parent.call(null,G__9783));
})());
var G__9785 = (i + (1));
ret = G__9784;
i = G__9785;
continue;
}
break;
}
} else {
return and__3115__auto____$2;
}
} else {
return and__3115__auto____$1;
}
} else {
return and__3115__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__9789 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9789) : cljs.core.deref.call(null,G__9789));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__9793 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9793) : cljs.core.deref.call(null,G__9793));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__9797 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9797) : cljs.core.deref.call(null,G__9797));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__9806 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__9806) : targets.call(null,G__9806));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__9807 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__9807) : sources.call(null,G__9807));
})()));
});})(tp,td,ta))
;
var or__3127__auto__ = ((cljs.core.contains_QMARK_((function (){var G__9811 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__9811) : tp.call(null,G__9811));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__9812 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__9812) : ta.call(null,G__9812));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__9813 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__9813) : ta.call(null,G__9813));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__9820 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__9820) : parentMap.call(null,G__9820));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__9821 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__9821) : parentMap.call(null,G__9821));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__9814_SHARP_){
return cljs.core.cons(cljs.core.first(p1__9814_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__9814_SHARP_),cljs.core.second(p1__9814_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__9822 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__9822) : parentMap.call(null,G__9822));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__9815_SHARP_,p2__9816_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__9815_SHARP_,p2__9816_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__9825 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9825) : cljs.core.deref.call(null,G__9825));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__9826 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9826) : cljs.core.deref.call(null,G__9826));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__9842 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9842) : cljs.core.deref.call(null,G__9842));
})().call(null,x);
var or__3127__auto__ = (cljs.core.truth_((function (){var and__3115__auto__ = xprefs;
if(cljs.core.truth_(and__3115__auto__)){
var G__9844 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__9844) : xprefs.call(null,G__9844));
} else {
return and__3115__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__9845 = cljs.core.rest(ps);
ps = G__9845;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3127__auto____$1)){
return or__3127__auto____$1;
} else {
var or__3127__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__9846 = cljs.core.rest(ps);
ps = G__9846;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3127__auto____$2)){
return or__3127__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3127__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__9860){
var vec__9861 = p__9860;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9861,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9861,(1),null);
var e = vec__9861;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__9862 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9862) : cljs.core.deref.call(null,G__9862));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3127__auto__ = (be == null);
if(or__3127__auto__){
return or__3127__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__9863 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9863) : cljs.core.deref.call(null,G__9863));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__9864 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9864) : cljs.core.deref.call(null,G__9864));
})(),(function (){var G__9865 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9865) : cljs.core.deref.call(null,G__9865));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj9867 = {};
return obj9867;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3115__auto__ = mf;
if(and__3115__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3115__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__3771__auto__ = (((mf == null))?null:mf);
return (function (){var or__3127__auto__ = (cljs.core._reset[(function (){var G__9871 = x__3771__auto__;
return goog.typeOf(G__9871);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._reset["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3115__auto__ = mf;
if(and__3115__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3115__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__3771__auto__ = (((mf == null))?null:mf);
return (function (){var or__3127__auto__ = (cljs.core._add_method[(function (){var G__9875 = x__3771__auto__;
return goog.typeOf(G__9875);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._add_method["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3115__auto__ = mf;
if(and__3115__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3115__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__3771__auto__ = (((mf == null))?null:mf);
return (function (){var or__3127__auto__ = (cljs.core._remove_method[(function (){var G__9879 = x__3771__auto__;
return goog.typeOf(G__9879);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3115__auto__ = mf;
if(and__3115__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3115__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__3771__auto__ = (((mf == null))?null:mf);
return (function (){var or__3127__auto__ = (cljs.core._prefer_method[(function (){var G__9883 = x__3771__auto__;
return goog.typeOf(G__9883);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3115__auto__ = mf;
if(and__3115__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3115__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__3771__auto__ = (((mf == null))?null:mf);
return (function (){var or__3127__auto__ = (cljs.core._get_method[(function (){var G__9887 = x__3771__auto__;
return goog.typeOf(G__9887);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._get_method["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3115__auto__ = mf;
if(and__3115__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3115__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__3771__auto__ = (((mf == null))?null:mf);
return (function (){var or__3127__auto__ = (cljs.core._methods[(function (){var G__9891 = x__3771__auto__;
return goog.typeOf(G__9891);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._methods["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3115__auto__ = mf;
if(and__3115__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3115__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__3771__auto__ = (((mf == null))?null:mf);
return (function (){var or__3127__auto__ = (cljs.core._prefers[(function (){var G__9895 = x__3771__auto__;
return goog.typeOf(G__9895);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._prefers["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.call = (function() {
var G__10744 = null;
var G__10744__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__10744__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__9897 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__9897) : self__.dispatch_fn.call(null,G__9897));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__9898 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__9898) : target_fn.call(null,G__9898));
});
var G__10744__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__9899 = a;
var G__9900 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__9899,G__9900) : self__.dispatch_fn.call(null,G__9899,G__9900));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__9901 = a;
var G__9902 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__9901,G__9902) : target_fn.call(null,G__9901,G__9902));
});
var G__10744__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__9903 = a;
var G__9904 = b;
var G__9905 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__9903,G__9904,G__9905) : self__.dispatch_fn.call(null,G__9903,G__9904,G__9905));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__9906 = a;
var G__9907 = b;
var G__9908 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__9906,G__9907,G__9908) : target_fn.call(null,G__9906,G__9907,G__9908));
});
var G__10744__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__9909 = a;
var G__9910 = b;
var G__9911 = c;
var G__9912 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__9909,G__9910,G__9911,G__9912) : self__.dispatch_fn.call(null,G__9909,G__9910,G__9911,G__9912));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__9913 = a;
var G__9914 = b;
var G__9915 = c;
var G__9916 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__9913,G__9914,G__9915,G__9916) : target_fn.call(null,G__9913,G__9914,G__9915,G__9916));
});
var G__10744__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__9917 = a;
var G__9918 = b;
var G__9919 = c;
var G__9920 = d;
var G__9921 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__9917,G__9918,G__9919,G__9920,G__9921) : self__.dispatch_fn.call(null,G__9917,G__9918,G__9919,G__9920,G__9921));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__9922 = a;
var G__9923 = b;
var G__9924 = c;
var G__9925 = d;
var G__9926 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__9922,G__9923,G__9924,G__9925,G__9926) : target_fn.call(null,G__9922,G__9923,G__9924,G__9925,G__9926));
});
var G__10744__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__9927 = a;
var G__9928 = b;
var G__9929 = c;
var G__9930 = d;
var G__9931 = e;
var G__9932 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__9927,G__9928,G__9929,G__9930,G__9931,G__9932) : self__.dispatch_fn.call(null,G__9927,G__9928,G__9929,G__9930,G__9931,G__9932));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__9933 = a;
var G__9934 = b;
var G__9935 = c;
var G__9936 = d;
var G__9937 = e;
var G__9938 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__9933,G__9934,G__9935,G__9936,G__9937,G__9938) : target_fn.call(null,G__9933,G__9934,G__9935,G__9936,G__9937,G__9938));
});
var G__10744__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__9939 = a;
var G__9940 = b;
var G__9941 = c;
var G__9942 = d;
var G__9943 = e;
var G__9944 = f;
var G__9945 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__9939,G__9940,G__9941,G__9942,G__9943,G__9944,G__9945) : self__.dispatch_fn.call(null,G__9939,G__9940,G__9941,G__9942,G__9943,G__9944,G__9945));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__9946 = a;
var G__9947 = b;
var G__9948 = c;
var G__9949 = d;
var G__9950 = e;
var G__9951 = f;
var G__9952 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__9946,G__9947,G__9948,G__9949,G__9950,G__9951,G__9952) : target_fn.call(null,G__9946,G__9947,G__9948,G__9949,G__9950,G__9951,G__9952));
});
var G__10744__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__9953 = a;
var G__9954 = b;
var G__9955 = c;
var G__9956 = d;
var G__9957 = e;
var G__9958 = f;
var G__9959 = g;
var G__9960 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__9953,G__9954,G__9955,G__9956,G__9957,G__9958,G__9959,G__9960) : self__.dispatch_fn.call(null,G__9953,G__9954,G__9955,G__9956,G__9957,G__9958,G__9959,G__9960));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__9961 = a;
var G__9962 = b;
var G__9963 = c;
var G__9964 = d;
var G__9965 = e;
var G__9966 = f;
var G__9967 = g;
var G__9968 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__9961,G__9962,G__9963,G__9964,G__9965,G__9966,G__9967,G__9968) : target_fn.call(null,G__9961,G__9962,G__9963,G__9964,G__9965,G__9966,G__9967,G__9968));
});
var G__10744__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__9969 = a;
var G__9970 = b;
var G__9971 = c;
var G__9972 = d;
var G__9973 = e;
var G__9974 = f;
var G__9975 = g;
var G__9976 = h;
var G__9977 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__9969,G__9970,G__9971,G__9972,G__9973,G__9974,G__9975,G__9976,G__9977) : self__.dispatch_fn.call(null,G__9969,G__9970,G__9971,G__9972,G__9973,G__9974,G__9975,G__9976,G__9977));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__9978 = a;
var G__9979 = b;
var G__9980 = c;
var G__9981 = d;
var G__9982 = e;
var G__9983 = f;
var G__9984 = g;
var G__9985 = h;
var G__9986 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__9978,G__9979,G__9980,G__9981,G__9982,G__9983,G__9984,G__9985,G__9986) : target_fn.call(null,G__9978,G__9979,G__9980,G__9981,G__9982,G__9983,G__9984,G__9985,G__9986));
});
var G__10744__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__9987 = a;
var G__9988 = b;
var G__9989 = c;
var G__9990 = d;
var G__9991 = e;
var G__9992 = f;
var G__9993 = g;
var G__9994 = h;
var G__9995 = i;
var G__9996 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__9987,G__9988,G__9989,G__9990,G__9991,G__9992,G__9993,G__9994,G__9995,G__9996) : self__.dispatch_fn.call(null,G__9987,G__9988,G__9989,G__9990,G__9991,G__9992,G__9993,G__9994,G__9995,G__9996));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__9997 = a;
var G__9998 = b;
var G__9999 = c;
var G__10000 = d;
var G__10001 = e;
var G__10002 = f;
var G__10003 = g;
var G__10004 = h;
var G__10005 = i;
var G__10006 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__9997,G__9998,G__9999,G__10000,G__10001,G__10002,G__10003,G__10004,G__10005,G__10006) : target_fn.call(null,G__9997,G__9998,G__9999,G__10000,G__10001,G__10002,G__10003,G__10004,G__10005,G__10006));
});
var G__10744__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10007 = a;
var G__10008 = b;
var G__10009 = c;
var G__10010 = d;
var G__10011 = e;
var G__10012 = f;
var G__10013 = g;
var G__10014 = h;
var G__10015 = i;
var G__10016 = j;
var G__10017 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__10007,G__10008,G__10009,G__10010,G__10011,G__10012,G__10013,G__10014,G__10015,G__10016,G__10017) : self__.dispatch_fn.call(null,G__10007,G__10008,G__10009,G__10010,G__10011,G__10012,G__10013,G__10014,G__10015,G__10016,G__10017));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10018 = a;
var G__10019 = b;
var G__10020 = c;
var G__10021 = d;
var G__10022 = e;
var G__10023 = f;
var G__10024 = g;
var G__10025 = h;
var G__10026 = i;
var G__10027 = j;
var G__10028 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__10018,G__10019,G__10020,G__10021,G__10022,G__10023,G__10024,G__10025,G__10026,G__10027,G__10028) : target_fn.call(null,G__10018,G__10019,G__10020,G__10021,G__10022,G__10023,G__10024,G__10025,G__10026,G__10027,G__10028));
});
var G__10744__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10029 = a;
var G__10030 = b;
var G__10031 = c;
var G__10032 = d;
var G__10033 = e;
var G__10034 = f;
var G__10035 = g;
var G__10036 = h;
var G__10037 = i;
var G__10038 = j;
var G__10039 = k;
var G__10040 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__10029,G__10030,G__10031,G__10032,G__10033,G__10034,G__10035,G__10036,G__10037,G__10038,G__10039,G__10040) : self__.dispatch_fn.call(null,G__10029,G__10030,G__10031,G__10032,G__10033,G__10034,G__10035,G__10036,G__10037,G__10038,G__10039,G__10040));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10041 = a;
var G__10042 = b;
var G__10043 = c;
var G__10044 = d;
var G__10045 = e;
var G__10046 = f;
var G__10047 = g;
var G__10048 = h;
var G__10049 = i;
var G__10050 = j;
var G__10051 = k;
var G__10052 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__10041,G__10042,G__10043,G__10044,G__10045,G__10046,G__10047,G__10048,G__10049,G__10050,G__10051,G__10052) : target_fn.call(null,G__10041,G__10042,G__10043,G__10044,G__10045,G__10046,G__10047,G__10048,G__10049,G__10050,G__10051,G__10052));
});
var G__10744__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10053 = a;
var G__10054 = b;
var G__10055 = c;
var G__10056 = d;
var G__10057 = e;
var G__10058 = f;
var G__10059 = g;
var G__10060 = h;
var G__10061 = i;
var G__10062 = j;
var G__10063 = k;
var G__10064 = l;
var G__10065 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__10053,G__10054,G__10055,G__10056,G__10057,G__10058,G__10059,G__10060,G__10061,G__10062,G__10063,G__10064,G__10065) : self__.dispatch_fn.call(null,G__10053,G__10054,G__10055,G__10056,G__10057,G__10058,G__10059,G__10060,G__10061,G__10062,G__10063,G__10064,G__10065));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10066 = a;
var G__10067 = b;
var G__10068 = c;
var G__10069 = d;
var G__10070 = e;
var G__10071 = f;
var G__10072 = g;
var G__10073 = h;
var G__10074 = i;
var G__10075 = j;
var G__10076 = k;
var G__10077 = l;
var G__10078 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__10066,G__10067,G__10068,G__10069,G__10070,G__10071,G__10072,G__10073,G__10074,G__10075,G__10076,G__10077,G__10078) : target_fn.call(null,G__10066,G__10067,G__10068,G__10069,G__10070,G__10071,G__10072,G__10073,G__10074,G__10075,G__10076,G__10077,G__10078));
});
var G__10744__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10079 = a;
var G__10080 = b;
var G__10081 = c;
var G__10082 = d;
var G__10083 = e;
var G__10084 = f;
var G__10085 = g;
var G__10086 = h;
var G__10087 = i;
var G__10088 = j;
var G__10089 = k;
var G__10090 = l;
var G__10091 = m;
var G__10092 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__10079,G__10080,G__10081,G__10082,G__10083,G__10084,G__10085,G__10086,G__10087,G__10088,G__10089,G__10090,G__10091,G__10092) : self__.dispatch_fn.call(null,G__10079,G__10080,G__10081,G__10082,G__10083,G__10084,G__10085,G__10086,G__10087,G__10088,G__10089,G__10090,G__10091,G__10092));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10093 = a;
var G__10094 = b;
var G__10095 = c;
var G__10096 = d;
var G__10097 = e;
var G__10098 = f;
var G__10099 = g;
var G__10100 = h;
var G__10101 = i;
var G__10102 = j;
var G__10103 = k;
var G__10104 = l;
var G__10105 = m;
var G__10106 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__10093,G__10094,G__10095,G__10096,G__10097,G__10098,G__10099,G__10100,G__10101,G__10102,G__10103,G__10104,G__10105,G__10106) : target_fn.call(null,G__10093,G__10094,G__10095,G__10096,G__10097,G__10098,G__10099,G__10100,G__10101,G__10102,G__10103,G__10104,G__10105,G__10106));
});
var G__10744__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10107 = a;
var G__10108 = b;
var G__10109 = c;
var G__10110 = d;
var G__10111 = e;
var G__10112 = f;
var G__10113 = g;
var G__10114 = h;
var G__10115 = i;
var G__10116 = j;
var G__10117 = k;
var G__10118 = l;
var G__10119 = m;
var G__10120 = n;
var G__10121 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__10107,G__10108,G__10109,G__10110,G__10111,G__10112,G__10113,G__10114,G__10115,G__10116,G__10117,G__10118,G__10119,G__10120,G__10121) : self__.dispatch_fn.call(null,G__10107,G__10108,G__10109,G__10110,G__10111,G__10112,G__10113,G__10114,G__10115,G__10116,G__10117,G__10118,G__10119,G__10120,G__10121));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10122 = a;
var G__10123 = b;
var G__10124 = c;
var G__10125 = d;
var G__10126 = e;
var G__10127 = f;
var G__10128 = g;
var G__10129 = h;
var G__10130 = i;
var G__10131 = j;
var G__10132 = k;
var G__10133 = l;
var G__10134 = m;
var G__10135 = n;
var G__10136 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__10122,G__10123,G__10124,G__10125,G__10126,G__10127,G__10128,G__10129,G__10130,G__10131,G__10132,G__10133,G__10134,G__10135,G__10136) : target_fn.call(null,G__10122,G__10123,G__10124,G__10125,G__10126,G__10127,G__10128,G__10129,G__10130,G__10131,G__10132,G__10133,G__10134,G__10135,G__10136));
});
var G__10744__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10137 = a;
var G__10138 = b;
var G__10139 = c;
var G__10140 = d;
var G__10141 = e;
var G__10142 = f;
var G__10143 = g;
var G__10144 = h;
var G__10145 = i;
var G__10146 = j;
var G__10147 = k;
var G__10148 = l;
var G__10149 = m;
var G__10150 = n;
var G__10151 = o;
var G__10152 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__10137,G__10138,G__10139,G__10140,G__10141,G__10142,G__10143,G__10144,G__10145,G__10146,G__10147,G__10148,G__10149,G__10150,G__10151,G__10152) : self__.dispatch_fn.call(null,G__10137,G__10138,G__10139,G__10140,G__10141,G__10142,G__10143,G__10144,G__10145,G__10146,G__10147,G__10148,G__10149,G__10150,G__10151,G__10152));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10153 = a;
var G__10154 = b;
var G__10155 = c;
var G__10156 = d;
var G__10157 = e;
var G__10158 = f;
var G__10159 = g;
var G__10160 = h;
var G__10161 = i;
var G__10162 = j;
var G__10163 = k;
var G__10164 = l;
var G__10165 = m;
var G__10166 = n;
var G__10167 = o;
var G__10168 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__10153,G__10154,G__10155,G__10156,G__10157,G__10158,G__10159,G__10160,G__10161,G__10162,G__10163,G__10164,G__10165,G__10166,G__10167,G__10168) : target_fn.call(null,G__10153,G__10154,G__10155,G__10156,G__10157,G__10158,G__10159,G__10160,G__10161,G__10162,G__10163,G__10164,G__10165,G__10166,G__10167,G__10168));
});
var G__10744__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10169 = a;
var G__10170 = b;
var G__10171 = c;
var G__10172 = d;
var G__10173 = e;
var G__10174 = f;
var G__10175 = g;
var G__10176 = h;
var G__10177 = i;
var G__10178 = j;
var G__10179 = k;
var G__10180 = l;
var G__10181 = m;
var G__10182 = n;
var G__10183 = o;
var G__10184 = p;
var G__10185 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__10169,G__10170,G__10171,G__10172,G__10173,G__10174,G__10175,G__10176,G__10177,G__10178,G__10179,G__10180,G__10181,G__10182,G__10183,G__10184,G__10185) : self__.dispatch_fn.call(null,G__10169,G__10170,G__10171,G__10172,G__10173,G__10174,G__10175,G__10176,G__10177,G__10178,G__10179,G__10180,G__10181,G__10182,G__10183,G__10184,G__10185));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10186 = a;
var G__10187 = b;
var G__10188 = c;
var G__10189 = d;
var G__10190 = e;
var G__10191 = f;
var G__10192 = g;
var G__10193 = h;
var G__10194 = i;
var G__10195 = j;
var G__10196 = k;
var G__10197 = l;
var G__10198 = m;
var G__10199 = n;
var G__10200 = o;
var G__10201 = p;
var G__10202 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__10186,G__10187,G__10188,G__10189,G__10190,G__10191,G__10192,G__10193,G__10194,G__10195,G__10196,G__10197,G__10198,G__10199,G__10200,G__10201,G__10202) : target_fn.call(null,G__10186,G__10187,G__10188,G__10189,G__10190,G__10191,G__10192,G__10193,G__10194,G__10195,G__10196,G__10197,G__10198,G__10199,G__10200,G__10201,G__10202));
});
var G__10744__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10203 = a;
var G__10204 = b;
var G__10205 = c;
var G__10206 = d;
var G__10207 = e;
var G__10208 = f;
var G__10209 = g;
var G__10210 = h;
var G__10211 = i;
var G__10212 = j;
var G__10213 = k;
var G__10214 = l;
var G__10215 = m;
var G__10216 = n;
var G__10217 = o;
var G__10218 = p;
var G__10219 = q;
var G__10220 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__10203,G__10204,G__10205,G__10206,G__10207,G__10208,G__10209,G__10210,G__10211,G__10212,G__10213,G__10214,G__10215,G__10216,G__10217,G__10218,G__10219,G__10220) : self__.dispatch_fn.call(null,G__10203,G__10204,G__10205,G__10206,G__10207,G__10208,G__10209,G__10210,G__10211,G__10212,G__10213,G__10214,G__10215,G__10216,G__10217,G__10218,G__10219,G__10220));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10221 = a;
var G__10222 = b;
var G__10223 = c;
var G__10224 = d;
var G__10225 = e;
var G__10226 = f;
var G__10227 = g;
var G__10228 = h;
var G__10229 = i;
var G__10230 = j;
var G__10231 = k;
var G__10232 = l;
var G__10233 = m;
var G__10234 = n;
var G__10235 = o;
var G__10236 = p;
var G__10237 = q;
var G__10238 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__10221,G__10222,G__10223,G__10224,G__10225,G__10226,G__10227,G__10228,G__10229,G__10230,G__10231,G__10232,G__10233,G__10234,G__10235,G__10236,G__10237,G__10238) : target_fn.call(null,G__10221,G__10222,G__10223,G__10224,G__10225,G__10226,G__10227,G__10228,G__10229,G__10230,G__10231,G__10232,G__10233,G__10234,G__10235,G__10236,G__10237,G__10238));
});
var G__10744__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10239 = a;
var G__10240 = b;
var G__10241 = c;
var G__10242 = d;
var G__10243 = e;
var G__10244 = f;
var G__10245 = g;
var G__10246 = h;
var G__10247 = i;
var G__10248 = j;
var G__10249 = k;
var G__10250 = l;
var G__10251 = m;
var G__10252 = n;
var G__10253 = o;
var G__10254 = p;
var G__10255 = q;
var G__10256 = r;
var G__10257 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__10239,G__10240,G__10241,G__10242,G__10243,G__10244,G__10245,G__10246,G__10247,G__10248,G__10249,G__10250,G__10251,G__10252,G__10253,G__10254,G__10255,G__10256,G__10257) : self__.dispatch_fn.call(null,G__10239,G__10240,G__10241,G__10242,G__10243,G__10244,G__10245,G__10246,G__10247,G__10248,G__10249,G__10250,G__10251,G__10252,G__10253,G__10254,G__10255,G__10256,G__10257));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10258 = a;
var G__10259 = b;
var G__10260 = c;
var G__10261 = d;
var G__10262 = e;
var G__10263 = f;
var G__10264 = g;
var G__10265 = h;
var G__10266 = i;
var G__10267 = j;
var G__10268 = k;
var G__10269 = l;
var G__10270 = m;
var G__10271 = n;
var G__10272 = o;
var G__10273 = p;
var G__10274 = q;
var G__10275 = r;
var G__10276 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__10258,G__10259,G__10260,G__10261,G__10262,G__10263,G__10264,G__10265,G__10266,G__10267,G__10268,G__10269,G__10270,G__10271,G__10272,G__10273,G__10274,G__10275,G__10276) : target_fn.call(null,G__10258,G__10259,G__10260,G__10261,G__10262,G__10263,G__10264,G__10265,G__10266,G__10267,G__10268,G__10269,G__10270,G__10271,G__10272,G__10273,G__10274,G__10275,G__10276));
});
var G__10744__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10277 = a;
var G__10278 = b;
var G__10279 = c;
var G__10280 = d;
var G__10281 = e;
var G__10282 = f;
var G__10283 = g;
var G__10284 = h;
var G__10285 = i;
var G__10286 = j;
var G__10287 = k;
var G__10288 = l;
var G__10289 = m;
var G__10290 = n;
var G__10291 = o;
var G__10292 = p;
var G__10293 = q;
var G__10294 = r;
var G__10295 = s;
var G__10296 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__10277,G__10278,G__10279,G__10280,G__10281,G__10282,G__10283,G__10284,G__10285,G__10286,G__10287,G__10288,G__10289,G__10290,G__10291,G__10292,G__10293,G__10294,G__10295,G__10296) : self__.dispatch_fn.call(null,G__10277,G__10278,G__10279,G__10280,G__10281,G__10282,G__10283,G__10284,G__10285,G__10286,G__10287,G__10288,G__10289,G__10290,G__10291,G__10292,G__10293,G__10294,G__10295,G__10296));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10297 = a;
var G__10298 = b;
var G__10299 = c;
var G__10300 = d;
var G__10301 = e;
var G__10302 = f;
var G__10303 = g;
var G__10304 = h;
var G__10305 = i;
var G__10306 = j;
var G__10307 = k;
var G__10308 = l;
var G__10309 = m;
var G__10310 = n;
var G__10311 = o;
var G__10312 = p;
var G__10313 = q;
var G__10314 = r;
var G__10315 = s;
var G__10316 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__10297,G__10298,G__10299,G__10300,G__10301,G__10302,G__10303,G__10304,G__10305,G__10306,G__10307,G__10308,G__10309,G__10310,G__10311,G__10312,G__10313,G__10314,G__10315,G__10316) : target_fn.call(null,G__10297,G__10298,G__10299,G__10300,G__10301,G__10302,G__10303,G__10304,G__10305,G__10306,G__10307,G__10308,G__10309,G__10310,G__10311,G__10312,G__10313,G__10314,G__10315,G__10316));
});
var G__10744__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__10744 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__10744__1.call(this,self__);
case 2:
return G__10744__2.call(this,self__,a);
case 3:
return G__10744__3.call(this,self__,a,b);
case 4:
return G__10744__4.call(this,self__,a,b,c);
case 5:
return G__10744__5.call(this,self__,a,b,c,d);
case 6:
return G__10744__6.call(this,self__,a,b,c,d,e);
case 7:
return G__10744__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__10744__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__10744__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__10744__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__10744__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__10744__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__10744__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__10744__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__10744__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__10744__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__10744__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__10744__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__10744__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__10744__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__10744__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__10744__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10744.cljs$core$IFn$_invoke$arity$1 = G__10744__1;
G__10744.cljs$core$IFn$_invoke$arity$2 = G__10744__2;
G__10744.cljs$core$IFn$_invoke$arity$3 = G__10744__3;
G__10744.cljs$core$IFn$_invoke$arity$4 = G__10744__4;
G__10744.cljs$core$IFn$_invoke$arity$5 = G__10744__5;
G__10744.cljs$core$IFn$_invoke$arity$6 = G__10744__6;
G__10744.cljs$core$IFn$_invoke$arity$7 = G__10744__7;
G__10744.cljs$core$IFn$_invoke$arity$8 = G__10744__8;
G__10744.cljs$core$IFn$_invoke$arity$9 = G__10744__9;
G__10744.cljs$core$IFn$_invoke$arity$10 = G__10744__10;
G__10744.cljs$core$IFn$_invoke$arity$11 = G__10744__11;
G__10744.cljs$core$IFn$_invoke$arity$12 = G__10744__12;
G__10744.cljs$core$IFn$_invoke$arity$13 = G__10744__13;
G__10744.cljs$core$IFn$_invoke$arity$14 = G__10744__14;
G__10744.cljs$core$IFn$_invoke$arity$15 = G__10744__15;
G__10744.cljs$core$IFn$_invoke$arity$16 = G__10744__16;
G__10744.cljs$core$IFn$_invoke$arity$17 = G__10744__17;
G__10744.cljs$core$IFn$_invoke$arity$18 = G__10744__18;
G__10744.cljs$core$IFn$_invoke$arity$19 = G__10744__19;
G__10744.cljs$core$IFn$_invoke$arity$20 = G__10744__20;
G__10744.cljs$core$IFn$_invoke$arity$21 = G__10744__21;
G__10744.cljs$core$IFn$_invoke$arity$22 = G__10744__22;
return G__10744;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args9896){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9896)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10317 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__10317) : self__.dispatch_fn.call(null,G__10317));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10318 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__10318) : target_fn.call(null,G__10318));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10319 = a;
var G__10320 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__10319,G__10320) : self__.dispatch_fn.call(null,G__10319,G__10320));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10321 = a;
var G__10322 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__10321,G__10322) : target_fn.call(null,G__10321,G__10322));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10323 = a;
var G__10324 = b;
var G__10325 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__10323,G__10324,G__10325) : self__.dispatch_fn.call(null,G__10323,G__10324,G__10325));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10326 = a;
var G__10327 = b;
var G__10328 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__10326,G__10327,G__10328) : target_fn.call(null,G__10326,G__10327,G__10328));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10329 = a;
var G__10330 = b;
var G__10331 = c;
var G__10332 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__10329,G__10330,G__10331,G__10332) : self__.dispatch_fn.call(null,G__10329,G__10330,G__10331,G__10332));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10333 = a;
var G__10334 = b;
var G__10335 = c;
var G__10336 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__10333,G__10334,G__10335,G__10336) : target_fn.call(null,G__10333,G__10334,G__10335,G__10336));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10337 = a;
var G__10338 = b;
var G__10339 = c;
var G__10340 = d;
var G__10341 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__10337,G__10338,G__10339,G__10340,G__10341) : self__.dispatch_fn.call(null,G__10337,G__10338,G__10339,G__10340,G__10341));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10342 = a;
var G__10343 = b;
var G__10344 = c;
var G__10345 = d;
var G__10346 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__10342,G__10343,G__10344,G__10345,G__10346) : target_fn.call(null,G__10342,G__10343,G__10344,G__10345,G__10346));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10347 = a;
var G__10348 = b;
var G__10349 = c;
var G__10350 = d;
var G__10351 = e;
var G__10352 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__10347,G__10348,G__10349,G__10350,G__10351,G__10352) : self__.dispatch_fn.call(null,G__10347,G__10348,G__10349,G__10350,G__10351,G__10352));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10353 = a;
var G__10354 = b;
var G__10355 = c;
var G__10356 = d;
var G__10357 = e;
var G__10358 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__10353,G__10354,G__10355,G__10356,G__10357,G__10358) : target_fn.call(null,G__10353,G__10354,G__10355,G__10356,G__10357,G__10358));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10359 = a;
var G__10360 = b;
var G__10361 = c;
var G__10362 = d;
var G__10363 = e;
var G__10364 = f;
var G__10365 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__10359,G__10360,G__10361,G__10362,G__10363,G__10364,G__10365) : self__.dispatch_fn.call(null,G__10359,G__10360,G__10361,G__10362,G__10363,G__10364,G__10365));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10366 = a;
var G__10367 = b;
var G__10368 = c;
var G__10369 = d;
var G__10370 = e;
var G__10371 = f;
var G__10372 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__10366,G__10367,G__10368,G__10369,G__10370,G__10371,G__10372) : target_fn.call(null,G__10366,G__10367,G__10368,G__10369,G__10370,G__10371,G__10372));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10373 = a;
var G__10374 = b;
var G__10375 = c;
var G__10376 = d;
var G__10377 = e;
var G__10378 = f;
var G__10379 = g;
var G__10380 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__10373,G__10374,G__10375,G__10376,G__10377,G__10378,G__10379,G__10380) : self__.dispatch_fn.call(null,G__10373,G__10374,G__10375,G__10376,G__10377,G__10378,G__10379,G__10380));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10381 = a;
var G__10382 = b;
var G__10383 = c;
var G__10384 = d;
var G__10385 = e;
var G__10386 = f;
var G__10387 = g;
var G__10388 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__10381,G__10382,G__10383,G__10384,G__10385,G__10386,G__10387,G__10388) : target_fn.call(null,G__10381,G__10382,G__10383,G__10384,G__10385,G__10386,G__10387,G__10388));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10389 = a;
var G__10390 = b;
var G__10391 = c;
var G__10392 = d;
var G__10393 = e;
var G__10394 = f;
var G__10395 = g;
var G__10396 = h;
var G__10397 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__10389,G__10390,G__10391,G__10392,G__10393,G__10394,G__10395,G__10396,G__10397) : self__.dispatch_fn.call(null,G__10389,G__10390,G__10391,G__10392,G__10393,G__10394,G__10395,G__10396,G__10397));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10398 = a;
var G__10399 = b;
var G__10400 = c;
var G__10401 = d;
var G__10402 = e;
var G__10403 = f;
var G__10404 = g;
var G__10405 = h;
var G__10406 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__10398,G__10399,G__10400,G__10401,G__10402,G__10403,G__10404,G__10405,G__10406) : target_fn.call(null,G__10398,G__10399,G__10400,G__10401,G__10402,G__10403,G__10404,G__10405,G__10406));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10407 = a;
var G__10408 = b;
var G__10409 = c;
var G__10410 = d;
var G__10411 = e;
var G__10412 = f;
var G__10413 = g;
var G__10414 = h;
var G__10415 = i;
var G__10416 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__10407,G__10408,G__10409,G__10410,G__10411,G__10412,G__10413,G__10414,G__10415,G__10416) : self__.dispatch_fn.call(null,G__10407,G__10408,G__10409,G__10410,G__10411,G__10412,G__10413,G__10414,G__10415,G__10416));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10417 = a;
var G__10418 = b;
var G__10419 = c;
var G__10420 = d;
var G__10421 = e;
var G__10422 = f;
var G__10423 = g;
var G__10424 = h;
var G__10425 = i;
var G__10426 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__10417,G__10418,G__10419,G__10420,G__10421,G__10422,G__10423,G__10424,G__10425,G__10426) : target_fn.call(null,G__10417,G__10418,G__10419,G__10420,G__10421,G__10422,G__10423,G__10424,G__10425,G__10426));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10427 = a;
var G__10428 = b;
var G__10429 = c;
var G__10430 = d;
var G__10431 = e;
var G__10432 = f;
var G__10433 = g;
var G__10434 = h;
var G__10435 = i;
var G__10436 = j;
var G__10437 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__10427,G__10428,G__10429,G__10430,G__10431,G__10432,G__10433,G__10434,G__10435,G__10436,G__10437) : self__.dispatch_fn.call(null,G__10427,G__10428,G__10429,G__10430,G__10431,G__10432,G__10433,G__10434,G__10435,G__10436,G__10437));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10438 = a;
var G__10439 = b;
var G__10440 = c;
var G__10441 = d;
var G__10442 = e;
var G__10443 = f;
var G__10444 = g;
var G__10445 = h;
var G__10446 = i;
var G__10447 = j;
var G__10448 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__10438,G__10439,G__10440,G__10441,G__10442,G__10443,G__10444,G__10445,G__10446,G__10447,G__10448) : target_fn.call(null,G__10438,G__10439,G__10440,G__10441,G__10442,G__10443,G__10444,G__10445,G__10446,G__10447,G__10448));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10449 = a;
var G__10450 = b;
var G__10451 = c;
var G__10452 = d;
var G__10453 = e;
var G__10454 = f;
var G__10455 = g;
var G__10456 = h;
var G__10457 = i;
var G__10458 = j;
var G__10459 = k;
var G__10460 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__10449,G__10450,G__10451,G__10452,G__10453,G__10454,G__10455,G__10456,G__10457,G__10458,G__10459,G__10460) : self__.dispatch_fn.call(null,G__10449,G__10450,G__10451,G__10452,G__10453,G__10454,G__10455,G__10456,G__10457,G__10458,G__10459,G__10460));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10461 = a;
var G__10462 = b;
var G__10463 = c;
var G__10464 = d;
var G__10465 = e;
var G__10466 = f;
var G__10467 = g;
var G__10468 = h;
var G__10469 = i;
var G__10470 = j;
var G__10471 = k;
var G__10472 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__10461,G__10462,G__10463,G__10464,G__10465,G__10466,G__10467,G__10468,G__10469,G__10470,G__10471,G__10472) : target_fn.call(null,G__10461,G__10462,G__10463,G__10464,G__10465,G__10466,G__10467,G__10468,G__10469,G__10470,G__10471,G__10472));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10473 = a;
var G__10474 = b;
var G__10475 = c;
var G__10476 = d;
var G__10477 = e;
var G__10478 = f;
var G__10479 = g;
var G__10480 = h;
var G__10481 = i;
var G__10482 = j;
var G__10483 = k;
var G__10484 = l;
var G__10485 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__10473,G__10474,G__10475,G__10476,G__10477,G__10478,G__10479,G__10480,G__10481,G__10482,G__10483,G__10484,G__10485) : self__.dispatch_fn.call(null,G__10473,G__10474,G__10475,G__10476,G__10477,G__10478,G__10479,G__10480,G__10481,G__10482,G__10483,G__10484,G__10485));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10486 = a;
var G__10487 = b;
var G__10488 = c;
var G__10489 = d;
var G__10490 = e;
var G__10491 = f;
var G__10492 = g;
var G__10493 = h;
var G__10494 = i;
var G__10495 = j;
var G__10496 = k;
var G__10497 = l;
var G__10498 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__10486,G__10487,G__10488,G__10489,G__10490,G__10491,G__10492,G__10493,G__10494,G__10495,G__10496,G__10497,G__10498) : target_fn.call(null,G__10486,G__10487,G__10488,G__10489,G__10490,G__10491,G__10492,G__10493,G__10494,G__10495,G__10496,G__10497,G__10498));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10499 = a;
var G__10500 = b;
var G__10501 = c;
var G__10502 = d;
var G__10503 = e;
var G__10504 = f;
var G__10505 = g;
var G__10506 = h;
var G__10507 = i;
var G__10508 = j;
var G__10509 = k;
var G__10510 = l;
var G__10511 = m;
var G__10512 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__10499,G__10500,G__10501,G__10502,G__10503,G__10504,G__10505,G__10506,G__10507,G__10508,G__10509,G__10510,G__10511,G__10512) : self__.dispatch_fn.call(null,G__10499,G__10500,G__10501,G__10502,G__10503,G__10504,G__10505,G__10506,G__10507,G__10508,G__10509,G__10510,G__10511,G__10512));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10513 = a;
var G__10514 = b;
var G__10515 = c;
var G__10516 = d;
var G__10517 = e;
var G__10518 = f;
var G__10519 = g;
var G__10520 = h;
var G__10521 = i;
var G__10522 = j;
var G__10523 = k;
var G__10524 = l;
var G__10525 = m;
var G__10526 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__10513,G__10514,G__10515,G__10516,G__10517,G__10518,G__10519,G__10520,G__10521,G__10522,G__10523,G__10524,G__10525,G__10526) : target_fn.call(null,G__10513,G__10514,G__10515,G__10516,G__10517,G__10518,G__10519,G__10520,G__10521,G__10522,G__10523,G__10524,G__10525,G__10526));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10527 = a;
var G__10528 = b;
var G__10529 = c;
var G__10530 = d;
var G__10531 = e;
var G__10532 = f;
var G__10533 = g;
var G__10534 = h;
var G__10535 = i;
var G__10536 = j;
var G__10537 = k;
var G__10538 = l;
var G__10539 = m;
var G__10540 = n;
var G__10541 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__10527,G__10528,G__10529,G__10530,G__10531,G__10532,G__10533,G__10534,G__10535,G__10536,G__10537,G__10538,G__10539,G__10540,G__10541) : self__.dispatch_fn.call(null,G__10527,G__10528,G__10529,G__10530,G__10531,G__10532,G__10533,G__10534,G__10535,G__10536,G__10537,G__10538,G__10539,G__10540,G__10541));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10542 = a;
var G__10543 = b;
var G__10544 = c;
var G__10545 = d;
var G__10546 = e;
var G__10547 = f;
var G__10548 = g;
var G__10549 = h;
var G__10550 = i;
var G__10551 = j;
var G__10552 = k;
var G__10553 = l;
var G__10554 = m;
var G__10555 = n;
var G__10556 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__10542,G__10543,G__10544,G__10545,G__10546,G__10547,G__10548,G__10549,G__10550,G__10551,G__10552,G__10553,G__10554,G__10555,G__10556) : target_fn.call(null,G__10542,G__10543,G__10544,G__10545,G__10546,G__10547,G__10548,G__10549,G__10550,G__10551,G__10552,G__10553,G__10554,G__10555,G__10556));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10557 = a;
var G__10558 = b;
var G__10559 = c;
var G__10560 = d;
var G__10561 = e;
var G__10562 = f;
var G__10563 = g;
var G__10564 = h;
var G__10565 = i;
var G__10566 = j;
var G__10567 = k;
var G__10568 = l;
var G__10569 = m;
var G__10570 = n;
var G__10571 = o;
var G__10572 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__10557,G__10558,G__10559,G__10560,G__10561,G__10562,G__10563,G__10564,G__10565,G__10566,G__10567,G__10568,G__10569,G__10570,G__10571,G__10572) : self__.dispatch_fn.call(null,G__10557,G__10558,G__10559,G__10560,G__10561,G__10562,G__10563,G__10564,G__10565,G__10566,G__10567,G__10568,G__10569,G__10570,G__10571,G__10572));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10573 = a;
var G__10574 = b;
var G__10575 = c;
var G__10576 = d;
var G__10577 = e;
var G__10578 = f;
var G__10579 = g;
var G__10580 = h;
var G__10581 = i;
var G__10582 = j;
var G__10583 = k;
var G__10584 = l;
var G__10585 = m;
var G__10586 = n;
var G__10587 = o;
var G__10588 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__10573,G__10574,G__10575,G__10576,G__10577,G__10578,G__10579,G__10580,G__10581,G__10582,G__10583,G__10584,G__10585,G__10586,G__10587,G__10588) : target_fn.call(null,G__10573,G__10574,G__10575,G__10576,G__10577,G__10578,G__10579,G__10580,G__10581,G__10582,G__10583,G__10584,G__10585,G__10586,G__10587,G__10588));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10589 = a;
var G__10590 = b;
var G__10591 = c;
var G__10592 = d;
var G__10593 = e;
var G__10594 = f;
var G__10595 = g;
var G__10596 = h;
var G__10597 = i;
var G__10598 = j;
var G__10599 = k;
var G__10600 = l;
var G__10601 = m;
var G__10602 = n;
var G__10603 = o;
var G__10604 = p;
var G__10605 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__10589,G__10590,G__10591,G__10592,G__10593,G__10594,G__10595,G__10596,G__10597,G__10598,G__10599,G__10600,G__10601,G__10602,G__10603,G__10604,G__10605) : self__.dispatch_fn.call(null,G__10589,G__10590,G__10591,G__10592,G__10593,G__10594,G__10595,G__10596,G__10597,G__10598,G__10599,G__10600,G__10601,G__10602,G__10603,G__10604,G__10605));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10606 = a;
var G__10607 = b;
var G__10608 = c;
var G__10609 = d;
var G__10610 = e;
var G__10611 = f;
var G__10612 = g;
var G__10613 = h;
var G__10614 = i;
var G__10615 = j;
var G__10616 = k;
var G__10617 = l;
var G__10618 = m;
var G__10619 = n;
var G__10620 = o;
var G__10621 = p;
var G__10622 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__10606,G__10607,G__10608,G__10609,G__10610,G__10611,G__10612,G__10613,G__10614,G__10615,G__10616,G__10617,G__10618,G__10619,G__10620,G__10621,G__10622) : target_fn.call(null,G__10606,G__10607,G__10608,G__10609,G__10610,G__10611,G__10612,G__10613,G__10614,G__10615,G__10616,G__10617,G__10618,G__10619,G__10620,G__10621,G__10622));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10623 = a;
var G__10624 = b;
var G__10625 = c;
var G__10626 = d;
var G__10627 = e;
var G__10628 = f;
var G__10629 = g;
var G__10630 = h;
var G__10631 = i;
var G__10632 = j;
var G__10633 = k;
var G__10634 = l;
var G__10635 = m;
var G__10636 = n;
var G__10637 = o;
var G__10638 = p;
var G__10639 = q;
var G__10640 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__10623,G__10624,G__10625,G__10626,G__10627,G__10628,G__10629,G__10630,G__10631,G__10632,G__10633,G__10634,G__10635,G__10636,G__10637,G__10638,G__10639,G__10640) : self__.dispatch_fn.call(null,G__10623,G__10624,G__10625,G__10626,G__10627,G__10628,G__10629,G__10630,G__10631,G__10632,G__10633,G__10634,G__10635,G__10636,G__10637,G__10638,G__10639,G__10640));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10641 = a;
var G__10642 = b;
var G__10643 = c;
var G__10644 = d;
var G__10645 = e;
var G__10646 = f;
var G__10647 = g;
var G__10648 = h;
var G__10649 = i;
var G__10650 = j;
var G__10651 = k;
var G__10652 = l;
var G__10653 = m;
var G__10654 = n;
var G__10655 = o;
var G__10656 = p;
var G__10657 = q;
var G__10658 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__10641,G__10642,G__10643,G__10644,G__10645,G__10646,G__10647,G__10648,G__10649,G__10650,G__10651,G__10652,G__10653,G__10654,G__10655,G__10656,G__10657,G__10658) : target_fn.call(null,G__10641,G__10642,G__10643,G__10644,G__10645,G__10646,G__10647,G__10648,G__10649,G__10650,G__10651,G__10652,G__10653,G__10654,G__10655,G__10656,G__10657,G__10658));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10659 = a;
var G__10660 = b;
var G__10661 = c;
var G__10662 = d;
var G__10663 = e;
var G__10664 = f;
var G__10665 = g;
var G__10666 = h;
var G__10667 = i;
var G__10668 = j;
var G__10669 = k;
var G__10670 = l;
var G__10671 = m;
var G__10672 = n;
var G__10673 = o;
var G__10674 = p;
var G__10675 = q;
var G__10676 = r;
var G__10677 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__10659,G__10660,G__10661,G__10662,G__10663,G__10664,G__10665,G__10666,G__10667,G__10668,G__10669,G__10670,G__10671,G__10672,G__10673,G__10674,G__10675,G__10676,G__10677) : self__.dispatch_fn.call(null,G__10659,G__10660,G__10661,G__10662,G__10663,G__10664,G__10665,G__10666,G__10667,G__10668,G__10669,G__10670,G__10671,G__10672,G__10673,G__10674,G__10675,G__10676,G__10677));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10678 = a;
var G__10679 = b;
var G__10680 = c;
var G__10681 = d;
var G__10682 = e;
var G__10683 = f;
var G__10684 = g;
var G__10685 = h;
var G__10686 = i;
var G__10687 = j;
var G__10688 = k;
var G__10689 = l;
var G__10690 = m;
var G__10691 = n;
var G__10692 = o;
var G__10693 = p;
var G__10694 = q;
var G__10695 = r;
var G__10696 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__10678,G__10679,G__10680,G__10681,G__10682,G__10683,G__10684,G__10685,G__10686,G__10687,G__10688,G__10689,G__10690,G__10691,G__10692,G__10693,G__10694,G__10695,G__10696) : target_fn.call(null,G__10678,G__10679,G__10680,G__10681,G__10682,G__10683,G__10684,G__10685,G__10686,G__10687,G__10688,G__10689,G__10690,G__10691,G__10692,G__10693,G__10694,G__10695,G__10696));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10697 = a;
var G__10698 = b;
var G__10699 = c;
var G__10700 = d;
var G__10701 = e;
var G__10702 = f;
var G__10703 = g;
var G__10704 = h;
var G__10705 = i;
var G__10706 = j;
var G__10707 = k;
var G__10708 = l;
var G__10709 = m;
var G__10710 = n;
var G__10711 = o;
var G__10712 = p;
var G__10713 = q;
var G__10714 = r;
var G__10715 = s;
var G__10716 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__10697,G__10698,G__10699,G__10700,G__10701,G__10702,G__10703,G__10704,G__10705,G__10706,G__10707,G__10708,G__10709,G__10710,G__10711,G__10712,G__10713,G__10714,G__10715,G__10716) : self__.dispatch_fn.call(null,G__10697,G__10698,G__10699,G__10700,G__10701,G__10702,G__10703,G__10704,G__10705,G__10706,G__10707,G__10708,G__10709,G__10710,G__10711,G__10712,G__10713,G__10714,G__10715,G__10716));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10717 = a;
var G__10718 = b;
var G__10719 = c;
var G__10720 = d;
var G__10721 = e;
var G__10722 = f;
var G__10723 = g;
var G__10724 = h;
var G__10725 = i;
var G__10726 = j;
var G__10727 = k;
var G__10728 = l;
var G__10729 = m;
var G__10730 = n;
var G__10731 = o;
var G__10732 = p;
var G__10733 = q;
var G__10734 = r;
var G__10735 = s;
var G__10736 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__10717,G__10718,G__10719,G__10720,G__10721,G__10722,G__10723,G__10724,G__10725,G__10726,G__10727,G__10728,G__10729,G__10730,G__10731,G__10732,G__10733,G__10734,G__10735,G__10736) : target_fn.call(null,G__10717,G__10718,G__10719,G__10720,G__10721,G__10722,G__10723,G__10724,G__10725,G__10726,G__10727,G__10728,G__10729,G__10730,G__10731,G__10732,G__10733,G__10734,G__10735,G__10736));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__10737 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10737) : cljs.core.deref.call(null,G__10737));
})(),(function (){var G__10738 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10738) : cljs.core.deref.call(null,G__10738));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4423__auto__ = (function (){var G__10739 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10739) : cljs.core.deref.call(null,G__10739));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4423__auto__)){
var target_fn = temp__4423__auto__;
return target_fn;
} else {
var temp__4423__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4423__auto____$1)){
var target_fn = temp__4423__auto____$1;
return target_fn;
} else {
return (function (){var G__10740 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10740) : cljs.core.deref.call(null,G__10740));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__10741 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10741) : cljs.core.deref.call(null,G__10741));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__10742 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10742) : cljs.core.deref.call(null,G__10742));
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__10743 = this$__$1;
return goog.getUid(G__10743);
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__10745 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__10745);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__10750 = msg;
return Error(G__10750);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__10755 = x;
var G__10756 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__10755,G__10756) : pred.call(null,G__10755,G__10756));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__10757 = y;
var G__10758 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__10757,G__10758) : pred.call(null,G__10757,G__10758));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map