// Compiled by ClojureScript 0.0-2843 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string');
goog.require('goog.object');
goog.require('goog.array');
goog.require('goog.string.StringBuffer');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2843";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__4751__delegate = function (args){
return console.log.apply(console,(function (){var G__4750 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__4750) : cljs.core.into_array.call(null,G__4750));
})());
};
var G__4751 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__4752__i = 0, G__4752__a = new Array(arguments.length -  0);
while (G__4752__i < G__4752__a.length) {G__4752__a[G__4752__i] = arguments[G__4752__i + 0]; ++G__4752__i;}
  args = new cljs.core.IndexedSeq(G__4752__a,0);
} 
return G__4751__delegate.call(this,args);};
G__4751.cljs$lang$maxFixedArity = 0;
G__4751.cljs$lang$applyTo = (function (arglist__4753){
var args = cljs.core.seq(arglist__4753);
return G__4751__delegate(args);
});
G__4751.cljs$core$IFn$_invoke$arity$variadic = G__4751__delegate;
return G__4751;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__4755 = x;
return goog.isString(G__4755);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__4757 = x__$1;
return goog.typeOf(G__4757);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3115__auto__ = ty;
if(cljs.core.truth_(and__3115__auto__)){
return ty.cljs$lang$type;
} else {
return and__3115__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__4759 = obj;
return goog.typeOf(G__4759);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4423__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4423__auto__)){
var s = temp__4423__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__4761 = Symbol;
return goog.typeOf(G__4761);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4014__auto___4763 = len;
var i_4764 = (0);
while(true){
if((i_4764 < n__4014__auto___4763)){
(new_arr[i_4764] = (arr[i_4764]));

var G__4765 = (i_4764 + (1));
i_4764 = G__4765;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__4766 = (i + (1));
i = G__4766;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__4775__delegate = function (array,i,idxs){
var G__4772 = aget;
var G__4773 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__4774 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__4772,G__4773,G__4774) : cljs.core.apply.call(null,G__4772,G__4773,G__4774));
};
var G__4775 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__4776__i = 0, G__4776__a = new Array(arguments.length -  2);
while (G__4776__i < G__4776__a.length) {G__4776__a[G__4776__i] = arguments[G__4776__i + 2]; ++G__4776__i;}
  idxs = new cljs.core.IndexedSeq(G__4776__a,0);
} 
return G__4775__delegate.call(this,array,i,idxs);};
G__4775.cljs$lang$maxFixedArity = 2;
G__4775.cljs$lang$applyTo = (function (arglist__4777){
var array = cljs.core.first(arglist__4777);
arglist__4777 = cljs.core.next(arglist__4777);
var i = cljs.core.first(arglist__4777);
var idxs = cljs.core.rest(arglist__4777);
return G__4775__delegate(array,i,idxs);
});
G__4775.cljs$core$IFn$_invoke$arity$variadic = G__4775__delegate;
return G__4775;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__4778 = null;
if (arguments.length > 2) {
var G__4779__i = 0, G__4779__a = new Array(arguments.length -  2);
while (G__4779__i < G__4779__a.length) {G__4779__a[G__4779__i] = arguments[G__4779__i + 2]; ++G__4779__i;}
G__4778 = new cljs.core.IndexedSeq(G__4779__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__4778);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__4788__delegate = function (array,idx,idx2,idxv){
var G__4784 = aset;
var G__4785 = (array[idx]);
var G__4786 = idx2;
var G__4787 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__4784,G__4785,G__4786,G__4787) : cljs.core.apply.call(null,G__4784,G__4785,G__4786,G__4787));
};
var G__4788 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__4789__i = 0, G__4789__a = new Array(arguments.length -  3);
while (G__4789__i < G__4789__a.length) {G__4789__a[G__4789__i] = arguments[G__4789__i + 3]; ++G__4789__i;}
  idxv = new cljs.core.IndexedSeq(G__4789__a,0);
} 
return G__4788__delegate.call(this,array,idx,idx2,idxv);};
G__4788.cljs$lang$maxFixedArity = 3;
G__4788.cljs$lang$applyTo = (function (arglist__4790){
var array = cljs.core.first(arglist__4790);
arglist__4790 = cljs.core.next(arglist__4790);
var idx = cljs.core.first(arglist__4790);
arglist__4790 = cljs.core.next(arglist__4790);
var idx2 = cljs.core.first(arglist__4790);
var idxv = cljs.core.rest(arglist__4790);
return G__4788__delegate(array,idx,idx2,idxv);
});
G__4788.cljs$core$IFn$_invoke$arity$variadic = G__4788__delegate;
return G__4788;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__4791 = null;
if (arguments.length > 3) {
var G__4792__i = 0, G__4792__a = new Array(arguments.length -  3);
while (G__4792__i < G__4792__a.length) {G__4792__a[G__4792__i] = arguments[G__4792__i + 3]; ++G__4792__i;}
G__4791 = new cljs.core.IndexedSeq(G__4792__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__4791);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__4798 = (function (a,x){
a.push(x);

return a;
});
var G__4799 = [];
var G__4800 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__4798,G__4799,G__4800) : cljs.core.reduce.call(null,G__4798,G__4799,G__4800));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__4801__i = 0, G__4801__a = new Array(arguments.length -  2);
while (G__4801__i < G__4801__a.length) {G__4801__a[G__4801__i] = arguments[G__4801__i + 2]; ++G__4801__i;}
  args = new cljs.core.IndexedSeq(G__4801__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__4802){
var obj = cljs.core.first(arglist__4802);
arglist__4802 = cljs.core.next(arglist__4802);
var s = cljs.core.first(arglist__4802);
var args = cljs.core.rest(arglist__4802);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj4804 = {};
return obj4804;
})();


cljs.core.IFn = (function (){var obj4806 = {};
return obj4806;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4852 = x__3771__auto__;
return goog.typeOf(G__4852);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4854 = x__3771__auto__;
return goog.typeOf(G__4854);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4856 = x__3771__auto__;
return goog.typeOf(G__4856);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4858 = x__3771__auto__;
return goog.typeOf(G__4858);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4860 = x__3771__auto__;
return goog.typeOf(G__4860);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4862 = x__3771__auto__;
return goog.typeOf(G__4862);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4864 = x__3771__auto__;
return goog.typeOf(G__4864);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4866 = x__3771__auto__;
return goog.typeOf(G__4866);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4868 = x__3771__auto__;
return goog.typeOf(G__4868);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4870 = x__3771__auto__;
return goog.typeOf(G__4870);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4872 = x__3771__auto__;
return goog.typeOf(G__4872);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4874 = x__3771__auto__;
return goog.typeOf(G__4874);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4876 = x__3771__auto__;
return goog.typeOf(G__4876);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4878 = x__3771__auto__;
return goog.typeOf(G__4878);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4880 = x__3771__auto__;
return goog.typeOf(G__4880);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4882 = x__3771__auto__;
return goog.typeOf(G__4882);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4884 = x__3771__auto__;
return goog.typeOf(G__4884);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4886 = x__3771__auto__;
return goog.typeOf(G__4886);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4888 = x__3771__auto__;
return goog.typeOf(G__4888);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4890 = x__3771__auto__;
return goog.typeOf(G__4890);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4892 = x__3771__auto__;
return goog.typeOf(G__4892);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._invoke[(function (){var G__4894 = x__3771__auto__;
return goog.typeOf(G__4894);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._invoke["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj4896 = {};
return obj4896;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3115__auto__ = value;
if(and__3115__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3115__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__3771__auto__ = (((value == null))?null:value);
return (function (){var or__3127__auto__ = (cljs.core._clone[(function (){var G__4900 = x__3771__auto__;
return goog.typeOf(G__4900);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._clone["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj4902 = {};
return obj4902;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._count[(function (){var G__4906 = x__3771__auto__;
return goog.typeOf(G__4906);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._count["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj4908 = {};
return obj4908;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._empty[(function (){var G__4912 = x__3771__auto__;
return goog.typeOf(G__4912);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._empty["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj4914 = {};
return obj4914;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._conj[(function (){var G__4918 = x__3771__auto__;
return goog.typeOf(G__4918);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._conj["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj4920 = {};
return obj4920;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._nth[(function (){var G__4926 = x__3771__auto__;
return goog.typeOf(G__4926);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._nth["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._nth[(function (){var G__4928 = x__3771__auto__;
return goog.typeOf(G__4928);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._nth["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj4930 = {};
return obj4930;
})();


cljs.core.ISeq = (function (){var obj4932 = {};
return obj4932;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._first[(function (){var G__4936 = x__3771__auto__;
return goog.typeOf(G__4936);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._first["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._rest[(function (){var G__4940 = x__3771__auto__;
return goog.typeOf(G__4940);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._rest["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj4942 = {};
return obj4942;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._next[(function (){var G__4946 = x__3771__auto__;
return goog.typeOf(G__4946);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._next["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj4948 = {};
return obj4948;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3115__auto__ = o;
if(and__3115__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3115__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__3771__auto__ = (((o == null))?null:o);
return (function (){var or__3127__auto__ = (cljs.core._lookup[(function (){var G__4954 = x__3771__auto__;
return goog.typeOf(G__4954);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._lookup["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3115__auto__ = o;
if(and__3115__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3115__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__3771__auto__ = (((o == null))?null:o);
return (function (){var or__3127__auto__ = (cljs.core._lookup[(function (){var G__4956 = x__3771__auto__;
return goog.typeOf(G__4956);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._lookup["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj4958 = {};
return obj4958;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__4962 = x__3771__auto__;
return goog.typeOf(G__4962);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._assoc[(function (){var G__4966 = x__3771__auto__;
return goog.typeOf(G__4966);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._assoc["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj4968 = {};
return obj4968;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._dissoc[(function (){var G__4972 = x__3771__auto__;
return goog.typeOf(G__4972);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj4974 = {};
return obj4974;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._key[(function (){var G__4978 = x__3771__auto__;
return goog.typeOf(G__4978);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._key["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._val[(function (){var G__4982 = x__3771__auto__;
return goog.typeOf(G__4982);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._val["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj4984 = {};
return obj4984;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._disjoin[(function (){var G__4988 = x__3771__auto__;
return goog.typeOf(G__4988);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj4990 = {};
return obj4990;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._peek[(function (){var G__4994 = x__3771__auto__;
return goog.typeOf(G__4994);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._peek["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._pop[(function (){var G__4998 = x__3771__auto__;
return goog.typeOf(G__4998);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._pop["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj5000 = {};
return obj5000;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._assoc_n[(function (){var G__5004 = x__3771__auto__;
return goog.typeOf(G__5004);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj5006 = {};
return obj5006;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3115__auto__ = o;
if(and__3115__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3115__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__3771__auto__ = (((o == null))?null:o);
return (function (){var or__3127__auto__ = (cljs.core._deref[(function (){var G__5010 = x__3771__auto__;
return goog.typeOf(G__5010);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._deref["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj5012 = {};
return obj5012;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3115__auto__ = o;
if(and__3115__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3115__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__3771__auto__ = (((o == null))?null:o);
return (function (){var or__3127__auto__ = (cljs.core._deref_with_timeout[(function (){var G__5016 = x__3771__auto__;
return goog.typeOf(G__5016);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj5018 = {};
return obj5018;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3115__auto__ = o;
if(and__3115__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3115__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__3771__auto__ = (((o == null))?null:o);
return (function (){var or__3127__auto__ = (cljs.core._meta[(function (){var G__5022 = x__3771__auto__;
return goog.typeOf(G__5022);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._meta["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj5024 = {};
return obj5024;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3115__auto__ = o;
if(and__3115__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3115__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__3771__auto__ = (((o == null))?null:o);
return (function (){var or__3127__auto__ = (cljs.core._with_meta[(function (){var G__5028 = x__3771__auto__;
return goog.typeOf(G__5028);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj5030 = {};
return obj5030;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._reduce[(function (){var G__5036 = x__3771__auto__;
return goog.typeOf(G__5036);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._reduce["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._reduce[(function (){var G__5038 = x__3771__auto__;
return goog.typeOf(G__5038);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._reduce["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj5040 = {};
return obj5040;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._kv_reduce[(function (){var G__5044 = x__3771__auto__;
return goog.typeOf(G__5044);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj5046 = {};
return obj5046;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3115__auto__ = o;
if(and__3115__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3115__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__3771__auto__ = (((o == null))?null:o);
return (function (){var or__3127__auto__ = (cljs.core._equiv[(function (){var G__5050 = x__3771__auto__;
return goog.typeOf(G__5050);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._equiv["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj5052 = {};
return obj5052;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3115__auto__ = o;
if(and__3115__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3115__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__3771__auto__ = (((o == null))?null:o);
return (function (){var or__3127__auto__ = (cljs.core._hash[(function (){var G__5056 = x__3771__auto__;
return goog.typeOf(G__5056);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._hash["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj5058 = {};
return obj5058;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3115__auto__ = o;
if(and__3115__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3115__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__3771__auto__ = (((o == null))?null:o);
return (function (){var or__3127__auto__ = (cljs.core._seq[(function (){var G__5062 = x__3771__auto__;
return goog.typeOf(G__5062);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._seq["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj5064 = {};
return obj5064;
})();


cljs.core.IList = (function (){var obj5066 = {};
return obj5066;
})();


cljs.core.IRecord = (function (){var obj5068 = {};
return obj5068;
})();


cljs.core.IReversible = (function (){var obj5070 = {};
return obj5070;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._rseq[(function (){var G__5074 = x__3771__auto__;
return goog.typeOf(G__5074);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._rseq["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj5076 = {};
return obj5076;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._sorted_seq[(function (){var G__5080 = x__3771__auto__;
return goog.typeOf(G__5080);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._sorted_seq_from[(function (){var G__5084 = x__3771__auto__;
return goog.typeOf(G__5084);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._entry_key[(function (){var G__5088 = x__3771__auto__;
return goog.typeOf(G__5088);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._comparator[(function (){var G__5092 = x__3771__auto__;
return goog.typeOf(G__5092);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._comparator["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj5094 = {};
return obj5094;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3115__auto__ = writer;
if(and__3115__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3115__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__3771__auto__ = (((writer == null))?null:writer);
return (function (){var or__3127__auto__ = (cljs.core._write[(function (){var G__5098 = x__3771__auto__;
return goog.typeOf(G__5098);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._write["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3115__auto__ = writer;
if(and__3115__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3115__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__3771__auto__ = (((writer == null))?null:writer);
return (function (){var or__3127__auto__ = (cljs.core._flush[(function (){var G__5102 = x__3771__auto__;
return goog.typeOf(G__5102);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._flush["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj5104 = {};
return obj5104;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3115__auto__ = o;
if(and__3115__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3115__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__3771__auto__ = (((o == null))?null:o);
return (function (){var or__3127__auto__ = (cljs.core._pr_writer[(function (){var G__5108 = x__3771__auto__;
return goog.typeOf(G__5108);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj5110 = {};
return obj5110;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3115__auto__ = d;
if(and__3115__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3115__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__3771__auto__ = (((d == null))?null:d);
return (function (){var or__3127__auto__ = (cljs.core._realized_QMARK_[(function (){var G__5114 = x__3771__auto__;
return goog.typeOf(G__5114);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj5116 = {};
return obj5116;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._notify_watches[(function (){var G__5120 = x__3771__auto__;
return goog.typeOf(G__5120);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._add_watch[(function (){var G__5124 = x__3771__auto__;
return goog.typeOf(G__5124);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3115__auto__ = this$;
if(and__3115__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3115__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__3771__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3127__auto__ = (cljs.core._remove_watch[(function (){var G__5128 = x__3771__auto__;
return goog.typeOf(G__5128);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj5130 = {};
return obj5130;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._as_transient[(function (){var G__5134 = x__3771__auto__;
return goog.typeOf(G__5134);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj5136 = {};
return obj5136;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3115__auto__ = tcoll;
if(and__3115__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3115__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__3771__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3127__auto__ = (cljs.core._conj_BANG_[(function (){var G__5140 = x__3771__auto__;
return goog.typeOf(G__5140);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3115__auto__ = tcoll;
if(and__3115__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3115__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__3771__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3127__auto__ = (cljs.core._persistent_BANG_[(function (){var G__5144 = x__3771__auto__;
return goog.typeOf(G__5144);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj5146 = {};
return obj5146;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3115__auto__ = tcoll;
if(and__3115__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3115__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__3771__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3127__auto__ = (cljs.core._assoc_BANG_[(function (){var G__5150 = x__3771__auto__;
return goog.typeOf(G__5150);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj5152 = {};
return obj5152;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3115__auto__ = tcoll;
if(and__3115__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3115__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__3771__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3127__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__5156 = x__3771__auto__;
return goog.typeOf(G__5156);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj5158 = {};
return obj5158;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3115__auto__ = tcoll;
if(and__3115__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3115__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__3771__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3127__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__5162 = x__3771__auto__;
return goog.typeOf(G__5162);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3115__auto__ = tcoll;
if(and__3115__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3115__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__3771__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3127__auto__ = (cljs.core._pop_BANG_[(function (){var G__5166 = x__3771__auto__;
return goog.typeOf(G__5166);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj5168 = {};
return obj5168;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3115__auto__ = tcoll;
if(and__3115__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3115__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__3771__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3127__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__5172 = x__3771__auto__;
return goog.typeOf(G__5172);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj5174 = {};
return obj5174;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3115__auto__ = x;
if(and__3115__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3115__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__3771__auto__ = (((x == null))?null:x);
return (function (){var or__3127__auto__ = (cljs.core._compare[(function (){var G__5178 = x__3771__auto__;
return goog.typeOf(G__5178);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._compare["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj5180 = {};
return obj5180;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._drop_first[(function (){var G__5184 = x__3771__auto__;
return goog.typeOf(G__5184);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj5186 = {};
return obj5186;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._chunked_first[(function (){var G__5190 = x__3771__auto__;
return goog.typeOf(G__5190);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._chunked_rest[(function (){var G__5194 = x__3771__auto__;
return goog.typeOf(G__5194);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj5196 = {};
return obj5196;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._chunked_next[(function (){var G__5200 = x__3771__auto__;
return goog.typeOf(G__5200);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj5202 = {};
return obj5202;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3115__auto__ = x;
if(and__3115__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3115__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__3771__auto__ = (((x == null))?null:x);
return (function (){var or__3127__auto__ = (cljs.core._name[(function (){var G__5206 = x__3771__auto__;
return goog.typeOf(G__5206);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._name["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3115__auto__ = x;
if(and__3115__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3115__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__3771__auto__ = (((x == null))?null:x);
return (function (){var or__3127__auto__ = (cljs.core._namespace[(function (){var G__5210 = x__3771__auto__;
return goog.typeOf(G__5210);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._namespace["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj5212 = {};
return obj5212;
})();


cljs.core.IReset = (function (){var obj5214 = {};
return obj5214;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3115__auto__ = o;
if(and__3115__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3115__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__3771__auto__ = (((o == null))?null:o);
return (function (){var or__3127__auto__ = (cljs.core._reset_BANG_[(function (){var G__5218 = x__3771__auto__;
return goog.typeOf(G__5218);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj5220 = {};
return obj5220;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3115__auto__ = o;
if(and__3115__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3115__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__3771__auto__ = (((o == null))?null:o);
return (function (){var or__3127__auto__ = (cljs.core._swap_BANG_[(function (){var G__5230 = x__3771__auto__;
return goog.typeOf(G__5230);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3115__auto__ = o;
if(and__3115__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3115__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__3771__auto__ = (((o == null))?null:o);
return (function (){var or__3127__auto__ = (cljs.core._swap_BANG_[(function (){var G__5232 = x__3771__auto__;
return goog.typeOf(G__5232);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3115__auto__ = o;
if(and__3115__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3115__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__3771__auto__ = (((o == null))?null:o);
return (function (){var or__3127__auto__ = (cljs.core._swap_BANG_[(function (){var G__5234 = x__3771__auto__;
return goog.typeOf(G__5234);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3115__auto__ = o;
if(and__3115__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3115__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__3771__auto__ = (((o == null))?null:o);
return (function (){var or__3127__auto__ = (cljs.core._swap_BANG_[(function (){var G__5236 = x__3771__auto__;
return goog.typeOf(G__5236);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj5238 = {};
return obj5238;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3115__auto__ = o;
if(and__3115__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3115__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__3771__auto__ = (((o == null))?null:o);
return (function (){var or__3127__auto__ = (cljs.core._vreset_BANG_[(function (){var G__5242 = x__3771__auto__;
return goog.typeOf(G__5242);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj5244 = {};
return obj5244;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3115__auto__ = coll;
if(and__3115__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3115__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__3771__auto__ = (((coll == null))?null:coll);
return (function (){var or__3127__auto__ = (cljs.core._iterator[(function (){var G__5248 = x__3771__auto__;
return goog.typeOf(G__5248);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._iterator["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__5251 = (4294967295);
var G__5252 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__5251,G__5252) : Math.imul.call(null,G__5251,G__5252));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__5255 = a;
var G__5256 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__5255,G__5256) : Math.imul.call(null,G__5255,G__5256));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__5257 = (i + (2));
var G__5258 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__5257;
h1 = G__5258;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj5260 = {};
return obj5260;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__5261 = (i + (1));
var G__5262 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__5261;
hash = G__5262;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj5266 = {};
return obj5266;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__5269 = o;
if(G__5269){
var bit__3801__auto__ = (G__5269.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__3801__auto__) || (G__5269.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__5270 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__5270) : Math.floor.call(null,G__5270));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3115__auto__ = cljs.core.not(a.ns);
if(and__3115__auto__){
return b.ns;
} else {
return and__3115__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__5277 = a.ns;
var G__5278 = b.ns;
return goog.array.defaultCompare(G__5277,G__5278);
})();
if(((0) === nsc)){
var G__5279 = a.name;
var G__5280 = b.name;
return goog.array.defaultCompare(G__5279,G__5280);
} else {
return nsc;
}
}
} else {
var G__5281 = a.name;
var G__5282 = b.name;
return goog.array.defaultCompare(G__5281,G__5282);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.call = (function() {
var G__5284 = null;
var G__5284__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__5284__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__5284 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__5284__2.call(this,self__,coll);
case 3:
return G__5284__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__5284.cljs$core$IFn$_invoke$arity$2 = G__5284__2;
G__5284.cljs$core$IFn$_invoke$arity$3 = G__5284__3;
return G__5284;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args5283){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args5283)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__3548__auto__ = self__._hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 163841;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.call = (function() {
var G__5332 = null;
var G__5332__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__5332__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__5332__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__5332__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__5332__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__5332__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__5332__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__5332__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__5332__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__5332__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__5332__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__5332__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__5332__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__5332__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__5332__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__5332__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__5332__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__5332__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__5332__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__5332__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__5332__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__5332__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5288 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__5289 = a;
var G__5290 = b;
var G__5291 = c;
var G__5292 = d;
var G__5293 = e;
var G__5294 = f;
var G__5295 = g;
var G__5296 = h;
var G__5297 = i;
var G__5298 = j;
var G__5299 = k;
var G__5300 = l;
var G__5301 = m;
var G__5302 = n;
var G__5303 = o;
var G__5304 = p;
var G__5305 = q;
var G__5306 = r;
var G__5307 = s;
var G__5308 = t;
var G__5309 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__5288,G__5289,G__5290,G__5291,G__5292,G__5293,G__5294,G__5295,G__5296,G__5297,G__5298,G__5299,G__5300,G__5301,G__5302,G__5303,G__5304,G__5305,G__5306,G__5307,G__5308,G__5309) : cljs.core.apply.call(null,G__5288,G__5289,G__5290,G__5291,G__5292,G__5293,G__5294,G__5295,G__5296,G__5297,G__5298,G__5299,G__5300,G__5301,G__5302,G__5303,G__5304,G__5305,G__5306,G__5307,G__5308,G__5309));
});
G__5332 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__5332__1.call(this,self__);
case 2:
return G__5332__2.call(this,self__,a);
case 3:
return G__5332__3.call(this,self__,a,b);
case 4:
return G__5332__4.call(this,self__,a,b,c);
case 5:
return G__5332__5.call(this,self__,a,b,c,d);
case 6:
return G__5332__6.call(this,self__,a,b,c,d,e);
case 7:
return G__5332__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__5332__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__5332__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__5332__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__5332__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__5332__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__5332__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__5332__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__5332__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__5332__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__5332__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__5332__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__5332__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__5332__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__5332__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__5332__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__5332.cljs$core$IFn$_invoke$arity$1 = G__5332__1;
G__5332.cljs$core$IFn$_invoke$arity$2 = G__5332__2;
G__5332.cljs$core$IFn$_invoke$arity$3 = G__5332__3;
G__5332.cljs$core$IFn$_invoke$arity$4 = G__5332__4;
G__5332.cljs$core$IFn$_invoke$arity$5 = G__5332__5;
G__5332.cljs$core$IFn$_invoke$arity$6 = G__5332__6;
G__5332.cljs$core$IFn$_invoke$arity$7 = G__5332__7;
G__5332.cljs$core$IFn$_invoke$arity$8 = G__5332__8;
G__5332.cljs$core$IFn$_invoke$arity$9 = G__5332__9;
G__5332.cljs$core$IFn$_invoke$arity$10 = G__5332__10;
G__5332.cljs$core$IFn$_invoke$arity$11 = G__5332__11;
G__5332.cljs$core$IFn$_invoke$arity$12 = G__5332__12;
G__5332.cljs$core$IFn$_invoke$arity$13 = G__5332__13;
G__5332.cljs$core$IFn$_invoke$arity$14 = G__5332__14;
G__5332.cljs$core$IFn$_invoke$arity$15 = G__5332__15;
G__5332.cljs$core$IFn$_invoke$arity$16 = G__5332__16;
G__5332.cljs$core$IFn$_invoke$arity$17 = G__5332__17;
G__5332.cljs$core$IFn$_invoke$arity$18 = G__5332__18;
G__5332.cljs$core$IFn$_invoke$arity$19 = G__5332__19;
G__5332.cljs$core$IFn$_invoke$arity$20 = G__5332__20;
G__5332.cljs$core$IFn$_invoke$arity$21 = G__5332__21;
G__5332.cljs$core$IFn$_invoke$arity$22 = G__5332__22;
return G__5332;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args5287){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args5287)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__5310 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__5311 = a;
var G__5312 = b;
var G__5313 = c;
var G__5314 = d;
var G__5315 = e;
var G__5316 = f;
var G__5317 = g;
var G__5318 = h;
var G__5319 = i;
var G__5320 = j;
var G__5321 = k;
var G__5322 = l;
var G__5323 = m;
var G__5324 = n;
var G__5325 = o;
var G__5326 = p;
var G__5327 = q;
var G__5328 = r;
var G__5329 = s;
var G__5330 = t;
var G__5331 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__5310,G__5311,G__5312,G__5313,G__5314,G__5315,G__5316,G__5317,G__5318,G__5319,G__5320,G__5321,G__5322,G__5323,G__5324,G__5325,G__5326,G__5327,G__5328,G__5329,G__5330,G__5331) : cljs.core.apply.call(null,G__5310,G__5311,G__5312,G__5313,G__5314,G__5315,G__5316,G__5317,G__5318,G__5319,G__5320,G__5321,G__5322,G__5323,G__5324,G__5325,G__5326,G__5327,G__5328,G__5329,G__5330,G__5331));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__5334 = x;
if(G__5334){
var bit__3808__auto__ = null;
if(cljs.core.truth_((function (){var or__3127__auto__ = bit__3808__auto__;
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
return G__5334.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__5334.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__5334);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__5334);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__5336 = value;
if(G__5336){
var bit__3808__auto__ = (G__5336.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__3808__auto__) || (G__5336.cljs$core$ICloneable$)){
return true;
} else {
if((!G__5336.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__5336);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__5336);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__5338 = coll;
if(G__5338){
var bit__3801__auto__ = (G__5338.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__3801__auto__) || (G__5338.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__5340 = coll;
if(G__5340){
var bit__3801__auto__ = (G__5340.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__3801__auto__) || (G__5340.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__5342 = coll;
if(G__5342){
var bit__3801__auto__ = (G__5342.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__3801__auto__) || (G__5342.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__5344 = coll;
if(G__5344){
var bit__3801__auto__ = (G__5344.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__3801__auto__) || (G__5344.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__5349__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__5350 = y;
var G__5351 = cljs.core.first(more);
var G__5352 = cljs.core.next(more);
x = G__5350;
y = G__5351;
more = G__5352;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__5349 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__5353__i = 0, G__5353__a = new Array(arguments.length -  2);
while (G__5353__i < G__5353__a.length) {G__5353__a[G__5353__i] = arguments[G__5353__i + 2]; ++G__5353__i;}
  more = new cljs.core.IndexedSeq(G__5353__a,0);
} 
return G__5349__delegate.call(this,x,y,more);};
G__5349.cljs$lang$maxFixedArity = 2;
G__5349.cljs$lang$applyTo = (function (arglist__5354){
var x = cljs.core.first(arglist__5354);
arglist__5354 = cljs.core.next(arglist__5354);
var y = cljs.core.first(arglist__5354);
var more = cljs.core.rest(arglist__5354);
return G__5349__delegate(x,y,more);
});
G__5349.cljs$core$IFn$_invoke$arity$variadic = G__5349__delegate;
return G__5349;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__5355 = null;
if (arguments.length > 2) {
var G__5356__i = 0, G__5356__a = new Array(arguments.length -  2);
while (G__5356__i < G__5356__a.length) {G__5356__a[G__5356__i] = arguments[G__5356__i + 2]; ++G__5356__i;}
G__5355 = new cljs.core.IndexedSeq(G__5356__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__5355);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"value": x, "done": false};
} else {
return {"value": null, "done": true};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__5357 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__5357) : cljs.core.es6_iterator_seq.call(null,G__5357));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__5358 = (n + (1));
var G__5359 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__5360 = cljs.core.next(coll__$1);
n = G__5358;
hash_code = G__5359;
coll__$1 = G__5360;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__5361 = (n + (1));
var G__5362 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__5363 = cljs.core.next(coll__$1);
n = G__5361;
hash_code = G__5362;
coll__$1 = G__5363;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.Fn["function"] = true);

(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__5364 = o;
return goog.getUid(G__5364);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition0$ = 32768;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__5366 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5366) : cljs.core.deref.call(null,G__5366));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__5373 = val;
var G__5374 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5373,G__5374) : f.call(null,G__5373,G__5374));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5379 = nval;
var G__5380 = (n + (1));
val = G__5379;
n = G__5380;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__5375 = val__$1;
var G__5376 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5375,G__5376) : f.call(null,G__5375,G__5376));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5381 = nval;
var G__5382 = (n + (1));
val__$1 = G__5381;
n = G__5382;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__5377 = val__$1;
var G__5378 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5377,G__5378) : f.call(null,G__5377,G__5378));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5383 = nval;
var G__5384 = (n + (1));
val__$1 = G__5383;
n = G__5384;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__5391 = val;
var G__5392 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5391,G__5392) : f.call(null,G__5391,G__5392));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5397 = nval;
var G__5398 = (n + (1));
val = G__5397;
n = G__5398;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__5393 = val__$1;
var G__5394 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5393,G__5394) : f.call(null,G__5393,G__5394));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5399 = nval;
var G__5400 = (n + (1));
val__$1 = G__5399;
n = G__5400;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__5395 = val__$1;
var G__5396 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__5395,G__5396) : f.call(null,G__5395,G__5396));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__5401 = nval;
var G__5402 = (n + (1));
val__$1 = G__5401;
n = G__5402;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__5404 = x;
if(G__5404){
var bit__3808__auto__ = (G__5404.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__3808__auto__) || (G__5404.cljs$core$ICounted$)){
return true;
} else {
if((!G__5404.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__5404);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__5404);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__5406 = x;
if(G__5406){
var bit__3808__auto__ = (G__5406.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__3808__auto__) || (G__5406.cljs$core$IIndexed$)){
return true;
} else {
if((!G__5406.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__5406);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__5406);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__5407 = coll__$1;
var G__5408 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__5407,G__5408) : cljs.core.equiv_sequential.call(null,G__5407,G__5408));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__5409 = o;
var G__5410 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__5409,G__5410) : cljs.core.cons.call(null,G__5409,G__5410));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__5413 = coll__$1;
var G__5414 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__5413,G__5414) : cljs.core.equiv_sequential.call(null,G__5413,G__5414));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__5415 = cljs.core.List.EMPTY;
var G__5416 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__5415,G__5416) : cljs.core.with_meta.call(null,G__5415,G__5416));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__5417 = f;
var G__5418 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__5417,G__5418) : cljs.core.seq_reduce.call(null,G__5417,G__5418));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__5419 = f;
var G__5420 = start;
var G__5421 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__5419,G__5420,G__5421) : cljs.core.seq_reduce.call(null,G__5419,G__5420,G__5421));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__5422 = o;
var G__5423 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__5422,G__5423) : cljs.core.cons.call(null,G__5422,G__5423));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__5424 = sn;
s = G__5424;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__5429__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__5430 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__5431 = cljs.core.first(xs);
var G__5432 = cljs.core.next(xs);
coll = G__5430;
x = G__5431;
xs = G__5432;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__5429 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__5433__i = 0, G__5433__a = new Array(arguments.length -  2);
while (G__5433__i < G__5433__a.length) {G__5433__a[G__5433__i] = arguments[G__5433__i + 2]; ++G__5433__i;}
  xs = new cljs.core.IndexedSeq(G__5433__a,0);
} 
return G__5429__delegate.call(this,coll,x,xs);};
G__5429.cljs$lang$maxFixedArity = 2;
G__5429.cljs$lang$applyTo = (function (arglist__5434){
var coll = cljs.core.first(arglist__5434);
arglist__5434 = cljs.core.next(arglist__5434);
var x = cljs.core.first(arglist__5434);
var xs = cljs.core.rest(arglist__5434);
return G__5429__delegate(coll,x,xs);
});
G__5429.cljs$core$IFn$_invoke$arity$variadic = G__5429__delegate;
return G__5429;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__5435 = null;
if (arguments.length > 2) {
var G__5436__i = 0, G__5436__a = new Array(arguments.length -  2);
while (G__5436__i < G__5436__a.length) {G__5436__a[G__5436__i] = arguments[G__5436__i + 2]; ++G__5436__i;}
G__5435 = new cljs.core.IndexedSeq(G__5436__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__5435);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__5437 = cljs.core.next(s);
var G__5438 = (acc + (1));
s = G__5437;
acc = G__5438;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__5440 = coll;
if(G__5440){
var bit__3801__auto__ = (G__5440.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__3801__auto__) || (G__5440.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__5441 = cljs.core.next(coll);
var G__5442 = (n - (1));
coll = G__5441;
n = G__5442;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__5443 = cljs.core.next(coll);
var G__5444 = (n - (1));
var G__5445 = not_found;
coll = G__5443;
n = G__5444;
not_found = G__5445;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__5450 = coll;
if(G__5450){
var bit__3801__auto__ = (G__5450.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__3801__auto__) || (G__5450.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__5451 = coll;
if(G__5451){
var bit__3808__auto__ = (G__5451.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__3808__auto__) || (G__5451.cljs$core$ISeq$)){
return true;
} else {
if((!G__5451.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__5451);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__5451);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__5452 = coll;
if(G__5452){
var bit__3801__auto__ = (G__5452.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__3801__auto__) || (G__5452.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__5453 = coll;
if(G__5453){
var bit__3808__auto__ = (G__5453.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__3808__auto__) || (G__5453.cljs$core$ISeq$)){
return true;
} else {
if((!G__5453.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__5453);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__5453);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__5454 = (n__$1 - (1));
var G__5455 = cljs.core.rest(xs);
n__$1 = G__5454;
xs = G__5455;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__5458 = o;
if(G__5458){
var bit__3801__auto__ = (G__5458.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__3801__auto__) || (G__5458.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__5459 = o;
if(G__5459){
var bit__3801__auto__ = (G__5459.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__3801__auto__) || (G__5459.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__5463__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__5464 = ret;
var G__5465 = cljs.core.first(kvs);
var G__5466 = cljs.core.second(kvs);
var G__5467 = cljs.core.nnext(kvs);
coll = G__5464;
k = G__5465;
v = G__5466;
kvs = G__5467;
continue;
} else {
return ret;
}
break;
}
};
var G__5463 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__5468__i = 0, G__5468__a = new Array(arguments.length -  3);
while (G__5468__i < G__5468__a.length) {G__5468__a[G__5468__i] = arguments[G__5468__i + 3]; ++G__5468__i;}
  kvs = new cljs.core.IndexedSeq(G__5468__a,0);
} 
return G__5463__delegate.call(this,coll,k,v,kvs);};
G__5463.cljs$lang$maxFixedArity = 3;
G__5463.cljs$lang$applyTo = (function (arglist__5469){
var coll = cljs.core.first(arglist__5469);
arglist__5469 = cljs.core.next(arglist__5469);
var k = cljs.core.first(arglist__5469);
arglist__5469 = cljs.core.next(arglist__5469);
var v = cljs.core.first(arglist__5469);
var kvs = cljs.core.rest(arglist__5469);
return G__5463__delegate(coll,k,v,kvs);
});
G__5463.cljs$core$IFn$_invoke$arity$variadic = G__5463__delegate;
return G__5463;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__5470 = null;
if (arguments.length > 3) {
var G__5471__i = 0, G__5471__a = new Array(arguments.length -  3);
while (G__5471__i < G__5471__a.length) {G__5471__a[G__5471__i] = arguments[G__5471__i + 3]; ++G__5471__i;}
G__5470 = new cljs.core.IndexedSeq(G__5471__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__5470);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__5474__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__5475 = ret;
var G__5476 = cljs.core.first(ks);
var G__5477 = cljs.core.next(ks);
coll = G__5475;
k = G__5476;
ks = G__5477;
continue;
} else {
return ret;
}
}
break;
}
};
var G__5474 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__5478__i = 0, G__5478__a = new Array(arguments.length -  2);
while (G__5478__i < G__5478__a.length) {G__5478__a[G__5478__i] = arguments[G__5478__i + 2]; ++G__5478__i;}
  ks = new cljs.core.IndexedSeq(G__5478__a,0);
} 
return G__5474__delegate.call(this,coll,k,ks);};
G__5474.cljs$lang$maxFixedArity = 2;
G__5474.cljs$lang$applyTo = (function (arglist__5479){
var coll = cljs.core.first(arglist__5479);
arglist__5479 = cljs.core.next(arglist__5479);
var k = cljs.core.first(arglist__5479);
var ks = cljs.core.rest(arglist__5479);
return G__5474__delegate(coll,k,ks);
});
G__5474.cljs$core$IFn$_invoke$arity$variadic = G__5474__delegate;
return G__5474;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__5480 = null;
if (arguments.length > 2) {
var G__5481__i = 0, G__5481__a = new Array(arguments.length -  2);
while (G__5481__i < G__5481__a.length) {G__5481__a[G__5481__i] = arguments[G__5481__i + 2]; ++G__5481__i;}
G__5480 = new cljs.core.IndexedSeq(G__5481__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__5480);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3127__auto__ = (function (){var G__5486 = f;
return goog.isFunction(G__5486);
})();
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
var G__5487 = f;
if(G__5487){
var bit__3808__auto__ = null;
if(cljs.core.truth_((function (){var or__3127__auto____$1 = bit__3808__auto__;
if(cljs.core.truth_(or__3127__auto____$1)){
return or__3127__auto____$1;
} else {
return G__5487.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__5487.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__5487);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__5487);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 393217;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.call = (function() {
var G__5953 = null;
var G__5953__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__5953__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5489 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__5489) : self__.afn.call(null,G__5489));
});
var G__5953__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5490 = a;
var G__5491 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__5490,G__5491) : self__.afn.call(null,G__5490,G__5491));
});
var G__5953__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5492 = a;
var G__5493 = b;
var G__5494 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__5492,G__5493,G__5494) : self__.afn.call(null,G__5492,G__5493,G__5494));
});
var G__5953__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5495 = a;
var G__5496 = b;
var G__5497 = c;
var G__5498 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__5495,G__5496,G__5497,G__5498) : self__.afn.call(null,G__5495,G__5496,G__5497,G__5498));
});
var G__5953__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5499 = a;
var G__5500 = b;
var G__5501 = c;
var G__5502 = d;
var G__5503 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__5499,G__5500,G__5501,G__5502,G__5503) : self__.afn.call(null,G__5499,G__5500,G__5501,G__5502,G__5503));
});
var G__5953__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5504 = a;
var G__5505 = b;
var G__5506 = c;
var G__5507 = d;
var G__5508 = e;
var G__5509 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__5504,G__5505,G__5506,G__5507,G__5508,G__5509) : self__.afn.call(null,G__5504,G__5505,G__5506,G__5507,G__5508,G__5509));
});
var G__5953__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5510 = a;
var G__5511 = b;
var G__5512 = c;
var G__5513 = d;
var G__5514 = e;
var G__5515 = f;
var G__5516 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__5510,G__5511,G__5512,G__5513,G__5514,G__5515,G__5516) : self__.afn.call(null,G__5510,G__5511,G__5512,G__5513,G__5514,G__5515,G__5516));
});
var G__5953__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5517 = a;
var G__5518 = b;
var G__5519 = c;
var G__5520 = d;
var G__5521 = e;
var G__5522 = f;
var G__5523 = g;
var G__5524 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__5517,G__5518,G__5519,G__5520,G__5521,G__5522,G__5523,G__5524) : self__.afn.call(null,G__5517,G__5518,G__5519,G__5520,G__5521,G__5522,G__5523,G__5524));
});
var G__5953__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5525 = a;
var G__5526 = b;
var G__5527 = c;
var G__5528 = d;
var G__5529 = e;
var G__5530 = f;
var G__5531 = g;
var G__5532 = h;
var G__5533 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__5525,G__5526,G__5527,G__5528,G__5529,G__5530,G__5531,G__5532,G__5533) : self__.afn.call(null,G__5525,G__5526,G__5527,G__5528,G__5529,G__5530,G__5531,G__5532,G__5533));
});
var G__5953__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5534 = a;
var G__5535 = b;
var G__5536 = c;
var G__5537 = d;
var G__5538 = e;
var G__5539 = f;
var G__5540 = g;
var G__5541 = h;
var G__5542 = i;
var G__5543 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__5534,G__5535,G__5536,G__5537,G__5538,G__5539,G__5540,G__5541,G__5542,G__5543) : self__.afn.call(null,G__5534,G__5535,G__5536,G__5537,G__5538,G__5539,G__5540,G__5541,G__5542,G__5543));
});
var G__5953__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5544 = a;
var G__5545 = b;
var G__5546 = c;
var G__5547 = d;
var G__5548 = e;
var G__5549 = f;
var G__5550 = g;
var G__5551 = h;
var G__5552 = i;
var G__5553 = j;
var G__5554 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__5544,G__5545,G__5546,G__5547,G__5548,G__5549,G__5550,G__5551,G__5552,G__5553,G__5554) : self__.afn.call(null,G__5544,G__5545,G__5546,G__5547,G__5548,G__5549,G__5550,G__5551,G__5552,G__5553,G__5554));
});
var G__5953__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5555 = a;
var G__5556 = b;
var G__5557 = c;
var G__5558 = d;
var G__5559 = e;
var G__5560 = f;
var G__5561 = g;
var G__5562 = h;
var G__5563 = i;
var G__5564 = j;
var G__5565 = k;
var G__5566 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__5555,G__5556,G__5557,G__5558,G__5559,G__5560,G__5561,G__5562,G__5563,G__5564,G__5565,G__5566) : self__.afn.call(null,G__5555,G__5556,G__5557,G__5558,G__5559,G__5560,G__5561,G__5562,G__5563,G__5564,G__5565,G__5566));
});
var G__5953__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5567 = a;
var G__5568 = b;
var G__5569 = c;
var G__5570 = d;
var G__5571 = e;
var G__5572 = f;
var G__5573 = g;
var G__5574 = h;
var G__5575 = i;
var G__5576 = j;
var G__5577 = k;
var G__5578 = l;
var G__5579 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__5567,G__5568,G__5569,G__5570,G__5571,G__5572,G__5573,G__5574,G__5575,G__5576,G__5577,G__5578,G__5579) : self__.afn.call(null,G__5567,G__5568,G__5569,G__5570,G__5571,G__5572,G__5573,G__5574,G__5575,G__5576,G__5577,G__5578,G__5579));
});
var G__5953__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5580 = a;
var G__5581 = b;
var G__5582 = c;
var G__5583 = d;
var G__5584 = e;
var G__5585 = f;
var G__5586 = g;
var G__5587 = h;
var G__5588 = i;
var G__5589 = j;
var G__5590 = k;
var G__5591 = l;
var G__5592 = m;
var G__5593 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__5580,G__5581,G__5582,G__5583,G__5584,G__5585,G__5586,G__5587,G__5588,G__5589,G__5590,G__5591,G__5592,G__5593) : self__.afn.call(null,G__5580,G__5581,G__5582,G__5583,G__5584,G__5585,G__5586,G__5587,G__5588,G__5589,G__5590,G__5591,G__5592,G__5593));
});
var G__5953__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5594 = a;
var G__5595 = b;
var G__5596 = c;
var G__5597 = d;
var G__5598 = e;
var G__5599 = f;
var G__5600 = g;
var G__5601 = h;
var G__5602 = i;
var G__5603 = j;
var G__5604 = k;
var G__5605 = l;
var G__5606 = m;
var G__5607 = n;
var G__5608 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__5594,G__5595,G__5596,G__5597,G__5598,G__5599,G__5600,G__5601,G__5602,G__5603,G__5604,G__5605,G__5606,G__5607,G__5608) : self__.afn.call(null,G__5594,G__5595,G__5596,G__5597,G__5598,G__5599,G__5600,G__5601,G__5602,G__5603,G__5604,G__5605,G__5606,G__5607,G__5608));
});
var G__5953__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5609 = a;
var G__5610 = b;
var G__5611 = c;
var G__5612 = d;
var G__5613 = e;
var G__5614 = f;
var G__5615 = g;
var G__5616 = h;
var G__5617 = i;
var G__5618 = j;
var G__5619 = k;
var G__5620 = l;
var G__5621 = m;
var G__5622 = n;
var G__5623 = o;
var G__5624 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__5609,G__5610,G__5611,G__5612,G__5613,G__5614,G__5615,G__5616,G__5617,G__5618,G__5619,G__5620,G__5621,G__5622,G__5623,G__5624) : self__.afn.call(null,G__5609,G__5610,G__5611,G__5612,G__5613,G__5614,G__5615,G__5616,G__5617,G__5618,G__5619,G__5620,G__5621,G__5622,G__5623,G__5624));
});
var G__5953__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5625 = a;
var G__5626 = b;
var G__5627 = c;
var G__5628 = d;
var G__5629 = e;
var G__5630 = f;
var G__5631 = g;
var G__5632 = h;
var G__5633 = i;
var G__5634 = j;
var G__5635 = k;
var G__5636 = l;
var G__5637 = m;
var G__5638 = n;
var G__5639 = o;
var G__5640 = p;
var G__5641 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__5625,G__5626,G__5627,G__5628,G__5629,G__5630,G__5631,G__5632,G__5633,G__5634,G__5635,G__5636,G__5637,G__5638,G__5639,G__5640,G__5641) : self__.afn.call(null,G__5625,G__5626,G__5627,G__5628,G__5629,G__5630,G__5631,G__5632,G__5633,G__5634,G__5635,G__5636,G__5637,G__5638,G__5639,G__5640,G__5641));
});
var G__5953__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5642 = a;
var G__5643 = b;
var G__5644 = c;
var G__5645 = d;
var G__5646 = e;
var G__5647 = f;
var G__5648 = g;
var G__5649 = h;
var G__5650 = i;
var G__5651 = j;
var G__5652 = k;
var G__5653 = l;
var G__5654 = m;
var G__5655 = n;
var G__5656 = o;
var G__5657 = p;
var G__5658 = q;
var G__5659 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__5642,G__5643,G__5644,G__5645,G__5646,G__5647,G__5648,G__5649,G__5650,G__5651,G__5652,G__5653,G__5654,G__5655,G__5656,G__5657,G__5658,G__5659) : self__.afn.call(null,G__5642,G__5643,G__5644,G__5645,G__5646,G__5647,G__5648,G__5649,G__5650,G__5651,G__5652,G__5653,G__5654,G__5655,G__5656,G__5657,G__5658,G__5659));
});
var G__5953__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5660 = a;
var G__5661 = b;
var G__5662 = c;
var G__5663 = d;
var G__5664 = e;
var G__5665 = f;
var G__5666 = g;
var G__5667 = h;
var G__5668 = i;
var G__5669 = j;
var G__5670 = k;
var G__5671 = l;
var G__5672 = m;
var G__5673 = n;
var G__5674 = o;
var G__5675 = p;
var G__5676 = q;
var G__5677 = r;
var G__5678 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__5660,G__5661,G__5662,G__5663,G__5664,G__5665,G__5666,G__5667,G__5668,G__5669,G__5670,G__5671,G__5672,G__5673,G__5674,G__5675,G__5676,G__5677,G__5678) : self__.afn.call(null,G__5660,G__5661,G__5662,G__5663,G__5664,G__5665,G__5666,G__5667,G__5668,G__5669,G__5670,G__5671,G__5672,G__5673,G__5674,G__5675,G__5676,G__5677,G__5678));
});
var G__5953__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5679 = a;
var G__5680 = b;
var G__5681 = c;
var G__5682 = d;
var G__5683 = e;
var G__5684 = f;
var G__5685 = g;
var G__5686 = h;
var G__5687 = i;
var G__5688 = j;
var G__5689 = k;
var G__5690 = l;
var G__5691 = m;
var G__5692 = n;
var G__5693 = o;
var G__5694 = p;
var G__5695 = q;
var G__5696 = r;
var G__5697 = s;
var G__5698 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__5679,G__5680,G__5681,G__5682,G__5683,G__5684,G__5685,G__5686,G__5687,G__5688,G__5689,G__5690,G__5691,G__5692,G__5693,G__5694,G__5695,G__5696,G__5697,G__5698) : self__.afn.call(null,G__5679,G__5680,G__5681,G__5682,G__5683,G__5684,G__5685,G__5686,G__5687,G__5688,G__5689,G__5690,G__5691,G__5692,G__5693,G__5694,G__5695,G__5696,G__5697,G__5698));
});
var G__5953__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__5699 = self__.afn;
var G__5700 = a;
var G__5701 = b;
var G__5702 = c;
var G__5703 = d;
var G__5704 = e;
var G__5705 = f;
var G__5706 = g;
var G__5707 = h;
var G__5708 = i;
var G__5709 = j;
var G__5710 = k;
var G__5711 = l;
var G__5712 = m;
var G__5713 = n;
var G__5714 = o;
var G__5715 = p;
var G__5716 = q;
var G__5717 = r;
var G__5718 = s;
var G__5719 = t;
var G__5720 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__5699,G__5700,G__5701,G__5702,G__5703,G__5704,G__5705,G__5706,G__5707,G__5708,G__5709,G__5710,G__5711,G__5712,G__5713,G__5714,G__5715,G__5716,G__5717,G__5718,G__5719,G__5720) : cljs.core.apply.call(null,G__5699,G__5700,G__5701,G__5702,G__5703,G__5704,G__5705,G__5706,G__5707,G__5708,G__5709,G__5710,G__5711,G__5712,G__5713,G__5714,G__5715,G__5716,G__5717,G__5718,G__5719,G__5720));
});
G__5953 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__5953__1.call(this,self__);
case 2:
return G__5953__2.call(this,self__,a);
case 3:
return G__5953__3.call(this,self__,a,b);
case 4:
return G__5953__4.call(this,self__,a,b,c);
case 5:
return G__5953__5.call(this,self__,a,b,c,d);
case 6:
return G__5953__6.call(this,self__,a,b,c,d,e);
case 7:
return G__5953__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__5953__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__5953__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__5953__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__5953__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__5953__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__5953__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__5953__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__5953__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__5953__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__5953__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__5953__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__5953__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__5953__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__5953__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__5953__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__5953.cljs$core$IFn$_invoke$arity$1 = G__5953__1;
G__5953.cljs$core$IFn$_invoke$arity$2 = G__5953__2;
G__5953.cljs$core$IFn$_invoke$arity$3 = G__5953__3;
G__5953.cljs$core$IFn$_invoke$arity$4 = G__5953__4;
G__5953.cljs$core$IFn$_invoke$arity$5 = G__5953__5;
G__5953.cljs$core$IFn$_invoke$arity$6 = G__5953__6;
G__5953.cljs$core$IFn$_invoke$arity$7 = G__5953__7;
G__5953.cljs$core$IFn$_invoke$arity$8 = G__5953__8;
G__5953.cljs$core$IFn$_invoke$arity$9 = G__5953__9;
G__5953.cljs$core$IFn$_invoke$arity$10 = G__5953__10;
G__5953.cljs$core$IFn$_invoke$arity$11 = G__5953__11;
G__5953.cljs$core$IFn$_invoke$arity$12 = G__5953__12;
G__5953.cljs$core$IFn$_invoke$arity$13 = G__5953__13;
G__5953.cljs$core$IFn$_invoke$arity$14 = G__5953__14;
G__5953.cljs$core$IFn$_invoke$arity$15 = G__5953__15;
G__5953.cljs$core$IFn$_invoke$arity$16 = G__5953__16;
G__5953.cljs$core$IFn$_invoke$arity$17 = G__5953__17;
G__5953.cljs$core$IFn$_invoke$arity$18 = G__5953__18;
G__5953.cljs$core$IFn$_invoke$arity$19 = G__5953__19;
G__5953.cljs$core$IFn$_invoke$arity$20 = G__5953__20;
G__5953.cljs$core$IFn$_invoke$arity$21 = G__5953__21;
G__5953.cljs$core$IFn$_invoke$arity$22 = G__5953__22;
return G__5953;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args5488){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args5488)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__5721 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__5721) : self__.afn.call(null,G__5721));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__5722 = a;
var G__5723 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__5722,G__5723) : self__.afn.call(null,G__5722,G__5723));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__5724 = a;
var G__5725 = b;
var G__5726 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__5724,G__5725,G__5726) : self__.afn.call(null,G__5724,G__5725,G__5726));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__5727 = a;
var G__5728 = b;
var G__5729 = c;
var G__5730 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__5727,G__5728,G__5729,G__5730) : self__.afn.call(null,G__5727,G__5728,G__5729,G__5730));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__5731 = a;
var G__5732 = b;
var G__5733 = c;
var G__5734 = d;
var G__5735 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__5731,G__5732,G__5733,G__5734,G__5735) : self__.afn.call(null,G__5731,G__5732,G__5733,G__5734,G__5735));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__5736 = a;
var G__5737 = b;
var G__5738 = c;
var G__5739 = d;
var G__5740 = e;
var G__5741 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__5736,G__5737,G__5738,G__5739,G__5740,G__5741) : self__.afn.call(null,G__5736,G__5737,G__5738,G__5739,G__5740,G__5741));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__5742 = a;
var G__5743 = b;
var G__5744 = c;
var G__5745 = d;
var G__5746 = e;
var G__5747 = f;
var G__5748 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__5742,G__5743,G__5744,G__5745,G__5746,G__5747,G__5748) : self__.afn.call(null,G__5742,G__5743,G__5744,G__5745,G__5746,G__5747,G__5748));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__5749 = a;
var G__5750 = b;
var G__5751 = c;
var G__5752 = d;
var G__5753 = e;
var G__5754 = f;
var G__5755 = g;
var G__5756 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__5749,G__5750,G__5751,G__5752,G__5753,G__5754,G__5755,G__5756) : self__.afn.call(null,G__5749,G__5750,G__5751,G__5752,G__5753,G__5754,G__5755,G__5756));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__5757 = a;
var G__5758 = b;
var G__5759 = c;
var G__5760 = d;
var G__5761 = e;
var G__5762 = f;
var G__5763 = g;
var G__5764 = h;
var G__5765 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__5757,G__5758,G__5759,G__5760,G__5761,G__5762,G__5763,G__5764,G__5765) : self__.afn.call(null,G__5757,G__5758,G__5759,G__5760,G__5761,G__5762,G__5763,G__5764,G__5765));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__5766 = a;
var G__5767 = b;
var G__5768 = c;
var G__5769 = d;
var G__5770 = e;
var G__5771 = f;
var G__5772 = g;
var G__5773 = h;
var G__5774 = i;
var G__5775 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__5766,G__5767,G__5768,G__5769,G__5770,G__5771,G__5772,G__5773,G__5774,G__5775) : self__.afn.call(null,G__5766,G__5767,G__5768,G__5769,G__5770,G__5771,G__5772,G__5773,G__5774,G__5775));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__5776 = a;
var G__5777 = b;
var G__5778 = c;
var G__5779 = d;
var G__5780 = e;
var G__5781 = f;
var G__5782 = g;
var G__5783 = h;
var G__5784 = i;
var G__5785 = j;
var G__5786 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__5776,G__5777,G__5778,G__5779,G__5780,G__5781,G__5782,G__5783,G__5784,G__5785,G__5786) : self__.afn.call(null,G__5776,G__5777,G__5778,G__5779,G__5780,G__5781,G__5782,G__5783,G__5784,G__5785,G__5786));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__5787 = a;
var G__5788 = b;
var G__5789 = c;
var G__5790 = d;
var G__5791 = e;
var G__5792 = f;
var G__5793 = g;
var G__5794 = h;
var G__5795 = i;
var G__5796 = j;
var G__5797 = k;
var G__5798 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__5787,G__5788,G__5789,G__5790,G__5791,G__5792,G__5793,G__5794,G__5795,G__5796,G__5797,G__5798) : self__.afn.call(null,G__5787,G__5788,G__5789,G__5790,G__5791,G__5792,G__5793,G__5794,G__5795,G__5796,G__5797,G__5798));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__5799 = a;
var G__5800 = b;
var G__5801 = c;
var G__5802 = d;
var G__5803 = e;
var G__5804 = f;
var G__5805 = g;
var G__5806 = h;
var G__5807 = i;
var G__5808 = j;
var G__5809 = k;
var G__5810 = l;
var G__5811 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__5799,G__5800,G__5801,G__5802,G__5803,G__5804,G__5805,G__5806,G__5807,G__5808,G__5809,G__5810,G__5811) : self__.afn.call(null,G__5799,G__5800,G__5801,G__5802,G__5803,G__5804,G__5805,G__5806,G__5807,G__5808,G__5809,G__5810,G__5811));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__5812 = a;
var G__5813 = b;
var G__5814 = c;
var G__5815 = d;
var G__5816 = e;
var G__5817 = f;
var G__5818 = g;
var G__5819 = h;
var G__5820 = i;
var G__5821 = j;
var G__5822 = k;
var G__5823 = l;
var G__5824 = m;
var G__5825 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__5812,G__5813,G__5814,G__5815,G__5816,G__5817,G__5818,G__5819,G__5820,G__5821,G__5822,G__5823,G__5824,G__5825) : self__.afn.call(null,G__5812,G__5813,G__5814,G__5815,G__5816,G__5817,G__5818,G__5819,G__5820,G__5821,G__5822,G__5823,G__5824,G__5825));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__5826 = a;
var G__5827 = b;
var G__5828 = c;
var G__5829 = d;
var G__5830 = e;
var G__5831 = f;
var G__5832 = g;
var G__5833 = h;
var G__5834 = i;
var G__5835 = j;
var G__5836 = k;
var G__5837 = l;
var G__5838 = m;
var G__5839 = n;
var G__5840 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__5826,G__5827,G__5828,G__5829,G__5830,G__5831,G__5832,G__5833,G__5834,G__5835,G__5836,G__5837,G__5838,G__5839,G__5840) : self__.afn.call(null,G__5826,G__5827,G__5828,G__5829,G__5830,G__5831,G__5832,G__5833,G__5834,G__5835,G__5836,G__5837,G__5838,G__5839,G__5840));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__5841 = a;
var G__5842 = b;
var G__5843 = c;
var G__5844 = d;
var G__5845 = e;
var G__5846 = f;
var G__5847 = g;
var G__5848 = h;
var G__5849 = i;
var G__5850 = j;
var G__5851 = k;
var G__5852 = l;
var G__5853 = m;
var G__5854 = n;
var G__5855 = o;
var G__5856 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__5841,G__5842,G__5843,G__5844,G__5845,G__5846,G__5847,G__5848,G__5849,G__5850,G__5851,G__5852,G__5853,G__5854,G__5855,G__5856) : self__.afn.call(null,G__5841,G__5842,G__5843,G__5844,G__5845,G__5846,G__5847,G__5848,G__5849,G__5850,G__5851,G__5852,G__5853,G__5854,G__5855,G__5856));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__5857 = a;
var G__5858 = b;
var G__5859 = c;
var G__5860 = d;
var G__5861 = e;
var G__5862 = f;
var G__5863 = g;
var G__5864 = h;
var G__5865 = i;
var G__5866 = j;
var G__5867 = k;
var G__5868 = l;
var G__5869 = m;
var G__5870 = n;
var G__5871 = o;
var G__5872 = p;
var G__5873 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__5857,G__5858,G__5859,G__5860,G__5861,G__5862,G__5863,G__5864,G__5865,G__5866,G__5867,G__5868,G__5869,G__5870,G__5871,G__5872,G__5873) : self__.afn.call(null,G__5857,G__5858,G__5859,G__5860,G__5861,G__5862,G__5863,G__5864,G__5865,G__5866,G__5867,G__5868,G__5869,G__5870,G__5871,G__5872,G__5873));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__5874 = a;
var G__5875 = b;
var G__5876 = c;
var G__5877 = d;
var G__5878 = e;
var G__5879 = f;
var G__5880 = g;
var G__5881 = h;
var G__5882 = i;
var G__5883 = j;
var G__5884 = k;
var G__5885 = l;
var G__5886 = m;
var G__5887 = n;
var G__5888 = o;
var G__5889 = p;
var G__5890 = q;
var G__5891 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__5874,G__5875,G__5876,G__5877,G__5878,G__5879,G__5880,G__5881,G__5882,G__5883,G__5884,G__5885,G__5886,G__5887,G__5888,G__5889,G__5890,G__5891) : self__.afn.call(null,G__5874,G__5875,G__5876,G__5877,G__5878,G__5879,G__5880,G__5881,G__5882,G__5883,G__5884,G__5885,G__5886,G__5887,G__5888,G__5889,G__5890,G__5891));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__5892 = a;
var G__5893 = b;
var G__5894 = c;
var G__5895 = d;
var G__5896 = e;
var G__5897 = f;
var G__5898 = g;
var G__5899 = h;
var G__5900 = i;
var G__5901 = j;
var G__5902 = k;
var G__5903 = l;
var G__5904 = m;
var G__5905 = n;
var G__5906 = o;
var G__5907 = p;
var G__5908 = q;
var G__5909 = r;
var G__5910 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__5892,G__5893,G__5894,G__5895,G__5896,G__5897,G__5898,G__5899,G__5900,G__5901,G__5902,G__5903,G__5904,G__5905,G__5906,G__5907,G__5908,G__5909,G__5910) : self__.afn.call(null,G__5892,G__5893,G__5894,G__5895,G__5896,G__5897,G__5898,G__5899,G__5900,G__5901,G__5902,G__5903,G__5904,G__5905,G__5906,G__5907,G__5908,G__5909,G__5910));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__5911 = a;
var G__5912 = b;
var G__5913 = c;
var G__5914 = d;
var G__5915 = e;
var G__5916 = f;
var G__5917 = g;
var G__5918 = h;
var G__5919 = i;
var G__5920 = j;
var G__5921 = k;
var G__5922 = l;
var G__5923 = m;
var G__5924 = n;
var G__5925 = o;
var G__5926 = p;
var G__5927 = q;
var G__5928 = r;
var G__5929 = s;
var G__5930 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__5911,G__5912,G__5913,G__5914,G__5915,G__5916,G__5917,G__5918,G__5919,G__5920,G__5921,G__5922,G__5923,G__5924,G__5925,G__5926,G__5927,G__5928,G__5929,G__5930) : self__.afn.call(null,G__5911,G__5912,G__5913,G__5914,G__5915,G__5916,G__5917,G__5918,G__5919,G__5920,G__5921,G__5922,G__5923,G__5924,G__5925,G__5926,G__5927,G__5928,G__5929,G__5930));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__5931 = self__.afn;
var G__5932 = a;
var G__5933 = b;
var G__5934 = c;
var G__5935 = d;
var G__5936 = e;
var G__5937 = f;
var G__5938 = g;
var G__5939 = h;
var G__5940 = i;
var G__5941 = j;
var G__5942 = k;
var G__5943 = l;
var G__5944 = m;
var G__5945 = n;
var G__5946 = o;
var G__5947 = p;
var G__5948 = q;
var G__5949 = r;
var G__5950 = s;
var G__5951 = t;
var G__5952 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__5931,G__5932,G__5933,G__5934,G__5935,G__5936,G__5937,G__5938,G__5939,G__5940,G__5941,G__5942,G__5943,G__5944,G__5945,G__5946,G__5947,G__5948,G__5949,G__5950,G__5951,G__5952) : cljs.core.apply.call(null,G__5931,G__5932,G__5933,G__5934,G__5935,G__5936,G__5937,G__5938,G__5939,G__5940,G__5941,G__5942,G__5943,G__5944,G__5945,G__5946,G__5947,G__5948,G__5949,G__5950,G__5951,G__5952));
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__5957 = o;
if(G__5957){
var bit__3808__auto__ = (G__5957.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__3808__auto__) || (G__5957.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__5957.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__5957);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__5957);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3115__auto__ = !((o == null));
if(and__3115__auto__){
var G__5961 = o;
if(G__5961){
var bit__3808__auto__ = (G__5961.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__3808__auto__) || (G__5961.cljs$core$IMeta$)){
return true;
} else {
if((!G__5961.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__5961);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__5961);
}
} else {
return and__3115__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__5964__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__5965 = ret;
var G__5966 = cljs.core.first(ks);
var G__5967 = cljs.core.next(ks);
coll = G__5965;
k = G__5966;
ks = G__5967;
continue;
} else {
return ret;
}
}
break;
}
};
var G__5964 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__5968__i = 0, G__5968__a = new Array(arguments.length -  2);
while (G__5968__i < G__5968__a.length) {G__5968__a[G__5968__i] = arguments[G__5968__i + 2]; ++G__5968__i;}
  ks = new cljs.core.IndexedSeq(G__5968__a,0);
} 
return G__5964__delegate.call(this,coll,k,ks);};
G__5964.cljs$lang$maxFixedArity = 2;
G__5964.cljs$lang$applyTo = (function (arglist__5969){
var coll = cljs.core.first(arglist__5969);
arglist__5969 = cljs.core.next(arglist__5969);
var k = cljs.core.first(arglist__5969);
var ks = cljs.core.rest(arglist__5969);
return G__5964__delegate(coll,k,ks);
});
G__5964.cljs$core$IFn$_invoke$arity$variadic = G__5964__delegate;
return G__5964;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__5970 = null;
if (arguments.length > 2) {
var G__5971__i = 0, G__5971__a = new Array(arguments.length -  2);
while (G__5971__i < G__5971__a.length) {G__5971__a[G__5971__i] = arguments[G__5971__i + 2]; ++G__5971__i;}
G__5970 = new cljs.core.IndexedSeq(G__5971__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__5970);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__5973 = x;
if(G__5973){
var bit__3808__auto__ = (G__5973.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__3808__auto__) || (G__5973.cljs$core$ICollection$)){
return true;
} else {
if((!G__5973.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__5973);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__5973);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__5975 = x;
if(G__5975){
var bit__3808__auto__ = (G__5975.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__3808__auto__) || (G__5975.cljs$core$ISet$)){
return true;
} else {
if((!G__5975.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__5975);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__5975);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__5977 = x;
if(G__5977){
var bit__3808__auto__ = (G__5977.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__3808__auto__) || (G__5977.cljs$core$IAssociative$)){
return true;
} else {
if((!G__5977.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__5977);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__5977);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__5979 = x;
if(G__5979){
var bit__3808__auto__ = (G__5979.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__3808__auto__) || (G__5979.cljs$core$ISequential$)){
return true;
} else {
if((!G__5979.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__5979);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__5979);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__5981 = x;
if(G__5981){
var bit__3808__auto__ = (G__5981.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__3808__auto__) || (G__5981.cljs$core$ISorted$)){
return true;
} else {
if((!G__5981.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__5981);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__5981);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__5983 = x;
if(G__5983){
var bit__3808__auto__ = (G__5983.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__3808__auto__) || (G__5983.cljs$core$IReduce$)){
return true;
} else {
if((!G__5983.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__5983);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__5983);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__5985 = x;
if(G__5985){
var bit__3808__auto__ = (G__5985.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__3808__auto__) || (G__5985.cljs$core$IMap$)){
return true;
} else {
if((!G__5985.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__5985);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__5985);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__5987 = x;
if(G__5987){
var bit__3808__auto__ = (G__5987.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__3808__auto__) || (G__5987.cljs$core$IVector$)){
return true;
} else {
if((!G__5987.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__5987);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__5987);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__5989 = x;
if(G__5989){
var bit__3801__auto__ = (G__5989.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__3801__auto__) || (G__5989.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj5995 = {};
return obj5995;
});
var js_obj__1 = (function() { 
var G__5998__delegate = function (keyvals){
var G__5996 = goog.object.create;
var G__5997 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__5996,G__5997) : cljs.core.apply.call(null,G__5996,G__5997));
};
var G__5998 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__5999__i = 0, G__5999__a = new Array(arguments.length -  0);
while (G__5999__i < G__5999__a.length) {G__5999__a[G__5999__i] = arguments[G__5999__i + 0]; ++G__5999__i;}
  keyvals = new cljs.core.IndexedSeq(G__5999__a,0);
} 
return G__5998__delegate.call(this,keyvals);};
G__5998.cljs$lang$maxFixedArity = 0;
G__5998.cljs$lang$applyTo = (function (arglist__6000){
var keyvals = cljs.core.seq(arglist__6000);
return G__5998__delegate(keyvals);
});
G__5998.cljs$core$IFn$_invoke$arity$variadic = G__5998__delegate;
return G__5998;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__6001 = null;
if (arguments.length > 0) {
var G__6002__i = 0, G__6002__a = new Array(arguments.length -  0);
while (G__6002__i < G__6002__a.length) {G__6002__a[G__6002__i] = arguments[G__6002__i + 0]; ++G__6002__i;}
G__6001 = new cljs.core.IndexedSeq(G__6002__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__6001);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__6005_6007 = obj;
var G__6006_6008 = ((function (G__6005_6007,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__6005_6007,keys))
;
goog.object.forEach(G__6005_6007,G__6006_6008);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__6009 = (i__$1 + (1));
var G__6010 = (j__$1 + (1));
var G__6011 = (len__$1 - (1));
i__$1 = G__6009;
j__$1 = G__6010;
len__$1 = G__6011;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__6012 = (i__$1 - (1));
var G__6013 = (j__$1 - (1));
var G__6014 = (len__$1 - (1));
i__$1 = G__6012;
j__$1 = G__6013;
len__$1 = G__6014;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj6016 = {};
return obj6016;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__6018 = s;
if(G__6018){
var bit__3808__auto__ = (G__6018.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__3808__auto__) || (G__6018.cljs$core$ISeq$)){
return true;
} else {
if((!G__6018.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6018);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__6018);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__6020 = s;
if(G__6020){
var bit__3808__auto__ = (G__6020.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__3808__auto__) || (G__6020.cljs$core$ISeqable$)){
return true;
} else {
if((!G__6020.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__6020);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__6020);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3127__auto__ = cljs.core.fn_QMARK_(f);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var G__6024 = f;
if(G__6024){
var bit__3808__auto__ = (G__6024.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__3808__auto__) || (G__6024.cljs$core$IFn$)){
return true;
} else {
if((!G__6024.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__6024);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__6024);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__6037 = n;
return isNaN(G__6037);
})())) && (!((n === Infinity))) && (((function (){var G__6038 = n;
return parseFloat(G__6038);
})() === (function (){var G__6039 = n;
var G__6040 = (10);
return parseInt(G__6039,G__6040);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__6041__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__6042 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__6043 = etc;
s = G__6042;
xs = G__6043;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__6041 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6044__i = 0, G__6044__a = new Array(arguments.length -  2);
while (G__6044__i < G__6044__a.length) {G__6044__a[G__6044__i] = arguments[G__6044__i + 2]; ++G__6044__i;}
  more = new cljs.core.IndexedSeq(G__6044__a,0);
} 
return G__6041__delegate.call(this,x,y,more);};
G__6041.cljs$lang$maxFixedArity = 2;
G__6041.cljs$lang$applyTo = (function (arglist__6045){
var x = cljs.core.first(arglist__6045);
arglist__6045 = cljs.core.next(arglist__6045);
var y = cljs.core.first(arglist__6045);
var more = cljs.core.rest(arglist__6045);
return G__6041__delegate(x,y,more);
});
G__6041.cljs$core$IFn$_invoke$arity$variadic = G__6041__delegate;
return G__6041;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__6046 = null;
if (arguments.length > 2) {
var G__6047__i = 0, G__6047__a = new Array(arguments.length -  2);
while (G__6047__i < G__6047__a.length) {G__6047__a[G__6047__i] = arguments[G__6047__i + 2]; ++G__6047__i;}
G__6046 = new cljs.core.IndexedSeq(G__6047__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6046);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__6051 = x;
if(G__6051){
var bit__3801__auto__ = (G__6051.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__3801__auto__) || (G__6051.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__6052 = x;
var G__6053 = y;
return goog.array.defaultCompare(G__6052,G__6053);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__6058 = xs;
var G__6059 = ys;
var G__6060 = len;
var G__6061 = (n + (1));
xs = G__6058;
ys = G__6059;
len = G__6060;
n = G__6061;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__6066 = x;
var G__6067 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6066,G__6067) : f.call(null,G__6066,G__6067));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__6068 = y;
var G__6069 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6068,G__6069) : f.call(null,G__6068,G__6069));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__6075 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__6075) : cljs.core.to_array.call(null,G__6075));
})();
var G__6076_6078 = a;
var G__6077_6079 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__6076_6078,G__6077_6079);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__6085 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__6085) : keyfn.call(null,G__6085));
})(),(function (){var G__6086 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__6086) : keyfn.call(null,G__6086));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4423__auto__ = cljs.core.seq(coll);
if(temp__4423__auto__){
var s = temp__4423__auto__;
var G__6092 = f;
var G__6093 = cljs.core.first(s);
var G__6094 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__6092,G__6093,G__6094) : cljs.core.reduce.call(null,G__6092,G__6093,G__6094));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__6095 = val__$1;
var G__6096 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6095,G__6096) : f.call(null,G__6095,G__6096));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__6097 = nval;
var G__6098 = cljs.core.next(coll__$1);
val__$1 = G__6097;
coll__$1 = G__6098;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__6102 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__6102) : cljs.core.to_array.call(null,G__6102));
})();
var G__6103_6105 = a;
goog.array.shuffle(G__6103_6105);

var G__6104 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__6104) : cljs.core.vec.call(null,G__6104));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__6108 = coll;
if(G__6108){
var bit__3801__auto__ = (G__6108.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__3801__auto__) || (G__6108.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__6109 = coll;
if(G__6109){
var bit__3801__auto__ = (G__6109.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__3801__auto__) || (G__6109.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__6118 = null;
var G__6118__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__6118__1 = (function (x){
var G__6115 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__6115) : cf.call(null,G__6115));
});
var G__6118__2 = (function (x,y){
var G__6116 = x;
var G__6117 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6116,G__6117) : f.call(null,G__6116,G__6117));
});
G__6118 = function(x,y){
switch(arguments.length){
case 0:
return G__6118__0.call(this);
case 1:
return G__6118__1.call(this,x);
case 2:
return G__6118__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6118.cljs$core$IFn$_invoke$arity$0 = G__6118__0;
G__6118.cljs$core$IFn$_invoke$arity$1 = G__6118__1;
G__6118.cljs$core$IFn$_invoke$arity$2 = G__6118__2;
return G__6118;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__6125 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__6125) : xform.call(null,G__6125));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__6126 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__6126) : f__$1.call(null,G__6126));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__6127__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__6127 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6128__i = 0, G__6128__a = new Array(arguments.length -  2);
while (G__6128__i < G__6128__a.length) {G__6128__a[G__6128__i] = arguments[G__6128__i + 2]; ++G__6128__i;}
  more = new cljs.core.IndexedSeq(G__6128__a,0);
} 
return G__6127__delegate.call(this,x,y,more);};
G__6127.cljs$lang$maxFixedArity = 2;
G__6127.cljs$lang$applyTo = (function (arglist__6129){
var x = cljs.core.first(arglist__6129);
arglist__6129 = cljs.core.next(arglist__6129);
var y = cljs.core.first(arglist__6129);
var more = cljs.core.rest(arglist__6129);
return G__6127__delegate(x,y,more);
});
G__6127.cljs$core$IFn$_invoke$arity$variadic = G__6127__delegate;
return G__6127;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__6130 = null;
if (arguments.length > 2) {
var G__6131__i = 0, G__6131__a = new Array(arguments.length -  2);
while (G__6131__i < G__6131__a.length) {G__6131__a[G__6131__i] = arguments[G__6131__i + 2]; ++G__6131__i;}
G__6130 = new cljs.core.IndexedSeq(G__6131__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6130);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__6132__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__6132 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6133__i = 0, G__6133__a = new Array(arguments.length -  2);
while (G__6133__i < G__6133__a.length) {G__6133__a[G__6133__i] = arguments[G__6133__i + 2]; ++G__6133__i;}
  more = new cljs.core.IndexedSeq(G__6133__a,0);
} 
return G__6132__delegate.call(this,x,y,more);};
G__6132.cljs$lang$maxFixedArity = 2;
G__6132.cljs$lang$applyTo = (function (arglist__6134){
var x = cljs.core.first(arglist__6134);
arglist__6134 = cljs.core.next(arglist__6134);
var y = cljs.core.first(arglist__6134);
var more = cljs.core.rest(arglist__6134);
return G__6132__delegate(x,y,more);
});
G__6132.cljs$core$IFn$_invoke$arity$variadic = G__6132__delegate;
return G__6132;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__6135 = null;
if (arguments.length > 2) {
var G__6136__i = 0, G__6136__a = new Array(arguments.length -  2);
while (G__6136__i < G__6136__a.length) {G__6136__a[G__6136__i] = arguments[G__6136__i + 2]; ++G__6136__i;}
G__6135 = new cljs.core.IndexedSeq(G__6136__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6135);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__6137__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__6137 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6138__i = 0, G__6138__a = new Array(arguments.length -  2);
while (G__6138__i < G__6138__a.length) {G__6138__a[G__6138__i] = arguments[G__6138__i + 2]; ++G__6138__i;}
  more = new cljs.core.IndexedSeq(G__6138__a,0);
} 
return G__6137__delegate.call(this,x,y,more);};
G__6137.cljs$lang$maxFixedArity = 2;
G__6137.cljs$lang$applyTo = (function (arglist__6139){
var x = cljs.core.first(arglist__6139);
arglist__6139 = cljs.core.next(arglist__6139);
var y = cljs.core.first(arglist__6139);
var more = cljs.core.rest(arglist__6139);
return G__6137__delegate(x,y,more);
});
G__6137.cljs$core$IFn$_invoke$arity$variadic = G__6137__delegate;
return G__6137;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__6140 = null;
if (arguments.length > 2) {
var G__6141__i = 0, G__6141__a = new Array(arguments.length -  2);
while (G__6141__i < G__6141__a.length) {G__6141__a[G__6141__i] = arguments[G__6141__i + 2]; ++G__6141__i;}
G__6140 = new cljs.core.IndexedSeq(G__6141__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6140);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__6146__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__6146 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6147__i = 0, G__6147__a = new Array(arguments.length -  2);
while (G__6147__i < G__6147__a.length) {G__6147__a[G__6147__i] = arguments[G__6147__i + 2]; ++G__6147__i;}
  more = new cljs.core.IndexedSeq(G__6147__a,0);
} 
return G__6146__delegate.call(this,x,y,more);};
G__6146.cljs$lang$maxFixedArity = 2;
G__6146.cljs$lang$applyTo = (function (arglist__6148){
var x = cljs.core.first(arglist__6148);
arglist__6148 = cljs.core.next(arglist__6148);
var y = cljs.core.first(arglist__6148);
var more = cljs.core.rest(arglist__6148);
return G__6146__delegate(x,y,more);
});
G__6146.cljs$core$IFn$_invoke$arity$variadic = G__6146__delegate;
return G__6146;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__6149 = null;
if (arguments.length > 2) {
var G__6150__i = 0, G__6150__a = new Array(arguments.length -  2);
while (G__6150__i < G__6150__a.length) {G__6150__a[G__6150__i] = arguments[G__6150__i + 2]; ++G__6150__i;}
G__6149 = new cljs.core.IndexedSeq(G__6150__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6149);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__6151__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__6152 = y;
var G__6153 = cljs.core.first(more);
var G__6154 = cljs.core.next(more);
x = G__6152;
y = G__6153;
more = G__6154;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6151 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6155__i = 0, G__6155__a = new Array(arguments.length -  2);
while (G__6155__i < G__6155__a.length) {G__6155__a[G__6155__i] = arguments[G__6155__i + 2]; ++G__6155__i;}
  more = new cljs.core.IndexedSeq(G__6155__a,0);
} 
return G__6151__delegate.call(this,x,y,more);};
G__6151.cljs$lang$maxFixedArity = 2;
G__6151.cljs$lang$applyTo = (function (arglist__6156){
var x = cljs.core.first(arglist__6156);
arglist__6156 = cljs.core.next(arglist__6156);
var y = cljs.core.first(arglist__6156);
var more = cljs.core.rest(arglist__6156);
return G__6151__delegate(x,y,more);
});
G__6151.cljs$core$IFn$_invoke$arity$variadic = G__6151__delegate;
return G__6151;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__6157 = null;
if (arguments.length > 2) {
var G__6158__i = 0, G__6158__a = new Array(arguments.length -  2);
while (G__6158__i < G__6158__a.length) {G__6158__a[G__6158__i] = arguments[G__6158__i + 2]; ++G__6158__i;}
G__6157 = new cljs.core.IndexedSeq(G__6158__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6157);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__6159__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__6160 = y;
var G__6161 = cljs.core.first(more);
var G__6162 = cljs.core.next(more);
x = G__6160;
y = G__6161;
more = G__6162;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6159 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6163__i = 0, G__6163__a = new Array(arguments.length -  2);
while (G__6163__i < G__6163__a.length) {G__6163__a[G__6163__i] = arguments[G__6163__i + 2]; ++G__6163__i;}
  more = new cljs.core.IndexedSeq(G__6163__a,0);
} 
return G__6159__delegate.call(this,x,y,more);};
G__6159.cljs$lang$maxFixedArity = 2;
G__6159.cljs$lang$applyTo = (function (arglist__6164){
var x = cljs.core.first(arglist__6164);
arglist__6164 = cljs.core.next(arglist__6164);
var y = cljs.core.first(arglist__6164);
var more = cljs.core.rest(arglist__6164);
return G__6159__delegate(x,y,more);
});
G__6159.cljs$core$IFn$_invoke$arity$variadic = G__6159__delegate;
return G__6159;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__6165 = null;
if (arguments.length > 2) {
var G__6166__i = 0, G__6166__a = new Array(arguments.length -  2);
while (G__6166__i < G__6166__a.length) {G__6166__a[G__6166__i] = arguments[G__6166__i + 2]; ++G__6166__i;}
G__6165 = new cljs.core.IndexedSeq(G__6166__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6165);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__6167__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__6168 = y;
var G__6169 = cljs.core.first(more);
var G__6170 = cljs.core.next(more);
x = G__6168;
y = G__6169;
more = G__6170;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6167 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6171__i = 0, G__6171__a = new Array(arguments.length -  2);
while (G__6171__i < G__6171__a.length) {G__6171__a[G__6171__i] = arguments[G__6171__i + 2]; ++G__6171__i;}
  more = new cljs.core.IndexedSeq(G__6171__a,0);
} 
return G__6167__delegate.call(this,x,y,more);};
G__6167.cljs$lang$maxFixedArity = 2;
G__6167.cljs$lang$applyTo = (function (arglist__6172){
var x = cljs.core.first(arglist__6172);
arglist__6172 = cljs.core.next(arglist__6172);
var y = cljs.core.first(arglist__6172);
var more = cljs.core.rest(arglist__6172);
return G__6167__delegate(x,y,more);
});
G__6167.cljs$core$IFn$_invoke$arity$variadic = G__6167__delegate;
return G__6167;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__6173 = null;
if (arguments.length > 2) {
var G__6174__i = 0, G__6174__a = new Array(arguments.length -  2);
while (G__6174__i < G__6174__a.length) {G__6174__a[G__6174__i] = arguments[G__6174__i + 2]; ++G__6174__i;}
G__6173 = new cljs.core.IndexedSeq(G__6174__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6173);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__6175__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__6176 = y;
var G__6177 = cljs.core.first(more);
var G__6178 = cljs.core.next(more);
x = G__6176;
y = G__6177;
more = G__6178;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6175 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6179__i = 0, G__6179__a = new Array(arguments.length -  2);
while (G__6179__i < G__6179__a.length) {G__6179__a[G__6179__i] = arguments[G__6179__i + 2]; ++G__6179__i;}
  more = new cljs.core.IndexedSeq(G__6179__a,0);
} 
return G__6175__delegate.call(this,x,y,more);};
G__6175.cljs$lang$maxFixedArity = 2;
G__6175.cljs$lang$applyTo = (function (arglist__6180){
var x = cljs.core.first(arglist__6180);
arglist__6180 = cljs.core.next(arglist__6180);
var y = cljs.core.first(arglist__6180);
var more = cljs.core.rest(arglist__6180);
return G__6175__delegate(x,y,more);
});
G__6175.cljs$core$IFn$_invoke$arity$variadic = G__6175__delegate;
return G__6175;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__6181 = null;
if (arguments.length > 2) {
var G__6182__i = 0, G__6182__a = new Array(arguments.length -  2);
while (G__6182__i < G__6182__a.length) {G__6182__a[G__6182__i] = arguments[G__6182__i + 2]; ++G__6182__i;}
G__6181 = new cljs.core.IndexedSeq(G__6182__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6181);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__3444__auto__ = x;
var y__3445__auto__ = y;
return ((x__3444__auto__ > y__3445__auto__) ? x__3444__auto__ : y__3445__auto__);
});
var max__3 = (function() { 
var G__6183__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__3444__auto__ = x;
var y__3445__auto__ = y;
return ((x__3444__auto__ > y__3445__auto__) ? x__3444__auto__ : y__3445__auto__);
})(),more);
};
var G__6183 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6184__i = 0, G__6184__a = new Array(arguments.length -  2);
while (G__6184__i < G__6184__a.length) {G__6184__a[G__6184__i] = arguments[G__6184__i + 2]; ++G__6184__i;}
  more = new cljs.core.IndexedSeq(G__6184__a,0);
} 
return G__6183__delegate.call(this,x,y,more);};
G__6183.cljs$lang$maxFixedArity = 2;
G__6183.cljs$lang$applyTo = (function (arglist__6185){
var x = cljs.core.first(arglist__6185);
arglist__6185 = cljs.core.next(arglist__6185);
var y = cljs.core.first(arglist__6185);
var more = cljs.core.rest(arglist__6185);
return G__6183__delegate(x,y,more);
});
G__6183.cljs$core$IFn$_invoke$arity$variadic = G__6183__delegate;
return G__6183;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__6186 = null;
if (arguments.length > 2) {
var G__6187__i = 0, G__6187__a = new Array(arguments.length -  2);
while (G__6187__i < G__6187__a.length) {G__6187__a[G__6187__i] = arguments[G__6187__i + 2]; ++G__6187__i;}
G__6186 = new cljs.core.IndexedSeq(G__6187__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6186);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__3451__auto__ = x;
var y__3452__auto__ = y;
return ((x__3451__auto__ < y__3452__auto__) ? x__3451__auto__ : y__3452__auto__);
});
var min__3 = (function() { 
var G__6188__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__3451__auto__ = x;
var y__3452__auto__ = y;
return ((x__3451__auto__ < y__3452__auto__) ? x__3451__auto__ : y__3452__auto__);
})(),more);
};
var G__6188 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6189__i = 0, G__6189__a = new Array(arguments.length -  2);
while (G__6189__i < G__6189__a.length) {G__6189__a[G__6189__i] = arguments[G__6189__i + 2]; ++G__6189__i;}
  more = new cljs.core.IndexedSeq(G__6189__a,0);
} 
return G__6188__delegate.call(this,x,y,more);};
G__6188.cljs$lang$maxFixedArity = 2;
G__6188.cljs$lang$applyTo = (function (arglist__6190){
var x = cljs.core.first(arglist__6190);
arglist__6190 = cljs.core.next(arglist__6190);
var y = cljs.core.first(arglist__6190);
var more = cljs.core.rest(arglist__6190);
return G__6188__delegate(x,y,more);
});
G__6188.cljs$core$IFn$_invoke$arity$variadic = G__6188__delegate;
return G__6188;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__6191 = null;
if (arguments.length > 2) {
var G__6192__i = 0, G__6192__a = new Array(arguments.length -  2);
while (G__6192__i < G__6192__a.length) {G__6192__a[G__6192__i] = arguments[G__6192__i + 2]; ++G__6192__i;}
G__6191 = new cljs.core.IndexedSeq(G__6192__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6191);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__6193__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__6193 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6194__i = 0, G__6194__a = new Array(arguments.length -  2);
while (G__6194__i < G__6194__a.length) {G__6194__a[G__6194__i] = arguments[G__6194__i + 2]; ++G__6194__i;}
  more = new cljs.core.IndexedSeq(G__6194__a,0);
} 
return G__6193__delegate.call(this,x,y,more);};
G__6193.cljs$lang$maxFixedArity = 2;
G__6193.cljs$lang$applyTo = (function (arglist__6195){
var x = cljs.core.first(arglist__6195);
arglist__6195 = cljs.core.next(arglist__6195);
var y = cljs.core.first(arglist__6195);
var more = cljs.core.rest(arglist__6195);
return G__6193__delegate(x,y,more);
});
G__6193.cljs$core$IFn$_invoke$arity$variadic = G__6193__delegate;
return G__6193;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__6196 = null;
if (arguments.length > 2) {
var G__6197__i = 0, G__6197__a = new Array(arguments.length -  2);
while (G__6197__i < G__6197__a.length) {G__6197__a[G__6197__i] = arguments[G__6197__i + 2]; ++G__6197__i;}
G__6196 = new cljs.core.IndexedSeq(G__6197__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6196);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__6198__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__6198 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6199__i = 0, G__6199__a = new Array(arguments.length -  2);
while (G__6199__i < G__6199__a.length) {G__6199__a[G__6199__i] = arguments[G__6199__i + 2]; ++G__6199__i;}
  more = new cljs.core.IndexedSeq(G__6199__a,0);
} 
return G__6198__delegate.call(this,x,y,more);};
G__6198.cljs$lang$maxFixedArity = 2;
G__6198.cljs$lang$applyTo = (function (arglist__6200){
var x = cljs.core.first(arglist__6200);
arglist__6200 = cljs.core.next(arglist__6200);
var y = cljs.core.first(arglist__6200);
var more = cljs.core.rest(arglist__6200);
return G__6198__delegate(x,y,more);
});
G__6198.cljs$core$IFn$_invoke$arity$variadic = G__6198__delegate;
return G__6198;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__6201 = null;
if (arguments.length > 2) {
var G__6202__i = 0, G__6202__a = new Array(arguments.length -  2);
while (G__6202__i < G__6202__a.length) {G__6202__a[G__6202__i] = arguments[G__6202__i + 2]; ++G__6202__i;}
G__6201 = new cljs.core.IndexedSeq(G__6202__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6201);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__6207__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__6207 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6208__i = 0, G__6208__a = new Array(arguments.length -  2);
while (G__6208__i < G__6208__a.length) {G__6208__a[G__6208__i] = arguments[G__6208__i + 2]; ++G__6208__i;}
  more = new cljs.core.IndexedSeq(G__6208__a,0);
} 
return G__6207__delegate.call(this,x,y,more);};
G__6207.cljs$lang$maxFixedArity = 2;
G__6207.cljs$lang$applyTo = (function (arglist__6209){
var x = cljs.core.first(arglist__6209);
arglist__6209 = cljs.core.next(arglist__6209);
var y = cljs.core.first(arglist__6209);
var more = cljs.core.rest(arglist__6209);
return G__6207__delegate(x,y,more);
});
G__6207.cljs$core$IFn$_invoke$arity$variadic = G__6207__delegate;
return G__6207;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__6210 = null;
if (arguments.length > 2) {
var G__6211__i = 0, G__6211__a = new Array(arguments.length -  2);
while (G__6211__i < G__6211__a.length) {G__6211__a[G__6211__i] = arguments[G__6211__i + 2]; ++G__6211__i;}
G__6210 = new cljs.core.IndexedSeq(G__6211__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6210);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__6212__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__6212 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6213__i = 0, G__6213__a = new Array(arguments.length -  2);
while (G__6213__i < G__6213__a.length) {G__6213__a[G__6213__i] = arguments[G__6213__i + 2]; ++G__6213__i;}
  more = new cljs.core.IndexedSeq(G__6213__a,0);
} 
return G__6212__delegate.call(this,x,y,more);};
G__6212.cljs$lang$maxFixedArity = 2;
G__6212.cljs$lang$applyTo = (function (arglist__6214){
var x = cljs.core.first(arglist__6214);
arglist__6214 = cljs.core.next(arglist__6214);
var y = cljs.core.first(arglist__6214);
var more = cljs.core.rest(arglist__6214);
return G__6212__delegate(x,y,more);
});
G__6212.cljs$core$IFn$_invoke$arity$variadic = G__6212__delegate;
return G__6212;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__6215 = null;
if (arguments.length > 2) {
var G__6216__i = 0, G__6216__a = new Array(arguments.length -  2);
while (G__6216__i < G__6216__a.length) {G__6216__a[G__6216__i] = arguments[G__6216__i + 2]; ++G__6216__i;}
G__6215 = new cljs.core.IndexedSeq(G__6216__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6215);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__6217__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__6217 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6218__i = 0, G__6218__a = new Array(arguments.length -  2);
while (G__6218__i < G__6218__a.length) {G__6218__a[G__6218__i] = arguments[G__6218__i + 2]; ++G__6218__i;}
  more = new cljs.core.IndexedSeq(G__6218__a,0);
} 
return G__6217__delegate.call(this,x,y,more);};
G__6217.cljs$lang$maxFixedArity = 2;
G__6217.cljs$lang$applyTo = (function (arglist__6219){
var x = cljs.core.first(arglist__6219);
arglist__6219 = cljs.core.next(arglist__6219);
var y = cljs.core.first(arglist__6219);
var more = cljs.core.rest(arglist__6219);
return G__6217__delegate(x,y,more);
});
G__6217.cljs$core$IFn$_invoke$arity$variadic = G__6217__delegate;
return G__6217;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__6220 = null;
if (arguments.length > 2) {
var G__6221__i = 0, G__6221__a = new Array(arguments.length -  2);
while (G__6221__i < G__6221__a.length) {G__6221__a[G__6221__i] = arguments[G__6221__i + 2]; ++G__6221__i;}
G__6220 = new cljs.core.IndexedSeq(G__6221__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6220);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__6224 = x;
var G__6225 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__6224,G__6225) : cljs.core.mod.call(null,G__6224,G__6225));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__6226__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__6226 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6227__i = 0, G__6227__a = new Array(arguments.length -  2);
while (G__6227__i < G__6227__a.length) {G__6227__a[G__6227__i] = arguments[G__6227__i + 2]; ++G__6227__i;}
  more = new cljs.core.IndexedSeq(G__6227__a,0);
} 
return G__6226__delegate.call(this,x,y,more);};
G__6226.cljs$lang$maxFixedArity = 2;
G__6226.cljs$lang$applyTo = (function (arglist__6228){
var x = cljs.core.first(arglist__6228);
arglist__6228 = cljs.core.next(arglist__6228);
var y = cljs.core.first(arglist__6228);
var more = cljs.core.rest(arglist__6228);
return G__6226__delegate(x,y,more);
});
G__6226.cljs$core$IFn$_invoke$arity$variadic = G__6226__delegate;
return G__6226;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__6229 = null;
if (arguments.length > 2) {
var G__6230__i = 0, G__6230__a = new Array(arguments.length -  2);
while (G__6230__i < G__6230__a.length) {G__6230__a[G__6230__i] = arguments[G__6230__i + 2]; ++G__6230__i;}
G__6229 = new cljs.core.IndexedSeq(G__6230__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6229);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__6231__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__6231 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6232__i = 0, G__6232__a = new Array(arguments.length -  2);
while (G__6232__i < G__6232__a.length) {G__6232__a[G__6232__i] = arguments[G__6232__i + 2]; ++G__6232__i;}
  more = new cljs.core.IndexedSeq(G__6232__a,0);
} 
return G__6231__delegate.call(this,x,y,more);};
G__6231.cljs$lang$maxFixedArity = 2;
G__6231.cljs$lang$applyTo = (function (arglist__6233){
var x = cljs.core.first(arglist__6233);
arglist__6233 = cljs.core.next(arglist__6233);
var y = cljs.core.first(arglist__6233);
var more = cljs.core.rest(arglist__6233);
return G__6231__delegate(x,y,more);
});
G__6231.cljs$core$IFn$_invoke$arity$variadic = G__6231__delegate;
return G__6231;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__6234 = null;
if (arguments.length > 2) {
var G__6235__i = 0, G__6235__a = new Array(arguments.length -  2);
while (G__6235__i < G__6235__a.length) {G__6235__a[G__6235__i] = arguments[G__6235__i + 2]; ++G__6235__i;}
G__6234 = new cljs.core.IndexedSeq(G__6235__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6234);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__6238 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__6238) : Math.floor.call(null,G__6238));
} else {
var G__6239 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__6239) : Math.ceil.call(null,G__6239));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__6240__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__6240 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6241__i = 0, G__6241__a = new Array(arguments.length -  2);
while (G__6241__i < G__6241__a.length) {G__6241__a[G__6241__i] = arguments[G__6241__i + 2]; ++G__6241__i;}
  more = new cljs.core.IndexedSeq(G__6241__a,0);
} 
return G__6240__delegate.call(this,x,y,more);};
G__6240.cljs$lang$maxFixedArity = 2;
G__6240.cljs$lang$applyTo = (function (arglist__6242){
var x = cljs.core.first(arglist__6242);
arglist__6242 = cljs.core.next(arglist__6242);
var y = cljs.core.first(arglist__6242);
var more = cljs.core.rest(arglist__6242);
return G__6240__delegate(x,y,more);
});
G__6240.cljs$core$IFn$_invoke$arity$variadic = G__6240__delegate;
return G__6240;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__6243 = null;
if (arguments.length > 2) {
var G__6244__i = 0, G__6244__a = new Array(arguments.length -  2);
while (G__6244__i < G__6244__a.length) {G__6244__a[G__6244__i] = arguments[G__6244__i + 2]; ++G__6244__i;}
G__6243 = new cljs.core.IndexedSeq(G__6244__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6243);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__6245__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__6245 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6246__i = 0, G__6246__a = new Array(arguments.length -  2);
while (G__6246__i < G__6246__a.length) {G__6246__a[G__6246__i] = arguments[G__6246__i + 2]; ++G__6246__i;}
  more = new cljs.core.IndexedSeq(G__6246__a,0);
} 
return G__6245__delegate.call(this,x,y,more);};
G__6245.cljs$lang$maxFixedArity = 2;
G__6245.cljs$lang$applyTo = (function (arglist__6247){
var x = cljs.core.first(arglist__6247);
arglist__6247 = cljs.core.next(arglist__6247);
var y = cljs.core.first(arglist__6247);
var more = cljs.core.rest(arglist__6247);
return G__6245__delegate(x,y,more);
});
G__6245.cljs$core$IFn$_invoke$arity$variadic = G__6245__delegate;
return G__6245;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__6248 = null;
if (arguments.length > 2) {
var G__6249__i = 0, G__6249__a = new Array(arguments.length -  2);
while (G__6249__i < G__6249__a.length) {G__6249__a[G__6249__i] = arguments[G__6249__i + 2]; ++G__6249__i;}
G__6248 = new cljs.core.IndexedSeq(G__6249__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6248);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__6250__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__6250 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6251__i = 0, G__6251__a = new Array(arguments.length -  2);
while (G__6251__i < G__6251__a.length) {G__6251__a[G__6251__i] = arguments[G__6251__i + 2]; ++G__6251__i;}
  more = new cljs.core.IndexedSeq(G__6251__a,0);
} 
return G__6250__delegate.call(this,x,y,more);};
G__6250.cljs$lang$maxFixedArity = 2;
G__6250.cljs$lang$applyTo = (function (arglist__6252){
var x = cljs.core.first(arglist__6252);
arglist__6252 = cljs.core.next(arglist__6252);
var y = cljs.core.first(arglist__6252);
var more = cljs.core.rest(arglist__6252);
return G__6250__delegate(x,y,more);
});
G__6250.cljs$core$IFn$_invoke$arity$variadic = G__6250__delegate;
return G__6250;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__6253 = null;
if (arguments.length > 2) {
var G__6254__i = 0, G__6254__a = new Array(arguments.length -  2);
while (G__6254__i < G__6254__a.length) {G__6254__a[G__6254__i] = arguments[G__6254__i + 2]; ++G__6254__i;}
G__6253 = new cljs.core.IndexedSeq(G__6254__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6253);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__6255__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__6255 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6256__i = 0, G__6256__a = new Array(arguments.length -  2);
while (G__6256__i < G__6256__a.length) {G__6256__a[G__6256__i] = arguments[G__6256__i + 2]; ++G__6256__i;}
  more = new cljs.core.IndexedSeq(G__6256__a,0);
} 
return G__6255__delegate.call(this,x,y,more);};
G__6255.cljs$lang$maxFixedArity = 2;
G__6255.cljs$lang$applyTo = (function (arglist__6257){
var x = cljs.core.first(arglist__6257);
arglist__6257 = cljs.core.next(arglist__6257);
var y = cljs.core.first(arglist__6257);
var more = cljs.core.rest(arglist__6257);
return G__6255__delegate(x,y,more);
});
G__6255.cljs$core$IFn$_invoke$arity$variadic = G__6255__delegate;
return G__6255;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__6258 = null;
if (arguments.length > 2) {
var G__6259__i = 0, G__6259__a = new Array(arguments.length -  2);
while (G__6259__i < G__6259__a.length) {G__6259__a[G__6259__i] = arguments[G__6259__i + 2]; ++G__6259__i;}
G__6258 = new cljs.core.IndexedSeq(G__6259__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6258);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__6264__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__6265 = y;
var G__6266 = cljs.core.first(more);
var G__6267 = cljs.core.next(more);
x = G__6265;
y = G__6266;
more = G__6267;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__6264 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6268__i = 0, G__6268__a = new Array(arguments.length -  2);
while (G__6268__i < G__6268__a.length) {G__6268__a[G__6268__i] = arguments[G__6268__i + 2]; ++G__6268__i;}
  more = new cljs.core.IndexedSeq(G__6268__a,0);
} 
return G__6264__delegate.call(this,x,y,more);};
G__6264.cljs$lang$maxFixedArity = 2;
G__6264.cljs$lang$applyTo = (function (arglist__6269){
var x = cljs.core.first(arglist__6269);
arglist__6269 = cljs.core.next(arglist__6269);
var y = cljs.core.first(arglist__6269);
var more = cljs.core.rest(arglist__6269);
return G__6264__delegate(x,y,more);
});
G__6264.cljs$core$IFn$_invoke$arity$variadic = G__6264__delegate;
return G__6264;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__6270 = null;
if (arguments.length > 2) {
var G__6271__i = 0, G__6271__a = new Array(arguments.length -  2);
while (G__6271__i < G__6271__a.length) {G__6271__a[G__6271__i] = arguments[G__6271__i + 2]; ++G__6271__i;}
G__6270 = new cljs.core.IndexedSeq(G__6271__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6270);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__6272 = (n__$1 - (1));
var G__6273 = cljs.core.next(xs);
n__$1 = G__6272;
xs = G__6273;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__6277 = x;
return goog.string.buildString(G__6277);
}
});
var str__2 = (function() { 
var G__6278__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__6279 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__6280 = cljs.core.next(more);
sb = G__6279;
more = G__6280;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__6278 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__6281__i = 0, G__6281__a = new Array(arguments.length -  1);
while (G__6281__i < G__6281__a.length) {G__6281__a[G__6281__i] = arguments[G__6281__i + 1]; ++G__6281__i;}
  ys = new cljs.core.IndexedSeq(G__6281__a,0);
} 
return G__6278__delegate.call(this,x,ys);};
G__6278.cljs$lang$maxFixedArity = 1;
G__6278.cljs$lang$applyTo = (function (arglist__6282){
var x = cljs.core.first(arglist__6282);
var ys = cljs.core.rest(arglist__6282);
return G__6278__delegate(x,ys);
});
G__6278.cljs$core$IFn$_invoke$arity$variadic = G__6278__delegate;
return G__6278;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__6283 = null;
if (arguments.length > 1) {
var G__6284__i = 0, G__6284__a = new Array(arguments.length -  1);
while (G__6284__i < G__6284__a.length) {G__6284__a[G__6284__i] = arguments[G__6284__i + 1]; ++G__6284__i;}
G__6283 = new cljs.core.IndexedSeq(G__6284__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__6283);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__6285 = cljs.core.next(xs);
var G__6286 = cljs.core.next(ys);
xs = G__6285;
ys = G__6286;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__6287 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__6288 = cljs.core.next(s);
res = G__6287;
s = G__6288;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__6293 = ((h + (cljs.core.hash((function (){var G__6291 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__6291) : cljs.core.key.call(null,G__6291));
})()) ^ cljs.core.hash((function (){var G__6292 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__6292) : cljs.core.val.call(null,G__6292));
})()))) % (4503599627370496));
var G__6294 = cljs.core.next(s);
h = G__6293;
s = G__6294;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__6295 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__6296 = cljs.core.next(s__$1);
h = G__6295;
s__$1 = G__6296;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__6307_6317 = cljs.core.seq(fn_map);
var chunk__6308_6318 = null;
var count__6309_6319 = (0);
var i__6310_6320 = (0);
while(true){
if((i__6310_6320 < count__6309_6319)){
var vec__6311_6321 = chunk__6308_6318.cljs$core$IIndexed$_nth$arity$2(null,i__6310_6320);
var key_name_6322 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6311_6321,(0),null);
var f_6323 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6311_6321,(1),null);
var str_name_6324 = (function (){var G__6312 = key_name_6322;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__6312) : cljs.core.name.call(null,G__6312));
})();
(obj[str_name_6324] = f_6323);

var G__6325 = seq__6307_6317;
var G__6326 = chunk__6308_6318;
var G__6327 = count__6309_6319;
var G__6328 = (i__6310_6320 + (1));
seq__6307_6317 = G__6325;
chunk__6308_6318 = G__6326;
count__6309_6319 = G__6327;
i__6310_6320 = G__6328;
continue;
} else {
var temp__4425__auto___6329 = cljs.core.seq(seq__6307_6317);
if(temp__4425__auto___6329){
var seq__6307_6330__$1 = temp__4425__auto___6329;
if(cljs.core.chunked_seq_QMARK_(seq__6307_6330__$1)){
var c__3914__auto___6331 = (function (){var G__6313 = seq__6307_6330__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__6313) : cljs.core.chunk_first.call(null,G__6313));
})();
var G__6332 = (function (){var G__6314 = seq__6307_6330__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__6314) : cljs.core.chunk_rest.call(null,G__6314));
})();
var G__6333 = c__3914__auto___6331;
var G__6334 = cljs.core.count(c__3914__auto___6331);
var G__6335 = (0);
seq__6307_6317 = G__6332;
chunk__6308_6318 = G__6333;
count__6309_6319 = G__6334;
i__6310_6320 = G__6335;
continue;
} else {
var vec__6315_6336 = cljs.core.first(seq__6307_6330__$1);
var key_name_6337 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6315_6336,(0),null);
var f_6338 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6315_6336,(1),null);
var str_name_6339 = (function (){var G__6316 = key_name_6337;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__6316) : cljs.core.name.call(null,G__6316));
})();
(obj[str_name_6339] = f_6338);

var G__6340 = cljs.core.next(seq__6307_6330__$1);
var G__6341 = null;
var G__6342 = (0);
var G__6343 = (0);
seq__6307_6317 = G__6340;
chunk__6308_6318 = G__6341;
count__6309_6319 = G__6342;
i__6310_6320 = G__6343;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__6345 = coll;
if(G__6345){
var bit__3808__auto__ = (G__6345.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__3808__auto__) || (G__6345.cljs$core$IReversible$)){
return true;
} else {
if((!G__6345.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__6345);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__6345);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__6346 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__6346;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__6347 = (i - (1));
var G__6348 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__6347;
r = G__6348;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__6349__i = 0, G__6349__a = new Array(arguments.length -  0);
while (G__6349__i < G__6349__a.length) {G__6349__a[G__6349__i] = arguments[G__6349__i + 0]; ++G__6349__i;}
  xs = new cljs.core.IndexedSeq(G__6349__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__6350){
var xs = cljs.core.seq(arglist__6350);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3127__auto__ = (coll == null);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var G__6354 = coll;
if(G__6354){
var bit__3801__auto__ = (G__6354.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__3801__auto__) || (G__6354.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__6356 = x;
if(G__6356){
var bit__3808__auto__ = (G__6356.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__3808__auto__) || (G__6356.cljs$core$IList$)){
return true;
} else {
if((!G__6356.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__6356);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__6356);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3115__auto__ = cljs.core.not(a.ns);
if(and__3115__auto__){
return b.ns;
} else {
return and__3115__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__6363 = a.ns;
var G__6364 = b.ns;
return goog.array.defaultCompare(G__6363,G__6364);
})();
if(((0) === nsc)){
var G__6365 = a.name;
var G__6366 = b.name;
return goog.array.defaultCompare(G__6365,G__6366);
} else {
return nsc;
}
}
} else {
var G__6367 = a.name;
var G__6368 = b.name;
return goog.array.defaultCompare(G__6367,G__6368);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__6370 = null;
var G__6370__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__6370__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__6370 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__6370__2.call(this,self__,coll);
case 3:
return G__6370__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6370.cljs$core$IFn$_invoke$arity$2 = G__6370__2;
G__6370.cljs$core$IFn$_invoke$arity$3 = G__6370__3;
return G__6370;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args6369){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args6369)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__3548__auto__ = self__._hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__6372 = x;
if(G__6372){
var bit__3801__auto__ = (G__6372.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__3801__auto__) || (G__6372.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__6374 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__6374) : cljs.core.name.call(null,G__6374));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__6375 = ls.sval();
ls = G__6375;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition0$ = 2;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition0$ = 524306;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__6377 = s;
if(G__6377){
var bit__3801__auto__ = (G__6377.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__3801__auto__) || (G__6377.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__6378 = cljs.core.next(s__$1);
s__$1 = G__6378;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_6379 = (0);
var xs_6380 = cljs.core.seq(coll);
while(true){
if(xs_6380){
(ret[i_6379] = cljs.core.to_array(cljs.core.first(xs_6380)));

var G__6381 = (i_6379 + (1));
var G__6382 = cljs.core.next(xs_6380);
i_6379 = G__6381;
xs_6380 = G__6382;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__6385 = (i + (1));
var G__6386 = cljs.core.next(s__$1);
i = G__6385;
s__$1 = G__6386;
continue;
} else {
return a;
}
break;
}
} else {
var n__4014__auto___6387 = size;
var i_6388 = (0);
while(true){
if((i_6388 < n__4014__auto___6387)){
(a[i_6388] = init_val_or_seq);

var G__6389 = (i_6388 + (1));
i_6388 = G__6389;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__6392 = (i + (1));
var G__6393 = cljs.core.next(s__$1);
i = G__6392;
s__$1 = G__6393;
continue;
} else {
return a;
}
break;
}
} else {
var n__4014__auto___6394 = size;
var i_6395 = (0);
while(true){
if((i_6395 < n__4014__auto___6394)){
(a[i_6395] = init_val_or_seq);

var G__6396 = (i_6395 + (1));
i_6395 = G__6396;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__6399 = (i + (1));
var G__6400 = cljs.core.next(s__$1);
i = G__6399;
s__$1 = G__6400;
continue;
} else {
return a;
}
break;
}
} else {
var n__4014__auto___6401 = size;
var i_6402 = (0);
while(true){
if((i_6402 < n__4014__auto___6401)){
(a[i_6402] = init_val_or_seq);

var G__6403 = (i_6402 + (1));
i_6402 = G__6403;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__6406 = (i + (1));
var G__6407 = cljs.core.next(s__$1);
i = G__6406;
s__$1 = G__6407;
continue;
} else {
return a;
}
break;
}
} else {
var n__4014__auto___6408 = size;
var i_6409 = (0);
while(true){
if((i_6409 < n__4014__auto___6408)){
(a[i_6409] = init_val_or_seq);

var G__6410 = (i_6409 + (1));
i_6409 = G__6410;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__6411 = cljs.core.next(s__$1);
var G__6412 = (i - (1));
var G__6413 = (sum + (1));
s__$1 = G__6411;
i = G__6412;
sum = G__6413;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__6433__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__6433 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__6434__i = 0, G__6434__a = new Array(arguments.length -  2);
while (G__6434__i < G__6434__a.length) {G__6434__a[G__6434__i] = arguments[G__6434__i + 2]; ++G__6434__i;}
  zs = new cljs.core.IndexedSeq(G__6434__a,0);
} 
return G__6433__delegate.call(this,x,y,zs);};
G__6433.cljs$lang$maxFixedArity = 2;
G__6433.cljs$lang$applyTo = (function (arglist__6435){
var x = cljs.core.first(arglist__6435);
arglist__6435 = cljs.core.next(arglist__6435);
var y = cljs.core.first(arglist__6435);
var zs = cljs.core.rest(arglist__6435);
return G__6433__delegate(x,y,zs);
});
G__6433.cljs$core$IFn$_invoke$arity$variadic = G__6433__delegate;
return G__6433;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__6436 = null;
if (arguments.length > 2) {
var G__6437__i = 0, G__6437__a = new Array(arguments.length -  2);
while (G__6437__i < G__6437__a.length) {G__6437__a[G__6437__i] = arguments[G__6437__i + 2]; ++G__6437__i;}
G__6436 = new cljs.core.IndexedSeq(G__6437__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6436);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__6438__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__6438 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__6439__i = 0, G__6439__a = new Array(arguments.length -  4);
while (G__6439__i < G__6439__a.length) {G__6439__a[G__6439__i] = arguments[G__6439__i + 4]; ++G__6439__i;}
  more = new cljs.core.IndexedSeq(G__6439__a,0);
} 
return G__6438__delegate.call(this,a,b,c,d,more);};
G__6438.cljs$lang$maxFixedArity = 4;
G__6438.cljs$lang$applyTo = (function (arglist__6440){
var a = cljs.core.first(arglist__6440);
arglist__6440 = cljs.core.next(arglist__6440);
var b = cljs.core.first(arglist__6440);
arglist__6440 = cljs.core.next(arglist__6440);
var c = cljs.core.first(arglist__6440);
arglist__6440 = cljs.core.next(arglist__6440);
var d = cljs.core.first(arglist__6440);
var more = cljs.core.rest(arglist__6440);
return G__6438__delegate(a,b,c,d,more);
});
G__6438.cljs$core$IFn$_invoke$arity$variadic = G__6438__delegate;
return G__6438;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__6441 = null;
if (arguments.length > 4) {
var G__6442__i = 0, G__6442__a = new Array(arguments.length -  4);
while (G__6442__i < G__6442__a.length) {G__6442__a[G__6442__i] = arguments[G__6442__i + 4]; ++G__6442__i;}
G__6441 = new cljs.core.IndexedSeq(G__6442__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__6441);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__6443__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__6444 = ntcoll;
var G__6445 = cljs.core.first(vals);
var G__6446 = cljs.core.next(vals);
tcoll = G__6444;
val = G__6445;
vals = G__6446;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__6443 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__6447__i = 0, G__6447__a = new Array(arguments.length -  2);
while (G__6447__i < G__6447__a.length) {G__6447__a[G__6447__i] = arguments[G__6447__i + 2]; ++G__6447__i;}
  vals = new cljs.core.IndexedSeq(G__6447__a,0);
} 
return G__6443__delegate.call(this,tcoll,val,vals);};
G__6443.cljs$lang$maxFixedArity = 2;
G__6443.cljs$lang$applyTo = (function (arglist__6448){
var tcoll = cljs.core.first(arglist__6448);
arglist__6448 = cljs.core.next(arglist__6448);
var val = cljs.core.first(arglist__6448);
var vals = cljs.core.rest(arglist__6448);
return G__6443__delegate(tcoll,val,vals);
});
G__6443.cljs$core$IFn$_invoke$arity$variadic = G__6443__delegate;
return G__6443;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__6449 = null;
if (arguments.length > 2) {
var G__6450__i = 0, G__6450__a = new Array(arguments.length -  2);
while (G__6450__i < G__6450__a.length) {G__6450__a[G__6450__i] = arguments[G__6450__i + 2]; ++G__6450__i;}
G__6449 = new cljs.core.IndexedSeq(G__6450__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__6449);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__6451__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__6452 = ntcoll;
var G__6453 = cljs.core.first(kvs);
var G__6454 = cljs.core.second(kvs);
var G__6455 = cljs.core.nnext(kvs);
tcoll = G__6452;
key = G__6453;
val = G__6454;
kvs = G__6455;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__6451 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__6456__i = 0, G__6456__a = new Array(arguments.length -  3);
while (G__6456__i < G__6456__a.length) {G__6456__a[G__6456__i] = arguments[G__6456__i + 3]; ++G__6456__i;}
  kvs = new cljs.core.IndexedSeq(G__6456__a,0);
} 
return G__6451__delegate.call(this,tcoll,key,val,kvs);};
G__6451.cljs$lang$maxFixedArity = 3;
G__6451.cljs$lang$applyTo = (function (arglist__6457){
var tcoll = cljs.core.first(arglist__6457);
arglist__6457 = cljs.core.next(arglist__6457);
var key = cljs.core.first(arglist__6457);
arglist__6457 = cljs.core.next(arglist__6457);
var val = cljs.core.first(arglist__6457);
var kvs = cljs.core.rest(arglist__6457);
return G__6451__delegate(tcoll,key,val,kvs);
});
G__6451.cljs$core$IFn$_invoke$arity$variadic = G__6451__delegate;
return G__6451;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__6458 = null;
if (arguments.length > 3) {
var G__6459__i = 0, G__6459__a = new Array(arguments.length -  3);
while (G__6459__i < G__6459__a.length) {G__6459__a[G__6459__i] = arguments[G__6459__i + 3]; ++G__6459__i;}
G__6458 = new cljs.core.IndexedSeq(G__6459__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__6458);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__6460__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__6461 = ntcoll;
var G__6462 = cljs.core.first(ks);
var G__6463 = cljs.core.next(ks);
tcoll = G__6461;
key = G__6462;
ks = G__6463;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__6460 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__6464__i = 0, G__6464__a = new Array(arguments.length -  2);
while (G__6464__i < G__6464__a.length) {G__6464__a[G__6464__i] = arguments[G__6464__i + 2]; ++G__6464__i;}
  ks = new cljs.core.IndexedSeq(G__6464__a,0);
} 
return G__6460__delegate.call(this,tcoll,key,ks);};
G__6460.cljs$lang$maxFixedArity = 2;
G__6460.cljs$lang$applyTo = (function (arglist__6465){
var tcoll = cljs.core.first(arglist__6465);
arglist__6465 = cljs.core.next(arglist__6465);
var key = cljs.core.first(arglist__6465);
var ks = cljs.core.rest(arglist__6465);
return G__6460__delegate(tcoll,key,ks);
});
G__6460.cljs$core$IFn$_invoke$arity$variadic = G__6460__delegate;
return G__6460;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__6466 = null;
if (arguments.length > 2) {
var G__6467__i = 0, G__6467__a = new Array(arguments.length -  2);
while (G__6467__i < G__6467__a.length) {G__6467__a[G__6467__i] = arguments[G__6467__i + 2]; ++G__6467__i;}
G__6466 = new cljs.core.IndexedSeq(G__6467__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__6466);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__6468__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__6469 = ntcoll;
var G__6470 = cljs.core.first(vals);
var G__6471 = cljs.core.next(vals);
tcoll = G__6469;
val = G__6470;
vals = G__6471;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__6468 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__6472__i = 0, G__6472__a = new Array(arguments.length -  2);
while (G__6472__i < G__6472__a.length) {G__6472__a[G__6472__i] = arguments[G__6472__i + 2]; ++G__6472__i;}
  vals = new cljs.core.IndexedSeq(G__6472__a,0);
} 
return G__6468__delegate.call(this,tcoll,val,vals);};
G__6468.cljs$lang$maxFixedArity = 2;
G__6468.cljs$lang$applyTo = (function (arglist__6473){
var tcoll = cljs.core.first(arglist__6473);
arglist__6473 = cljs.core.next(arglist__6473);
var val = cljs.core.first(arglist__6473);
var vals = cljs.core.rest(arglist__6473);
return G__6468__delegate(tcoll,val,vals);
});
G__6468.cljs$core$IFn$_invoke$arity$variadic = G__6468__delegate;
return G__6468;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__6474 = null;
if (arguments.length > 2) {
var G__6475__i = 0, G__6475__a = new Array(arguments.length -  2);
while (G__6475__i < G__6475__a.length) {G__6475__a[G__6475__i] = arguments[G__6475__i + 2]; ++G__6475__i;}
G__6474 = new cljs.core.IndexedSeq(G__6475__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__6474);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4058 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4058);
} else {
var G__6686 = a4058;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__6686) : f.call(null,G__6686));
}
} else {
var b4059 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4058,b4059);
} else {
var G__6687 = a4058;
var G__6688 = b4059;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6687,G__6688) : f.call(null,G__6687,G__6688));
}
} else {
var c4060 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4058,b4059,c4060);
} else {
var G__6689 = a4058;
var G__6690 = b4059;
var G__6691 = c4060;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__6689,G__6690,G__6691) : f.call(null,G__6689,G__6690,G__6691));
}
} else {
var d4061 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4058,b4059,c4060,d4061);
} else {
var G__6692 = a4058;
var G__6693 = b4059;
var G__6694 = c4060;
var G__6695 = d4061;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__6692,G__6693,G__6694,G__6695) : f.call(null,G__6692,G__6693,G__6694,G__6695));
}
} else {
var e4062 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4058,b4059,c4060,d4061,e4062);
} else {
var G__6696 = a4058;
var G__6697 = b4059;
var G__6698 = c4060;
var G__6699 = d4061;
var G__6700 = e4062;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__6696,G__6697,G__6698,G__6699,G__6700) : f.call(null,G__6696,G__6697,G__6698,G__6699,G__6700));
}
} else {
var f4063 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4058,b4059,c4060,d4061,e4062,f4063);
} else {
var G__6701 = a4058;
var G__6702 = b4059;
var G__6703 = c4060;
var G__6704 = d4061;
var G__6705 = e4062;
var G__6706 = f4063;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__6701,G__6702,G__6703,G__6704,G__6705,G__6706) : f.call(null,G__6701,G__6702,G__6703,G__6704,G__6705,G__6706));
}
} else {
var g4064 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4058,b4059,c4060,d4061,e4062,f4063,g4064);
} else {
var G__6707 = a4058;
var G__6708 = b4059;
var G__6709 = c4060;
var G__6710 = d4061;
var G__6711 = e4062;
var G__6712 = f4063;
var G__6713 = g4064;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__6707,G__6708,G__6709,G__6710,G__6711,G__6712,G__6713) : f.call(null,G__6707,G__6708,G__6709,G__6710,G__6711,G__6712,G__6713));
}
} else {
var h4065 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4058,b4059,c4060,d4061,e4062,f4063,g4064,h4065);
} else {
var G__6714 = a4058;
var G__6715 = b4059;
var G__6716 = c4060;
var G__6717 = d4061;
var G__6718 = e4062;
var G__6719 = f4063;
var G__6720 = g4064;
var G__6721 = h4065;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__6714,G__6715,G__6716,G__6717,G__6718,G__6719,G__6720,G__6721) : f.call(null,G__6714,G__6715,G__6716,G__6717,G__6718,G__6719,G__6720,G__6721));
}
} else {
var i4066 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4058,b4059,c4060,d4061,e4062,f4063,g4064,h4065,i4066);
} else {
var G__6722 = a4058;
var G__6723 = b4059;
var G__6724 = c4060;
var G__6725 = d4061;
var G__6726 = e4062;
var G__6727 = f4063;
var G__6728 = g4064;
var G__6729 = h4065;
var G__6730 = i4066;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__6722,G__6723,G__6724,G__6725,G__6726,G__6727,G__6728,G__6729,G__6730) : f.call(null,G__6722,G__6723,G__6724,G__6725,G__6726,G__6727,G__6728,G__6729,G__6730));
}
} else {
var j4067 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4058,b4059,c4060,d4061,e4062,f4063,g4064,h4065,i4066,j4067);
} else {
var G__6731 = a4058;
var G__6732 = b4059;
var G__6733 = c4060;
var G__6734 = d4061;
var G__6735 = e4062;
var G__6736 = f4063;
var G__6737 = g4064;
var G__6738 = h4065;
var G__6739 = i4066;
var G__6740 = j4067;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__6731,G__6732,G__6733,G__6734,G__6735,G__6736,G__6737,G__6738,G__6739,G__6740) : f.call(null,G__6731,G__6732,G__6733,G__6734,G__6735,G__6736,G__6737,G__6738,G__6739,G__6740));
}
} else {
var k4068 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4058,b4059,c4060,d4061,e4062,f4063,g4064,h4065,i4066,j4067,k4068);
} else {
var G__6741 = a4058;
var G__6742 = b4059;
var G__6743 = c4060;
var G__6744 = d4061;
var G__6745 = e4062;
var G__6746 = f4063;
var G__6747 = g4064;
var G__6748 = h4065;
var G__6749 = i4066;
var G__6750 = j4067;
var G__6751 = k4068;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__6741,G__6742,G__6743,G__6744,G__6745,G__6746,G__6747,G__6748,G__6749,G__6750,G__6751) : f.call(null,G__6741,G__6742,G__6743,G__6744,G__6745,G__6746,G__6747,G__6748,G__6749,G__6750,G__6751));
}
} else {
var l4069 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4058,b4059,c4060,d4061,e4062,f4063,g4064,h4065,i4066,j4067,k4068,l4069);
} else {
var G__6752 = a4058;
var G__6753 = b4059;
var G__6754 = c4060;
var G__6755 = d4061;
var G__6756 = e4062;
var G__6757 = f4063;
var G__6758 = g4064;
var G__6759 = h4065;
var G__6760 = i4066;
var G__6761 = j4067;
var G__6762 = k4068;
var G__6763 = l4069;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__6752,G__6753,G__6754,G__6755,G__6756,G__6757,G__6758,G__6759,G__6760,G__6761,G__6762,G__6763) : f.call(null,G__6752,G__6753,G__6754,G__6755,G__6756,G__6757,G__6758,G__6759,G__6760,G__6761,G__6762,G__6763));
}
} else {
var m4070 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4058,b4059,c4060,d4061,e4062,f4063,g4064,h4065,i4066,j4067,k4068,l4069,m4070);
} else {
var G__6764 = a4058;
var G__6765 = b4059;
var G__6766 = c4060;
var G__6767 = d4061;
var G__6768 = e4062;
var G__6769 = f4063;
var G__6770 = g4064;
var G__6771 = h4065;
var G__6772 = i4066;
var G__6773 = j4067;
var G__6774 = k4068;
var G__6775 = l4069;
var G__6776 = m4070;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__6764,G__6765,G__6766,G__6767,G__6768,G__6769,G__6770,G__6771,G__6772,G__6773,G__6774,G__6775,G__6776) : f.call(null,G__6764,G__6765,G__6766,G__6767,G__6768,G__6769,G__6770,G__6771,G__6772,G__6773,G__6774,G__6775,G__6776));
}
} else {
var n4071 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4058,b4059,c4060,d4061,e4062,f4063,g4064,h4065,i4066,j4067,k4068,l4069,m4070,n4071);
} else {
var G__6777 = a4058;
var G__6778 = b4059;
var G__6779 = c4060;
var G__6780 = d4061;
var G__6781 = e4062;
var G__6782 = f4063;
var G__6783 = g4064;
var G__6784 = h4065;
var G__6785 = i4066;
var G__6786 = j4067;
var G__6787 = k4068;
var G__6788 = l4069;
var G__6789 = m4070;
var G__6790 = n4071;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__6777,G__6778,G__6779,G__6780,G__6781,G__6782,G__6783,G__6784,G__6785,G__6786,G__6787,G__6788,G__6789,G__6790) : f.call(null,G__6777,G__6778,G__6779,G__6780,G__6781,G__6782,G__6783,G__6784,G__6785,G__6786,G__6787,G__6788,G__6789,G__6790));
}
} else {
var o4072 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4058,b4059,c4060,d4061,e4062,f4063,g4064,h4065,i4066,j4067,k4068,l4069,m4070,n4071,o4072);
} else {
var G__6791 = a4058;
var G__6792 = b4059;
var G__6793 = c4060;
var G__6794 = d4061;
var G__6795 = e4062;
var G__6796 = f4063;
var G__6797 = g4064;
var G__6798 = h4065;
var G__6799 = i4066;
var G__6800 = j4067;
var G__6801 = k4068;
var G__6802 = l4069;
var G__6803 = m4070;
var G__6804 = n4071;
var G__6805 = o4072;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__6791,G__6792,G__6793,G__6794,G__6795,G__6796,G__6797,G__6798,G__6799,G__6800,G__6801,G__6802,G__6803,G__6804,G__6805) : f.call(null,G__6791,G__6792,G__6793,G__6794,G__6795,G__6796,G__6797,G__6798,G__6799,G__6800,G__6801,G__6802,G__6803,G__6804,G__6805));
}
} else {
var p4073 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4058,b4059,c4060,d4061,e4062,f4063,g4064,h4065,i4066,j4067,k4068,l4069,m4070,n4071,o4072,p4073);
} else {
var G__6806 = a4058;
var G__6807 = b4059;
var G__6808 = c4060;
var G__6809 = d4061;
var G__6810 = e4062;
var G__6811 = f4063;
var G__6812 = g4064;
var G__6813 = h4065;
var G__6814 = i4066;
var G__6815 = j4067;
var G__6816 = k4068;
var G__6817 = l4069;
var G__6818 = m4070;
var G__6819 = n4071;
var G__6820 = o4072;
var G__6821 = p4073;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__6806,G__6807,G__6808,G__6809,G__6810,G__6811,G__6812,G__6813,G__6814,G__6815,G__6816,G__6817,G__6818,G__6819,G__6820,G__6821) : f.call(null,G__6806,G__6807,G__6808,G__6809,G__6810,G__6811,G__6812,G__6813,G__6814,G__6815,G__6816,G__6817,G__6818,G__6819,G__6820,G__6821));
}
} else {
var q4074 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4058,b4059,c4060,d4061,e4062,f4063,g4064,h4065,i4066,j4067,k4068,l4069,m4070,n4071,o4072,p4073,q4074);
} else {
var G__6822 = a4058;
var G__6823 = b4059;
var G__6824 = c4060;
var G__6825 = d4061;
var G__6826 = e4062;
var G__6827 = f4063;
var G__6828 = g4064;
var G__6829 = h4065;
var G__6830 = i4066;
var G__6831 = j4067;
var G__6832 = k4068;
var G__6833 = l4069;
var G__6834 = m4070;
var G__6835 = n4071;
var G__6836 = o4072;
var G__6837 = p4073;
var G__6838 = q4074;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__6822,G__6823,G__6824,G__6825,G__6826,G__6827,G__6828,G__6829,G__6830,G__6831,G__6832,G__6833,G__6834,G__6835,G__6836,G__6837,G__6838) : f.call(null,G__6822,G__6823,G__6824,G__6825,G__6826,G__6827,G__6828,G__6829,G__6830,G__6831,G__6832,G__6833,G__6834,G__6835,G__6836,G__6837,G__6838));
}
} else {
var r4075 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4058,b4059,c4060,d4061,e4062,f4063,g4064,h4065,i4066,j4067,k4068,l4069,m4070,n4071,o4072,p4073,q4074,r4075);
} else {
var G__6839 = a4058;
var G__6840 = b4059;
var G__6841 = c4060;
var G__6842 = d4061;
var G__6843 = e4062;
var G__6844 = f4063;
var G__6845 = g4064;
var G__6846 = h4065;
var G__6847 = i4066;
var G__6848 = j4067;
var G__6849 = k4068;
var G__6850 = l4069;
var G__6851 = m4070;
var G__6852 = n4071;
var G__6853 = o4072;
var G__6854 = p4073;
var G__6855 = q4074;
var G__6856 = r4075;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__6839,G__6840,G__6841,G__6842,G__6843,G__6844,G__6845,G__6846,G__6847,G__6848,G__6849,G__6850,G__6851,G__6852,G__6853,G__6854,G__6855,G__6856) : f.call(null,G__6839,G__6840,G__6841,G__6842,G__6843,G__6844,G__6845,G__6846,G__6847,G__6848,G__6849,G__6850,G__6851,G__6852,G__6853,G__6854,G__6855,G__6856));
}
} else {
var s4076 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4058,b4059,c4060,d4061,e4062,f4063,g4064,h4065,i4066,j4067,k4068,l4069,m4070,n4071,o4072,p4073,q4074,r4075,s4076);
} else {
var G__6857 = a4058;
var G__6858 = b4059;
var G__6859 = c4060;
var G__6860 = d4061;
var G__6861 = e4062;
var G__6862 = f4063;
var G__6863 = g4064;
var G__6864 = h4065;
var G__6865 = i4066;
var G__6866 = j4067;
var G__6867 = k4068;
var G__6868 = l4069;
var G__6869 = m4070;
var G__6870 = n4071;
var G__6871 = o4072;
var G__6872 = p4073;
var G__6873 = q4074;
var G__6874 = r4075;
var G__6875 = s4076;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__6857,G__6858,G__6859,G__6860,G__6861,G__6862,G__6863,G__6864,G__6865,G__6866,G__6867,G__6868,G__6869,G__6870,G__6871,G__6872,G__6873,G__6874,G__6875) : f.call(null,G__6857,G__6858,G__6859,G__6860,G__6861,G__6862,G__6863,G__6864,G__6865,G__6866,G__6867,G__6868,G__6869,G__6870,G__6871,G__6872,G__6873,G__6874,G__6875));
}
} else {
var t4077 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4058,b4059,c4060,d4061,e4062,f4063,g4064,h4065,i4066,j4067,k4068,l4069,m4070,n4071,o4072,p4073,q4074,r4075,s4076,t4077);
} else {
var G__6876 = a4058;
var G__6877 = b4059;
var G__6878 = c4060;
var G__6879 = d4061;
var G__6880 = e4062;
var G__6881 = f4063;
var G__6882 = g4064;
var G__6883 = h4065;
var G__6884 = i4066;
var G__6885 = j4067;
var G__6886 = k4068;
var G__6887 = l4069;
var G__6888 = m4070;
var G__6889 = n4071;
var G__6890 = o4072;
var G__6891 = p4073;
var G__6892 = q4074;
var G__6893 = r4075;
var G__6894 = s4076;
var G__6895 = t4077;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__6876,G__6877,G__6878,G__6879,G__6880,G__6881,G__6882,G__6883,G__6884,G__6885,G__6886,G__6887,G__6888,G__6889,G__6890,G__6891,G__6892,G__6893,G__6894,G__6895) : f.call(null,G__6876,G__6877,G__6878,G__6879,G__6880,G__6881,G__6882,G__6883,G__6884,G__6885,G__6886,G__6887,G__6888,G__6889,G__6890,G__6891,G__6892,G__6893,G__6894,G__6895));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__6896__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__6896 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__6897__i = 0, G__6897__a = new Array(arguments.length -  5);
while (G__6897__i < G__6897__a.length) {G__6897__a[G__6897__i] = arguments[G__6897__i + 5]; ++G__6897__i;}
  args = new cljs.core.IndexedSeq(G__6897__a,0);
} 
return G__6896__delegate.call(this,f,a,b,c,d,args);};
G__6896.cljs$lang$maxFixedArity = 5;
G__6896.cljs$lang$applyTo = (function (arglist__6898){
var f = cljs.core.first(arglist__6898);
arglist__6898 = cljs.core.next(arglist__6898);
var a = cljs.core.first(arglist__6898);
arglist__6898 = cljs.core.next(arglist__6898);
var b = cljs.core.first(arglist__6898);
arglist__6898 = cljs.core.next(arglist__6898);
var c = cljs.core.first(arglist__6898);
arglist__6898 = cljs.core.next(arglist__6898);
var d = cljs.core.first(arglist__6898);
var args = cljs.core.rest(arglist__6898);
return G__6896__delegate(f,a,b,c,d,args);
});
G__6896.cljs$core$IFn$_invoke$arity$variadic = G__6896__delegate;
return G__6896;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__6899 = null;
if (arguments.length > 5) {
var G__6900__i = 0, G__6900__a = new Array(arguments.length -  5);
while (G__6900__i < G__6900__a.length) {G__6900__a[G__6900__i] = arguments[G__6900__i + 5]; ++G__6900__i;}
G__6899 = new cljs.core.IndexedSeq(G__6900__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__6899);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__6916 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__6916) : f.call(null,G__6916));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__6917 = cljs.core.meta(obj);
var G__6918 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6917,G__6918) : f.call(null,G__6917,G__6918));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__6919 = cljs.core.meta(obj);
var G__6920 = a;
var G__6921 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__6919,G__6920,G__6921) : f.call(null,G__6919,G__6920,G__6921));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__6922 = cljs.core.meta(obj);
var G__6923 = a;
var G__6924 = b;
var G__6925 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__6922,G__6923,G__6924,G__6925) : f.call(null,G__6922,G__6923,G__6924,G__6925));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__6926 = cljs.core.meta(obj);
var G__6927 = a;
var G__6928 = b;
var G__6929 = c;
var G__6930 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__6926,G__6927,G__6928,G__6929,G__6930) : f.call(null,G__6926,G__6927,G__6928,G__6929,G__6930));
})());
});
var vary_meta__7 = (function() { 
var G__6931__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__6931 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__6932__i = 0, G__6932__a = new Array(arguments.length -  6);
while (G__6932__i < G__6932__a.length) {G__6932__a[G__6932__i] = arguments[G__6932__i + 6]; ++G__6932__i;}
  args = new cljs.core.IndexedSeq(G__6932__a,0);
} 
return G__6931__delegate.call(this,obj,f,a,b,c,d,args);};
G__6931.cljs$lang$maxFixedArity = 6;
G__6931.cljs$lang$applyTo = (function (arglist__6933){
var obj = cljs.core.first(arglist__6933);
arglist__6933 = cljs.core.next(arglist__6933);
var f = cljs.core.first(arglist__6933);
arglist__6933 = cljs.core.next(arglist__6933);
var a = cljs.core.first(arglist__6933);
arglist__6933 = cljs.core.next(arglist__6933);
var b = cljs.core.first(arglist__6933);
arglist__6933 = cljs.core.next(arglist__6933);
var c = cljs.core.first(arglist__6933);
arglist__6933 = cljs.core.next(arglist__6933);
var d = cljs.core.first(arglist__6933);
var args = cljs.core.rest(arglist__6933);
return G__6931__delegate(obj,f,a,b,c,d,args);
});
G__6931.cljs$core$IFn$_invoke$arity$variadic = G__6931__delegate;
return G__6931;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__6934 = null;
if (arguments.length > 6) {
var G__6935__i = 0, G__6935__a = new Array(arguments.length -  6);
while (G__6935__i < G__6935__a.length) {G__6935__a[G__6935__i] = arguments[G__6935__i + 6]; ++G__6935__i;}
G__6934 = new cljs.core.IndexedSeq(G__6935__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__6934);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__6936__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__6936 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__6937__i = 0, G__6937__a = new Array(arguments.length -  2);
while (G__6937__i < G__6937__a.length) {G__6937__a[G__6937__i] = arguments[G__6937__i + 2]; ++G__6937__i;}
  more = new cljs.core.IndexedSeq(G__6937__a,0);
} 
return G__6936__delegate.call(this,x,y,more);};
G__6936.cljs$lang$maxFixedArity = 2;
G__6936.cljs$lang$applyTo = (function (arglist__6938){
var x = cljs.core.first(arglist__6938);
arglist__6938 = cljs.core.next(arglist__6938);
var y = cljs.core.first(arglist__6938);
var more = cljs.core.rest(arglist__6938);
return G__6936__delegate(x,y,more);
});
G__6936.cljs$core$IFn$_invoke$arity$variadic = G__6936__delegate;
return G__6936;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__6939 = null;
if (arguments.length > 2) {
var G__6940__i = 0, G__6940__a = new Array(arguments.length -  2);
while (G__6940__i < G__6940__a.length) {G__6940__a[G__6940__i] = arguments[G__6940__i + 2]; ++G__6940__i;}
G__6939 = new cljs.core.IndexedSeq(G__6940__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__6939);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t6944 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t6944 = (function (nil_iter,meta6945){
this.nil_iter = nil_iter;
this.meta6945 = meta6945;
this.cljs$lang$protocol_mask$partition0$ = 393216;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.t6944.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_6946,meta6945__$1){
var self__ = this;
var _6946__$1 = this;
return (new cljs.core.t6944(self__.nil_iter,meta6945__$1));
});

cljs.core.t6944.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_6946){
var self__ = this;
var _6946__$1 = this;
return self__.meta6945;
});

cljs.core.t6944.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t6944.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t6944.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t6944.cljs$lang$type = true;

cljs.core.t6944.cljs$lang$ctorStr = "cljs.core/t6944";

cljs.core.t6944.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/t6944");
});

cljs.core.__GT_t6944 = (function __GT_t6944(nil_iter__$1,meta6945){
return (new cljs.core.t6944(nil_iter__$1,meta6945));
});

}

return (new cljs.core.t6944(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3115__auto__ = !((lt.stepper == null));
if(and__3115__auto__){
return self__.iter.hasNext();
} else {
return and__3115__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__6947 = lt;
var G__6948 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__6947,G__6948) : self__.xform.call(null,G__6947,G__6948));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__6949 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__6949) : self__.xform.call(null,G__6949));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__6951 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__6951) : xform.call(null,G__6951));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__6953 = cljs.core.next(iters__$1);
iters__$1 = G__6953;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4014__auto___6954 = self__.iters.length;
var i_6955 = (0);
while(true){
if((i_6955 < n__4014__auto___6954)){
(self__.nexts[i_6955] = (self__.iters[i_6955]).next());

var G__6956 = (i_6955 + (1));
i_6955 = G__6956;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3115__auto__ = !((lt.stepper == null));
if(and__3115__auto__){
return this$.hasNext();
} else {
return and__3115__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__6952 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__6952) : self__.xform.call(null,G__6952));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__6961 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__6961) : xform.call(null,G__6961));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__6962_6966 = cljs.core.seq(colls);
var chunk__6963_6967 = null;
var count__6964_6968 = (0);
var i__6965_6969 = (0);
while(true){
if((i__6965_6969 < count__6964_6968)){
var coll_6970 = chunk__6963_6967.cljs$core$IIndexed$_nth$arity$2(null,i__6965_6969);
iters.push(cljs.core.iter(coll_6970));

var G__6971 = seq__6962_6966;
var G__6972 = chunk__6963_6967;
var G__6973 = count__6964_6968;
var G__6974 = (i__6965_6969 + (1));
seq__6962_6966 = G__6971;
chunk__6963_6967 = G__6972;
count__6964_6968 = G__6973;
i__6965_6969 = G__6974;
continue;
} else {
var temp__4425__auto___6975 = cljs.core.seq(seq__6962_6966);
if(temp__4425__auto___6975){
var seq__6962_6976__$1 = temp__4425__auto___6975;
if(cljs.core.chunked_seq_QMARK_(seq__6962_6976__$1)){
var c__3914__auto___6977 = cljs.core.chunk_first(seq__6962_6976__$1);
var G__6978 = cljs.core.chunk_rest(seq__6962_6976__$1);
var G__6979 = c__3914__auto___6977;
var G__6980 = cljs.core.count(c__3914__auto___6977);
var G__6981 = (0);
seq__6962_6966 = G__6978;
chunk__6963_6967 = G__6979;
count__6964_6968 = G__6980;
i__6965_6969 = G__6981;
continue;
} else {
var coll_6982 = cljs.core.first(seq__6962_6976__$1);
iters.push(cljs.core.iter(coll_6982));

var G__6983 = cljs.core.next(seq__6962_6976__$1);
var G__6984 = null;
var G__6985 = (0);
var G__6986 = (0);
seq__6962_6966 = G__6983;
chunk__6963_6967 = G__6984;
count__6964_6968 = G__6985;
i__6965_6969 = G__6986;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3127__auto__ = cljs.core.seq(coll);
if(or__3127__auto__){
return or__3127__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__6987__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__6987 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__6988__i = 0, G__6988__a = new Array(arguments.length -  2);
while (G__6988__i < G__6988__a.length) {G__6988__a[G__6988__i] = arguments[G__6988__i + 2]; ++G__6988__i;}
  colls = new cljs.core.IndexedSeq(G__6988__a,0);
} 
return G__6987__delegate.call(this,xform,coll,colls);};
G__6987.cljs$lang$maxFixedArity = 2;
G__6987.cljs$lang$applyTo = (function (arglist__6989){
var xform = cljs.core.first(arglist__6989);
arglist__6989 = cljs.core.next(arglist__6989);
var coll = cljs.core.first(arglist__6989);
var colls = cljs.core.rest(arglist__6989);
return G__6987__delegate(xform,coll,colls);
});
G__6987.cljs$core$IFn$_invoke$arity$variadic = G__6987__delegate;
return G__6987;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__6990 = null;
if (arguments.length > 2) {
var G__6991__i = 0, G__6991__a = new Array(arguments.length -  2);
while (G__6991__i < G__6991__a.length) {G__6991__a[G__6991__i] = arguments[G__6991__i + 2]; ++G__6991__i;}
G__6990 = new cljs.core.IndexedSeq(G__6991__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__6990);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__6993 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__6993) : pred.call(null,G__6993));
})())){
var G__6994 = pred;
var G__6995 = cljs.core.next(coll);
pred = G__6994;
coll = G__6995;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3127__auto__ = (function (){var G__6999 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__6999) : pred.call(null,G__6999));
})();
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
var G__7000 = pred;
var G__7001 = cljs.core.next(coll);
pred = G__7000;
coll = G__7001;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__7008 = null;
var G__7008__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__7008__1 = (function (x){
return cljs.core.not((function (){var G__7005 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7005) : f.call(null,G__7005));
})());
});
var G__7008__2 = (function (x,y){
return cljs.core.not((function (){var G__7006 = x;
var G__7007 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7006,G__7007) : f.call(null,G__7006,G__7007));
})());
});
var G__7008__3 = (function() { 
var G__7009__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__7009 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__7010__i = 0, G__7010__a = new Array(arguments.length -  2);
while (G__7010__i < G__7010__a.length) {G__7010__a[G__7010__i] = arguments[G__7010__i + 2]; ++G__7010__i;}
  zs = new cljs.core.IndexedSeq(G__7010__a,0);
} 
return G__7009__delegate.call(this,x,y,zs);};
G__7009.cljs$lang$maxFixedArity = 2;
G__7009.cljs$lang$applyTo = (function (arglist__7011){
var x = cljs.core.first(arglist__7011);
arglist__7011 = cljs.core.next(arglist__7011);
var y = cljs.core.first(arglist__7011);
var zs = cljs.core.rest(arglist__7011);
return G__7009__delegate(x,y,zs);
});
G__7009.cljs$core$IFn$_invoke$arity$variadic = G__7009__delegate;
return G__7009;
})()
;
G__7008 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__7008__0.call(this);
case 1:
return G__7008__1.call(this,x);
case 2:
return G__7008__2.call(this,x,y);
default:
var G__7012 = null;
if (arguments.length > 2) {
var G__7013__i = 0, G__7013__a = new Array(arguments.length -  2);
while (G__7013__i < G__7013__a.length) {G__7013__a[G__7013__i] = arguments[G__7013__i + 2]; ++G__7013__i;}
G__7012 = new cljs.core.IndexedSeq(G__7013__a,0);
}
return G__7008__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__7012);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7008.cljs$lang$maxFixedArity = 2;
G__7008.cljs$lang$applyTo = G__7008__3.cljs$lang$applyTo;
G__7008.cljs$core$IFn$_invoke$arity$0 = G__7008__0;
G__7008.cljs$core$IFn$_invoke$arity$1 = G__7008__1;
G__7008.cljs$core$IFn$_invoke$arity$2 = G__7008__2;
G__7008.cljs$core$IFn$_invoke$arity$variadic = G__7008__3.cljs$core$IFn$_invoke$arity$variadic;
return G__7008;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__7014__delegate = function (args){
return x;
};
var G__7014 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__7015__i = 0, G__7015__a = new Array(arguments.length -  0);
while (G__7015__i < G__7015__a.length) {G__7015__a[G__7015__i] = arguments[G__7015__i + 0]; ++G__7015__i;}
  args = new cljs.core.IndexedSeq(G__7015__a,0);
} 
return G__7014__delegate.call(this,args);};
G__7014.cljs$lang$maxFixedArity = 0;
G__7014.cljs$lang$applyTo = (function (arglist__7016){
var args = cljs.core.seq(arglist__7016);
return G__7014__delegate(args);
});
G__7014.cljs$core$IFn$_invoke$arity$variadic = G__7014__delegate;
return G__7014;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__7071 = null;
var G__7071__0 = (function (){
var G__7044 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7044) : f.call(null,G__7044));
});
var G__7071__1 = (function (x){
var G__7045 = (function (){var G__7046 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7046) : g.call(null,G__7046));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7045) : f.call(null,G__7045));
});
var G__7071__2 = (function (x,y){
var G__7047 = (function (){var G__7048 = x;
var G__7049 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__7048,G__7049) : g.call(null,G__7048,G__7049));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7047) : f.call(null,G__7047));
});
var G__7071__3 = (function (x,y,z){
var G__7050 = (function (){var G__7051 = x;
var G__7052 = y;
var G__7053 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__7051,G__7052,G__7053) : g.call(null,G__7051,G__7052,G__7053));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7050) : f.call(null,G__7050));
});
var G__7071__4 = (function() { 
var G__7072__delegate = function (x,y,z,args){
var G__7054 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7054) : f.call(null,G__7054));
};
var G__7072 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7073__i = 0, G__7073__a = new Array(arguments.length -  3);
while (G__7073__i < G__7073__a.length) {G__7073__a[G__7073__i] = arguments[G__7073__i + 3]; ++G__7073__i;}
  args = new cljs.core.IndexedSeq(G__7073__a,0);
} 
return G__7072__delegate.call(this,x,y,z,args);};
G__7072.cljs$lang$maxFixedArity = 3;
G__7072.cljs$lang$applyTo = (function (arglist__7074){
var x = cljs.core.first(arglist__7074);
arglist__7074 = cljs.core.next(arglist__7074);
var y = cljs.core.first(arglist__7074);
arglist__7074 = cljs.core.next(arglist__7074);
var z = cljs.core.first(arglist__7074);
var args = cljs.core.rest(arglist__7074);
return G__7072__delegate(x,y,z,args);
});
G__7072.cljs$core$IFn$_invoke$arity$variadic = G__7072__delegate;
return G__7072;
})()
;
G__7071 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__7071__0.call(this);
case 1:
return G__7071__1.call(this,x);
case 2:
return G__7071__2.call(this,x,y);
case 3:
return G__7071__3.call(this,x,y,z);
default:
var G__7075 = null;
if (arguments.length > 3) {
var G__7076__i = 0, G__7076__a = new Array(arguments.length -  3);
while (G__7076__i < G__7076__a.length) {G__7076__a[G__7076__i] = arguments[G__7076__i + 3]; ++G__7076__i;}
G__7075 = new cljs.core.IndexedSeq(G__7076__a,0);
}
return G__7071__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7075);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7071.cljs$lang$maxFixedArity = 3;
G__7071.cljs$lang$applyTo = G__7071__4.cljs$lang$applyTo;
G__7071.cljs$core$IFn$_invoke$arity$0 = G__7071__0;
G__7071.cljs$core$IFn$_invoke$arity$1 = G__7071__1;
G__7071.cljs$core$IFn$_invoke$arity$2 = G__7071__2;
G__7071.cljs$core$IFn$_invoke$arity$3 = G__7071__3;
G__7071.cljs$core$IFn$_invoke$arity$variadic = G__7071__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7071;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__7077 = null;
var G__7077__0 = (function (){
var G__7055 = (function (){var G__7056 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7056) : g.call(null,G__7056));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7055) : f.call(null,G__7055));
});
var G__7077__1 = (function (x){
var G__7057 = (function (){var G__7058 = (function (){var G__7059 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__7059) : h.call(null,G__7059));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7058) : g.call(null,G__7058));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7057) : f.call(null,G__7057));
});
var G__7077__2 = (function (x,y){
var G__7060 = (function (){var G__7061 = (function (){var G__7062 = x;
var G__7063 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__7062,G__7063) : h.call(null,G__7062,G__7063));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7061) : g.call(null,G__7061));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7060) : f.call(null,G__7060));
});
var G__7077__3 = (function (x,y,z){
var G__7064 = (function (){var G__7065 = (function (){var G__7066 = x;
var G__7067 = y;
var G__7068 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__7066,G__7067,G__7068) : h.call(null,G__7066,G__7067,G__7068));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7065) : g.call(null,G__7065));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7064) : f.call(null,G__7064));
});
var G__7077__4 = (function() { 
var G__7078__delegate = function (x,y,z,args){
var G__7069 = (function (){var G__7070 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7070) : g.call(null,G__7070));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7069) : f.call(null,G__7069));
};
var G__7078 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7079__i = 0, G__7079__a = new Array(arguments.length -  3);
while (G__7079__i < G__7079__a.length) {G__7079__a[G__7079__i] = arguments[G__7079__i + 3]; ++G__7079__i;}
  args = new cljs.core.IndexedSeq(G__7079__a,0);
} 
return G__7078__delegate.call(this,x,y,z,args);};
G__7078.cljs$lang$maxFixedArity = 3;
G__7078.cljs$lang$applyTo = (function (arglist__7080){
var x = cljs.core.first(arglist__7080);
arglist__7080 = cljs.core.next(arglist__7080);
var y = cljs.core.first(arglist__7080);
arglist__7080 = cljs.core.next(arglist__7080);
var z = cljs.core.first(arglist__7080);
var args = cljs.core.rest(arglist__7080);
return G__7078__delegate(x,y,z,args);
});
G__7078.cljs$core$IFn$_invoke$arity$variadic = G__7078__delegate;
return G__7078;
})()
;
G__7077 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__7077__0.call(this);
case 1:
return G__7077__1.call(this,x);
case 2:
return G__7077__2.call(this,x,y);
case 3:
return G__7077__3.call(this,x,y,z);
default:
var G__7081 = null;
if (arguments.length > 3) {
var G__7082__i = 0, G__7082__a = new Array(arguments.length -  3);
while (G__7082__i < G__7082__a.length) {G__7082__a[G__7082__i] = arguments[G__7082__i + 3]; ++G__7082__i;}
G__7081 = new cljs.core.IndexedSeq(G__7082__a,0);
}
return G__7077__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7081);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7077.cljs$lang$maxFixedArity = 3;
G__7077.cljs$lang$applyTo = G__7077__4.cljs$lang$applyTo;
G__7077.cljs$core$IFn$_invoke$arity$0 = G__7077__0;
G__7077.cljs$core$IFn$_invoke$arity$1 = G__7077__1;
G__7077.cljs$core$IFn$_invoke$arity$2 = G__7077__2;
G__7077.cljs$core$IFn$_invoke$arity$3 = G__7077__3;
G__7077.cljs$core$IFn$_invoke$arity$variadic = G__7077__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7077;
})()
});
var comp__4 = (function() { 
var G__7083__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__7084__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__7085 = cljs.core.first(fs__$2).call(null,ret);
var G__7086 = cljs.core.next(fs__$2);
ret = G__7085;
fs__$2 = G__7086;
continue;
} else {
return ret;
}
break;
}
};
var G__7084 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__7087__i = 0, G__7087__a = new Array(arguments.length -  0);
while (G__7087__i < G__7087__a.length) {G__7087__a[G__7087__i] = arguments[G__7087__i + 0]; ++G__7087__i;}
  args = new cljs.core.IndexedSeq(G__7087__a,0);
} 
return G__7084__delegate.call(this,args);};
G__7084.cljs$lang$maxFixedArity = 0;
G__7084.cljs$lang$applyTo = (function (arglist__7088){
var args = cljs.core.seq(arglist__7088);
return G__7084__delegate(args);
});
G__7084.cljs$core$IFn$_invoke$arity$variadic = G__7084__delegate;
return G__7084;
})()
;
;})(fs__$1))
};
var G__7083 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__7089__i = 0, G__7089__a = new Array(arguments.length -  3);
while (G__7089__i < G__7089__a.length) {G__7089__a[G__7089__i] = arguments[G__7089__i + 3]; ++G__7089__i;}
  fs = new cljs.core.IndexedSeq(G__7089__a,0);
} 
return G__7083__delegate.call(this,f1,f2,f3,fs);};
G__7083.cljs$lang$maxFixedArity = 3;
G__7083.cljs$lang$applyTo = (function (arglist__7090){
var f1 = cljs.core.first(arglist__7090);
arglist__7090 = cljs.core.next(arglist__7090);
var f2 = cljs.core.first(arglist__7090);
arglist__7090 = cljs.core.next(arglist__7090);
var f3 = cljs.core.first(arglist__7090);
var fs = cljs.core.rest(arglist__7090);
return G__7083__delegate(f1,f2,f3,fs);
});
G__7083.cljs$core$IFn$_invoke$arity$variadic = G__7083__delegate;
return G__7083;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__7091 = null;
if (arguments.length > 3) {
var G__7092__i = 0, G__7092__a = new Array(arguments.length -  3);
while (G__7092__i < G__7092__a.length) {G__7092__a[G__7092__i] = arguments[G__7092__i + 3]; ++G__7092__i;}
G__7091 = new cljs.core.IndexedSeq(G__7092__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__7091);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__7177 = null;
var G__7177__0 = (function (){
var G__7135 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7135) : f.call(null,G__7135));
});
var G__7177__1 = (function (x){
var G__7136 = arg1;
var G__7137 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7136,G__7137) : f.call(null,G__7136,G__7137));
});
var G__7177__2 = (function (x,y){
var G__7138 = arg1;
var G__7139 = x;
var G__7140 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7138,G__7139,G__7140) : f.call(null,G__7138,G__7139,G__7140));
});
var G__7177__3 = (function (x,y,z){
var G__7141 = arg1;
var G__7142 = x;
var G__7143 = y;
var G__7144 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7141,G__7142,G__7143,G__7144) : f.call(null,G__7141,G__7142,G__7143,G__7144));
});
var G__7177__4 = (function() { 
var G__7178__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__7178 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7179__i = 0, G__7179__a = new Array(arguments.length -  3);
while (G__7179__i < G__7179__a.length) {G__7179__a[G__7179__i] = arguments[G__7179__i + 3]; ++G__7179__i;}
  args = new cljs.core.IndexedSeq(G__7179__a,0);
} 
return G__7178__delegate.call(this,x,y,z,args);};
G__7178.cljs$lang$maxFixedArity = 3;
G__7178.cljs$lang$applyTo = (function (arglist__7180){
var x = cljs.core.first(arglist__7180);
arglist__7180 = cljs.core.next(arglist__7180);
var y = cljs.core.first(arglist__7180);
arglist__7180 = cljs.core.next(arglist__7180);
var z = cljs.core.first(arglist__7180);
var args = cljs.core.rest(arglist__7180);
return G__7178__delegate(x,y,z,args);
});
G__7178.cljs$core$IFn$_invoke$arity$variadic = G__7178__delegate;
return G__7178;
})()
;
G__7177 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__7177__0.call(this);
case 1:
return G__7177__1.call(this,x);
case 2:
return G__7177__2.call(this,x,y);
case 3:
return G__7177__3.call(this,x,y,z);
default:
var G__7181 = null;
if (arguments.length > 3) {
var G__7182__i = 0, G__7182__a = new Array(arguments.length -  3);
while (G__7182__i < G__7182__a.length) {G__7182__a[G__7182__i] = arguments[G__7182__i + 3]; ++G__7182__i;}
G__7181 = new cljs.core.IndexedSeq(G__7182__a,0);
}
return G__7177__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7181);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7177.cljs$lang$maxFixedArity = 3;
G__7177.cljs$lang$applyTo = G__7177__4.cljs$lang$applyTo;
G__7177.cljs$core$IFn$_invoke$arity$0 = G__7177__0;
G__7177.cljs$core$IFn$_invoke$arity$1 = G__7177__1;
G__7177.cljs$core$IFn$_invoke$arity$2 = G__7177__2;
G__7177.cljs$core$IFn$_invoke$arity$3 = G__7177__3;
G__7177.cljs$core$IFn$_invoke$arity$variadic = G__7177__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7177;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__7183 = null;
var G__7183__0 = (function (){
var G__7145 = arg1;
var G__7146 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7145,G__7146) : f.call(null,G__7145,G__7146));
});
var G__7183__1 = (function (x){
var G__7147 = arg1;
var G__7148 = arg2;
var G__7149 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7147,G__7148,G__7149) : f.call(null,G__7147,G__7148,G__7149));
});
var G__7183__2 = (function (x,y){
var G__7150 = arg1;
var G__7151 = arg2;
var G__7152 = x;
var G__7153 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7150,G__7151,G__7152,G__7153) : f.call(null,G__7150,G__7151,G__7152,G__7153));
});
var G__7183__3 = (function (x,y,z){
var G__7154 = arg1;
var G__7155 = arg2;
var G__7156 = x;
var G__7157 = y;
var G__7158 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7154,G__7155,G__7156,G__7157,G__7158) : f.call(null,G__7154,G__7155,G__7156,G__7157,G__7158));
});
var G__7183__4 = (function() { 
var G__7184__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__7184 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7185__i = 0, G__7185__a = new Array(arguments.length -  3);
while (G__7185__i < G__7185__a.length) {G__7185__a[G__7185__i] = arguments[G__7185__i + 3]; ++G__7185__i;}
  args = new cljs.core.IndexedSeq(G__7185__a,0);
} 
return G__7184__delegate.call(this,x,y,z,args);};
G__7184.cljs$lang$maxFixedArity = 3;
G__7184.cljs$lang$applyTo = (function (arglist__7186){
var x = cljs.core.first(arglist__7186);
arglist__7186 = cljs.core.next(arglist__7186);
var y = cljs.core.first(arglist__7186);
arglist__7186 = cljs.core.next(arglist__7186);
var z = cljs.core.first(arglist__7186);
var args = cljs.core.rest(arglist__7186);
return G__7184__delegate(x,y,z,args);
});
G__7184.cljs$core$IFn$_invoke$arity$variadic = G__7184__delegate;
return G__7184;
})()
;
G__7183 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__7183__0.call(this);
case 1:
return G__7183__1.call(this,x);
case 2:
return G__7183__2.call(this,x,y);
case 3:
return G__7183__3.call(this,x,y,z);
default:
var G__7187 = null;
if (arguments.length > 3) {
var G__7188__i = 0, G__7188__a = new Array(arguments.length -  3);
while (G__7188__i < G__7188__a.length) {G__7188__a[G__7188__i] = arguments[G__7188__i + 3]; ++G__7188__i;}
G__7187 = new cljs.core.IndexedSeq(G__7188__a,0);
}
return G__7183__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7187);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7183.cljs$lang$maxFixedArity = 3;
G__7183.cljs$lang$applyTo = G__7183__4.cljs$lang$applyTo;
G__7183.cljs$core$IFn$_invoke$arity$0 = G__7183__0;
G__7183.cljs$core$IFn$_invoke$arity$1 = G__7183__1;
G__7183.cljs$core$IFn$_invoke$arity$2 = G__7183__2;
G__7183.cljs$core$IFn$_invoke$arity$3 = G__7183__3;
G__7183.cljs$core$IFn$_invoke$arity$variadic = G__7183__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7183;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__7189 = null;
var G__7189__0 = (function (){
var G__7159 = arg1;
var G__7160 = arg2;
var G__7161 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7159,G__7160,G__7161) : f.call(null,G__7159,G__7160,G__7161));
});
var G__7189__1 = (function (x){
var G__7162 = arg1;
var G__7163 = arg2;
var G__7164 = arg3;
var G__7165 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7162,G__7163,G__7164,G__7165) : f.call(null,G__7162,G__7163,G__7164,G__7165));
});
var G__7189__2 = (function (x,y){
var G__7166 = arg1;
var G__7167 = arg2;
var G__7168 = arg3;
var G__7169 = x;
var G__7170 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7166,G__7167,G__7168,G__7169,G__7170) : f.call(null,G__7166,G__7167,G__7168,G__7169,G__7170));
});
var G__7189__3 = (function (x,y,z){
var G__7171 = arg1;
var G__7172 = arg2;
var G__7173 = arg3;
var G__7174 = x;
var G__7175 = y;
var G__7176 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__7171,G__7172,G__7173,G__7174,G__7175,G__7176) : f.call(null,G__7171,G__7172,G__7173,G__7174,G__7175,G__7176));
});
var G__7189__4 = (function() { 
var G__7190__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__7190 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7191__i = 0, G__7191__a = new Array(arguments.length -  3);
while (G__7191__i < G__7191__a.length) {G__7191__a[G__7191__i] = arguments[G__7191__i + 3]; ++G__7191__i;}
  args = new cljs.core.IndexedSeq(G__7191__a,0);
} 
return G__7190__delegate.call(this,x,y,z,args);};
G__7190.cljs$lang$maxFixedArity = 3;
G__7190.cljs$lang$applyTo = (function (arglist__7192){
var x = cljs.core.first(arglist__7192);
arglist__7192 = cljs.core.next(arglist__7192);
var y = cljs.core.first(arglist__7192);
arglist__7192 = cljs.core.next(arglist__7192);
var z = cljs.core.first(arglist__7192);
var args = cljs.core.rest(arglist__7192);
return G__7190__delegate(x,y,z,args);
});
G__7190.cljs$core$IFn$_invoke$arity$variadic = G__7190__delegate;
return G__7190;
})()
;
G__7189 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__7189__0.call(this);
case 1:
return G__7189__1.call(this,x);
case 2:
return G__7189__2.call(this,x,y);
case 3:
return G__7189__3.call(this,x,y,z);
default:
var G__7193 = null;
if (arguments.length > 3) {
var G__7194__i = 0, G__7194__a = new Array(arguments.length -  3);
while (G__7194__i < G__7194__a.length) {G__7194__a[G__7194__i] = arguments[G__7194__i + 3]; ++G__7194__i;}
G__7193 = new cljs.core.IndexedSeq(G__7194__a,0);
}
return G__7189__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7193);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7189.cljs$lang$maxFixedArity = 3;
G__7189.cljs$lang$applyTo = G__7189__4.cljs$lang$applyTo;
G__7189.cljs$core$IFn$_invoke$arity$0 = G__7189__0;
G__7189.cljs$core$IFn$_invoke$arity$1 = G__7189__1;
G__7189.cljs$core$IFn$_invoke$arity$2 = G__7189__2;
G__7189.cljs$core$IFn$_invoke$arity$3 = G__7189__3;
G__7189.cljs$core$IFn$_invoke$arity$variadic = G__7189__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7189;
})()
});
var partial__5 = (function() { 
var G__7195__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__7196__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__7196 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__7197__i = 0, G__7197__a = new Array(arguments.length -  0);
while (G__7197__i < G__7197__a.length) {G__7197__a[G__7197__i] = arguments[G__7197__i + 0]; ++G__7197__i;}
  args = new cljs.core.IndexedSeq(G__7197__a,0);
} 
return G__7196__delegate.call(this,args);};
G__7196.cljs$lang$maxFixedArity = 0;
G__7196.cljs$lang$applyTo = (function (arglist__7198){
var args = cljs.core.seq(arglist__7198);
return G__7196__delegate(args);
});
G__7196.cljs$core$IFn$_invoke$arity$variadic = G__7196__delegate;
return G__7196;
})()
;
};
var G__7195 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__7199__i = 0, G__7199__a = new Array(arguments.length -  4);
while (G__7199__i < G__7199__a.length) {G__7199__a[G__7199__i] = arguments[G__7199__i + 4]; ++G__7199__i;}
  more = new cljs.core.IndexedSeq(G__7199__a,0);
} 
return G__7195__delegate.call(this,f,arg1,arg2,arg3,more);};
G__7195.cljs$lang$maxFixedArity = 4;
G__7195.cljs$lang$applyTo = (function (arglist__7200){
var f = cljs.core.first(arglist__7200);
arglist__7200 = cljs.core.next(arglist__7200);
var arg1 = cljs.core.first(arglist__7200);
arglist__7200 = cljs.core.next(arglist__7200);
var arg2 = cljs.core.first(arglist__7200);
arglist__7200 = cljs.core.next(arglist__7200);
var arg3 = cljs.core.first(arglist__7200);
var more = cljs.core.rest(arglist__7200);
return G__7195__delegate(f,arg1,arg2,arg3,more);
});
G__7195.cljs$core$IFn$_invoke$arity$variadic = G__7195__delegate;
return G__7195;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__7201 = null;
if (arguments.length > 4) {
var G__7202__i = 0, G__7202__a = new Array(arguments.length -  4);
while (G__7202__i < G__7202__a.length) {G__7202__a[G__7202__i] = arguments[G__7202__i + 4]; ++G__7202__i;}
G__7201 = new cljs.core.IndexedSeq(G__7202__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__7201);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__7235 = null;
var G__7235__1 = (function (a){
var G__7219 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7219) : f.call(null,G__7219));
});
var G__7235__2 = (function (a,b){
var G__7220 = (((a == null))?x:a);
var G__7221 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7220,G__7221) : f.call(null,G__7220,G__7221));
});
var G__7235__3 = (function (a,b,c){
var G__7222 = (((a == null))?x:a);
var G__7223 = b;
var G__7224 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7222,G__7223,G__7224) : f.call(null,G__7222,G__7223,G__7224));
});
var G__7235__4 = (function() { 
var G__7236__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__7236 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__7237__i = 0, G__7237__a = new Array(arguments.length -  3);
while (G__7237__i < G__7237__a.length) {G__7237__a[G__7237__i] = arguments[G__7237__i + 3]; ++G__7237__i;}
  ds = new cljs.core.IndexedSeq(G__7237__a,0);
} 
return G__7236__delegate.call(this,a,b,c,ds);};
G__7236.cljs$lang$maxFixedArity = 3;
G__7236.cljs$lang$applyTo = (function (arglist__7238){
var a = cljs.core.first(arglist__7238);
arglist__7238 = cljs.core.next(arglist__7238);
var b = cljs.core.first(arglist__7238);
arglist__7238 = cljs.core.next(arglist__7238);
var c = cljs.core.first(arglist__7238);
var ds = cljs.core.rest(arglist__7238);
return G__7236__delegate(a,b,c,ds);
});
G__7236.cljs$core$IFn$_invoke$arity$variadic = G__7236__delegate;
return G__7236;
})()
;
G__7235 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__7235__1.call(this,a);
case 2:
return G__7235__2.call(this,a,b);
case 3:
return G__7235__3.call(this,a,b,c);
default:
var G__7239 = null;
if (arguments.length > 3) {
var G__7240__i = 0, G__7240__a = new Array(arguments.length -  3);
while (G__7240__i < G__7240__a.length) {G__7240__a[G__7240__i] = arguments[G__7240__i + 3]; ++G__7240__i;}
G__7239 = new cljs.core.IndexedSeq(G__7240__a,0);
}
return G__7235__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__7239);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7235.cljs$lang$maxFixedArity = 3;
G__7235.cljs$lang$applyTo = G__7235__4.cljs$lang$applyTo;
G__7235.cljs$core$IFn$_invoke$arity$1 = G__7235__1;
G__7235.cljs$core$IFn$_invoke$arity$2 = G__7235__2;
G__7235.cljs$core$IFn$_invoke$arity$3 = G__7235__3;
G__7235.cljs$core$IFn$_invoke$arity$variadic = G__7235__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7235;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__7241 = null;
var G__7241__2 = (function (a,b){
var G__7225 = (((a == null))?x:a);
var G__7226 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7225,G__7226) : f.call(null,G__7225,G__7226));
});
var G__7241__3 = (function (a,b,c){
var G__7227 = (((a == null))?x:a);
var G__7228 = (((b == null))?y:b);
var G__7229 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7227,G__7228,G__7229) : f.call(null,G__7227,G__7228,G__7229));
});
var G__7241__4 = (function() { 
var G__7242__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__7242 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__7243__i = 0, G__7243__a = new Array(arguments.length -  3);
while (G__7243__i < G__7243__a.length) {G__7243__a[G__7243__i] = arguments[G__7243__i + 3]; ++G__7243__i;}
  ds = new cljs.core.IndexedSeq(G__7243__a,0);
} 
return G__7242__delegate.call(this,a,b,c,ds);};
G__7242.cljs$lang$maxFixedArity = 3;
G__7242.cljs$lang$applyTo = (function (arglist__7244){
var a = cljs.core.first(arglist__7244);
arglist__7244 = cljs.core.next(arglist__7244);
var b = cljs.core.first(arglist__7244);
arglist__7244 = cljs.core.next(arglist__7244);
var c = cljs.core.first(arglist__7244);
var ds = cljs.core.rest(arglist__7244);
return G__7242__delegate(a,b,c,ds);
});
G__7242.cljs$core$IFn$_invoke$arity$variadic = G__7242__delegate;
return G__7242;
})()
;
G__7241 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__7241__2.call(this,a,b);
case 3:
return G__7241__3.call(this,a,b,c);
default:
var G__7245 = null;
if (arguments.length > 3) {
var G__7246__i = 0, G__7246__a = new Array(arguments.length -  3);
while (G__7246__i < G__7246__a.length) {G__7246__a[G__7246__i] = arguments[G__7246__i + 3]; ++G__7246__i;}
G__7245 = new cljs.core.IndexedSeq(G__7246__a,0);
}
return G__7241__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__7245);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7241.cljs$lang$maxFixedArity = 3;
G__7241.cljs$lang$applyTo = G__7241__4.cljs$lang$applyTo;
G__7241.cljs$core$IFn$_invoke$arity$2 = G__7241__2;
G__7241.cljs$core$IFn$_invoke$arity$3 = G__7241__3;
G__7241.cljs$core$IFn$_invoke$arity$variadic = G__7241__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7241;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__7247 = null;
var G__7247__2 = (function (a,b){
var G__7230 = (((a == null))?x:a);
var G__7231 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7230,G__7231) : f.call(null,G__7230,G__7231));
});
var G__7247__3 = (function (a,b,c){
var G__7232 = (((a == null))?x:a);
var G__7233 = (((b == null))?y:b);
var G__7234 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7232,G__7233,G__7234) : f.call(null,G__7232,G__7233,G__7234));
});
var G__7247__4 = (function() { 
var G__7248__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__7248 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__7249__i = 0, G__7249__a = new Array(arguments.length -  3);
while (G__7249__i < G__7249__a.length) {G__7249__a[G__7249__i] = arguments[G__7249__i + 3]; ++G__7249__i;}
  ds = new cljs.core.IndexedSeq(G__7249__a,0);
} 
return G__7248__delegate.call(this,a,b,c,ds);};
G__7248.cljs$lang$maxFixedArity = 3;
G__7248.cljs$lang$applyTo = (function (arglist__7250){
var a = cljs.core.first(arglist__7250);
arglist__7250 = cljs.core.next(arglist__7250);
var b = cljs.core.first(arglist__7250);
arglist__7250 = cljs.core.next(arglist__7250);
var c = cljs.core.first(arglist__7250);
var ds = cljs.core.rest(arglist__7250);
return G__7248__delegate(a,b,c,ds);
});
G__7248.cljs$core$IFn$_invoke$arity$variadic = G__7248__delegate;
return G__7248;
})()
;
G__7247 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__7247__2.call(this,a,b);
case 3:
return G__7247__3.call(this,a,b,c);
default:
var G__7251 = null;
if (arguments.length > 3) {
var G__7252__i = 0, G__7252__a = new Array(arguments.length -  3);
while (G__7252__i < G__7252__a.length) {G__7252__a[G__7252__i] = arguments[G__7252__i + 3]; ++G__7252__i;}
G__7251 = new cljs.core.IndexedSeq(G__7252__a,0);
}
return G__7247__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__7251);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7247.cljs$lang$maxFixedArity = 3;
G__7247.cljs$lang$applyTo = G__7247__4.cljs$lang$applyTo;
G__7247.cljs$core$IFn$_invoke$arity$2 = G__7247__2;
G__7247.cljs$core$IFn$_invoke$arity$3 = G__7247__3;
G__7247.cljs$core$IFn$_invoke$arity$variadic = G__7247__4.cljs$core$IFn$_invoke$arity$variadic;
return G__7247;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__7283 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__7283) : cljs.core.volatile_BANG_.call(null,G__7283));
})();
return ((function (i){
return (function() {
var G__7313 = null;
var G__7313__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__7313__1 = (function (result){
var G__7284 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__7284) : rf.call(null,G__7284));
});
var G__7313__2 = (function (result,input){
var G__7285 = result;
var G__7286 = (function (){var G__7287 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__7288 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7287,G__7288) : f.call(null,G__7287,G__7288));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7285,G__7286) : rf.call(null,G__7285,G__7286));
});
G__7313 = function(result,input){
switch(arguments.length){
case 0:
return G__7313__0.call(this);
case 1:
return G__7313__1.call(this,result);
case 2:
return G__7313__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7313.cljs$core$IFn$_invoke$arity$0 = G__7313__0;
G__7313.cljs$core$IFn$_invoke$arity$1 = G__7313__1;
G__7313.cljs$core$IFn$_invoke$arity$2 = G__7313__2;
return G__7313;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll__$1);
if(temp__4425__auto__){
var s = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4014__auto___7314 = size;
var i_7315 = (0);
while(true){
if((i_7315 < n__4014__auto___7314)){
cljs.core.chunk_append(b,(function (){var G__7309 = (idx + i_7315);
var G__7310 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_7315);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7309,G__7310) : f.call(null,G__7309,G__7310));
})());

var G__7316 = (i_7315 + (1));
i_7315 = G__7316;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__7311 = idx;
var G__7312 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7311,G__7312) : f.call(null,G__7311,G__7312));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__7335 = null;
var G__7335__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__7335__1 = (function (result){
var G__7329 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__7329) : rf.call(null,G__7329));
});
var G__7335__2 = (function (result,input){
var v = (function (){var G__7330 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7330) : f.call(null,G__7330));
})();
if((v == null)){
return result;
} else {
var G__7331 = result;
var G__7332 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7331,G__7332) : rf.call(null,G__7331,G__7332));
}
});
G__7335 = function(result,input){
switch(arguments.length){
case 0:
return G__7335__0.call(this);
case 1:
return G__7335__1.call(this,result);
case 2:
return G__7335__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7335.cljs$core$IFn$_invoke$arity$0 = G__7335__0;
G__7335.cljs$core$IFn$_invoke$arity$1 = G__7335__1;
G__7335.cljs$core$IFn$_invoke$arity$2 = G__7335__2;
return G__7335;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4014__auto___7336 = size;
var i_7337 = (0);
while(true){
if((i_7337 < n__4014__auto___7336)){
var x_7338 = (function (){var G__7333 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_7337);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7333) : f.call(null,G__7333));
})();
if((x_7338 == null)){
} else {
cljs.core.chunk_append(b,x_7338);
}

var G__7339 = (i_7337 + (1));
i_7337 = G__7339;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__7334 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7334) : f.call(null,G__7334));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition1$ = 16386;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
})
cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__7340 = cljs.core.seq(self__.watches);
var chunk__7341 = null;
var count__7342 = (0);
var i__7343 = (0);
while(true){
if((i__7343 < count__7342)){
var vec__7344 = chunk__7341.cljs$core$IIndexed$_nth$arity$2(null,i__7343);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7344,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7344,(1),null);
var G__7345_7355 = key;
var G__7346_7356 = this$__$1;
var G__7347_7357 = oldval;
var G__7348_7358 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7345_7355,G__7346_7356,G__7347_7357,G__7348_7358) : f.call(null,G__7345_7355,G__7346_7356,G__7347_7357,G__7348_7358));

var G__7359 = seq__7340;
var G__7360 = chunk__7341;
var G__7361 = count__7342;
var G__7362 = (i__7343 + (1));
seq__7340 = G__7359;
chunk__7341 = G__7360;
count__7342 = G__7361;
i__7343 = G__7362;
continue;
} else {
var temp__4425__auto__ = cljs.core.seq(seq__7340);
if(temp__4425__auto__){
var seq__7340__$1 = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__7340__$1)){
var c__3914__auto__ = cljs.core.chunk_first(seq__7340__$1);
var G__7363 = cljs.core.chunk_rest(seq__7340__$1);
var G__7364 = c__3914__auto__;
var G__7365 = cljs.core.count(c__3914__auto__);
var G__7366 = (0);
seq__7340 = G__7363;
chunk__7341 = G__7364;
count__7342 = G__7365;
i__7343 = G__7366;
continue;
} else {
var vec__7349 = cljs.core.first(seq__7340__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7349,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7349,(1),null);
var G__7350_7367 = key;
var G__7351_7368 = this$__$1;
var G__7352_7369 = oldval;
var G__7353_7370 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7350_7367,G__7351_7368,G__7352_7369,G__7353_7370) : f.call(null,G__7350_7367,G__7351_7368,G__7352_7369,G__7353_7370));

var G__7371 = cljs.core.next(seq__7340__$1);
var G__7372 = null;
var G__7373 = (0);
var G__7374 = (0);
seq__7340 = G__7371;
chunk__7341 = G__7372;
count__7342 = G__7373;
i__7343 = G__7374;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__7354 = this$__$1;
return goog.getUid(G__7354);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__7378__delegate = function (x,p__7375){
var map__7377 = p__7375;
var map__7377__$1 = ((cljs.core.seq_QMARK_(map__7377))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__7377):map__7377);
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7377__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7377__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__7378 = function (x,var_args){
var p__7375 = null;
if (arguments.length > 1) {
var G__7379__i = 0, G__7379__a = new Array(arguments.length -  1);
while (G__7379__i < G__7379__a.length) {G__7379__a[G__7379__i] = arguments[G__7379__i + 1]; ++G__7379__i;}
  p__7375 = new cljs.core.IndexedSeq(G__7379__a,0);
} 
return G__7378__delegate.call(this,x,p__7375);};
G__7378.cljs$lang$maxFixedArity = 1;
G__7378.cljs$lang$applyTo = (function (arglist__7380){
var x = cljs.core.first(arglist__7380);
var p__7375 = cljs.core.rest(arglist__7380);
return G__7378__delegate(x,p__7375);
});
G__7378.cljs$core$IFn$_invoke$arity$variadic = G__7378__delegate;
return G__7378;
})()
;
atom = function(x,var_args){
var p__7375 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__7381 = null;
if (arguments.length > 1) {
var G__7382__i = 0, G__7382__a = new Array(arguments.length -  1);
while (G__7382__i < G__7382__a.length) {G__7382__a[G__7382__i] = arguments[G__7382__i + 1]; ++G__7382__i;}
G__7381 = new cljs.core.IndexedSeq(G__7382__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__7381);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__7385 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__7385) : validate.call(null,G__7385));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__7386 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__7386) : cljs.core.pr_str.call(null,G__7386));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__7393 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7393) : f.call(null,G__7393));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__7394 = a.state;
var G__7395 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7394,G__7395) : f.call(null,G__7394,G__7395));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__7396 = a.state;
var G__7397 = x;
var G__7398 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7396,G__7397,G__7398) : f.call(null,G__7396,G__7397,G__7398));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__7399__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__7399 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__7400__i = 0, G__7400__a = new Array(arguments.length -  4);
while (G__7400__i < G__7400__a.length) {G__7400__a[G__7400__i] = arguments[G__7400__i + 4]; ++G__7400__i;}
  more = new cljs.core.IndexedSeq(G__7400__a,0);
} 
return G__7399__delegate.call(this,a,f,x,y,more);};
G__7399.cljs$lang$maxFixedArity = 4;
G__7399.cljs$lang$applyTo = (function (arglist__7401){
var a = cljs.core.first(arglist__7401);
arglist__7401 = cljs.core.next(arglist__7401);
var f = cljs.core.first(arglist__7401);
arglist__7401 = cljs.core.next(arglist__7401);
var x = cljs.core.first(arglist__7401);
arglist__7401 = cljs.core.next(arglist__7401);
var y = cljs.core.first(arglist__7401);
var more = cljs.core.rest(arglist__7401);
return G__7399__delegate(a,f,x,y,more);
});
G__7399.cljs$core$IFn$_invoke$arity$variadic = G__7399__delegate;
return G__7399;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__7402 = null;
if (arguments.length > 4) {
var G__7403__i = 0, G__7403__a = new Array(arguments.length -  4);
while (G__7403__i < G__7403__a.length) {G__7403__a[G__7403__i] = arguments[G__7403__i + 4]; ++G__7403__i;}
G__7402 = new cljs.core.IndexedSeq(G__7403__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__7402);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition0$ = 32768;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__7470 = null;
var G__7470__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__7470__1 = (function (result){
var G__7437 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__7437) : rf.call(null,G__7437));
});
var G__7470__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__7438 = i;
var G__7439 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7438,G__7439) : f.call(null,G__7438,G__7439));
})();
if((v == null)){
return result;
} else {
var G__7440 = result;
var G__7441 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7440,G__7441) : rf.call(null,G__7440,G__7441));
}
});
G__7470 = function(result,input){
switch(arguments.length){
case 0:
return G__7470__0.call(this);
case 1:
return G__7470__1.call(this,result);
case 2:
return G__7470__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__7470.cljs$core$IFn$_invoke$arity$0 = G__7470__0;
G__7470.cljs$core$IFn$_invoke$arity$1 = G__7470__1;
G__7470.cljs$core$IFn$_invoke$arity$2 = G__7470__2;
return G__7470;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll__$1);
if(temp__4425__auto__){
var s = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4014__auto___7471 = size;
var i_7472 = (0);
while(true){
if((i_7472 < n__4014__auto___7471)){
var x_7473 = (function (){var G__7466 = (idx + i_7472);
var G__7467 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_7472);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7466,G__7467) : f.call(null,G__7466,G__7467));
})();
if((x_7473 == null)){
} else {
cljs.core.chunk_append(b,x_7473);
}

var G__7474 = (i_7472 + (1));
i_7472 = G__7474;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__7468 = idx;
var G__7469 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7468,G__7469) : f.call(null,G__7468,G__7469));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__7688 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__7688) : p.call(null,G__7688));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3115__auto__ = (function (){var G__7690 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__7690) : p.call(null,G__7690));
})();
if(cljs.core.truth_(and__3115__auto__)){
var G__7691 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__7691) : p.call(null,G__7691));
} else {
return and__3115__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3115__auto__ = (function (){var G__7693 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__7693) : p.call(null,G__7693));
})();
if(cljs.core.truth_(and__3115__auto__)){
var and__3115__auto____$1 = (function (){var G__7695 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__7695) : p.call(null,G__7695));
})();
if(cljs.core.truth_(and__3115__auto____$1)){
var G__7696 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__7696) : p.call(null,G__7696));
} else {
return and__3115__auto____$1;
}
} else {
return and__3115__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__7865__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__7865 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7866__i = 0, G__7866__a = new Array(arguments.length -  3);
while (G__7866__i < G__7866__a.length) {G__7866__a[G__7866__i] = arguments[G__7866__i + 3]; ++G__7866__i;}
  args = new cljs.core.IndexedSeq(G__7866__a,0);
} 
return G__7865__delegate.call(this,x,y,z,args);};
G__7865.cljs$lang$maxFixedArity = 3;
G__7865.cljs$lang$applyTo = (function (arglist__7867){
var x = cljs.core.first(arglist__7867);
arglist__7867 = cljs.core.next(arglist__7867);
var y = cljs.core.first(arglist__7867);
arglist__7867 = cljs.core.next(arglist__7867);
var z = cljs.core.first(arglist__7867);
var args = cljs.core.rest(arglist__7867);
return G__7865__delegate(x,y,z,args);
});
G__7865.cljs$core$IFn$_invoke$arity$variadic = G__7865__delegate;
return G__7865;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__7868 = null;
if (arguments.length > 3) {
var G__7869__i = 0, G__7869__a = new Array(arguments.length -  3);
while (G__7869__i < G__7869__a.length) {G__7869__a[G__7869__i] = arguments[G__7869__i + 3]; ++G__7869__i;}
G__7868 = new cljs.core.IndexedSeq(G__7869__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7868);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3115__auto__ = (function (){var G__7728 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7728) : p1.call(null,G__7728));
})();
if(cljs.core.truth_(and__3115__auto__)){
var G__7729 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7729) : p2.call(null,G__7729));
} else {
return and__3115__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3115__auto__ = (function (){var G__7731 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7731) : p1.call(null,G__7731));
})();
if(cljs.core.truth_(and__3115__auto__)){
var and__3115__auto____$1 = (function (){var G__7733 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7733) : p1.call(null,G__7733));
})();
if(cljs.core.truth_(and__3115__auto____$1)){
var and__3115__auto____$2 = (function (){var G__7735 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7735) : p2.call(null,G__7735));
})();
if(cljs.core.truth_(and__3115__auto____$2)){
var G__7736 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7736) : p2.call(null,G__7736));
} else {
return and__3115__auto____$2;
}
} else {
return and__3115__auto____$1;
}
} else {
return and__3115__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3115__auto__ = (function (){var G__7738 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7738) : p1.call(null,G__7738));
})();
if(cljs.core.truth_(and__3115__auto__)){
var and__3115__auto____$1 = (function (){var G__7740 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7740) : p1.call(null,G__7740));
})();
if(cljs.core.truth_(and__3115__auto____$1)){
var and__3115__auto____$2 = (function (){var G__7742 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7742) : p1.call(null,G__7742));
})();
if(cljs.core.truth_(and__3115__auto____$2)){
var and__3115__auto____$3 = (function (){var G__7744 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7744) : p2.call(null,G__7744));
})();
if(cljs.core.truth_(and__3115__auto____$3)){
var and__3115__auto____$4 = (function (){var G__7746 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7746) : p2.call(null,G__7746));
})();
if(cljs.core.truth_(and__3115__auto____$4)){
var G__7747 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7747) : p2.call(null,G__7747));
} else {
return and__3115__auto____$4;
}
} else {
return and__3115__auto____$3;
}
} else {
return and__3115__auto____$2;
}
} else {
return and__3115__auto____$1;
}
} else {
return and__3115__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__7870__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__7475_SHARP_){
var and__3115__auto__ = (function (){var G__7752 = p1__7475_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7752) : p1.call(null,G__7752));
})();
if(cljs.core.truth_(and__3115__auto__)){
var G__7753 = p1__7475_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7753) : p2.call(null,G__7753));
} else {
return and__3115__auto__;
}
}),args)));
};
var G__7870 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7871__i = 0, G__7871__a = new Array(arguments.length -  3);
while (G__7871__i < G__7871__a.length) {G__7871__a[G__7871__i] = arguments[G__7871__i + 3]; ++G__7871__i;}
  args = new cljs.core.IndexedSeq(G__7871__a,0);
} 
return G__7870__delegate.call(this,x,y,z,args);};
G__7870.cljs$lang$maxFixedArity = 3;
G__7870.cljs$lang$applyTo = (function (arglist__7872){
var x = cljs.core.first(arglist__7872);
arglist__7872 = cljs.core.next(arglist__7872);
var y = cljs.core.first(arglist__7872);
arglist__7872 = cljs.core.next(arglist__7872);
var z = cljs.core.first(arglist__7872);
var args = cljs.core.rest(arglist__7872);
return G__7870__delegate(x,y,z,args);
});
G__7870.cljs$core$IFn$_invoke$arity$variadic = G__7870__delegate;
return G__7870;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__7873 = null;
if (arguments.length > 3) {
var G__7874__i = 0, G__7874__a = new Array(arguments.length -  3);
while (G__7874__i < G__7874__a.length) {G__7874__a[G__7874__i] = arguments[G__7874__i + 3]; ++G__7874__i;}
G__7873 = new cljs.core.IndexedSeq(G__7874__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7873);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3115__auto__ = (function (){var G__7799 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7799) : p1.call(null,G__7799));
})();
if(cljs.core.truth_(and__3115__auto__)){
var and__3115__auto____$1 = (function (){var G__7801 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7801) : p2.call(null,G__7801));
})();
if(cljs.core.truth_(and__3115__auto____$1)){
var G__7802 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__7802) : p3.call(null,G__7802));
} else {
return and__3115__auto____$1;
}
} else {
return and__3115__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3115__auto__ = (function (){var G__7804 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7804) : p1.call(null,G__7804));
})();
if(cljs.core.truth_(and__3115__auto__)){
var and__3115__auto____$1 = (function (){var G__7806 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7806) : p2.call(null,G__7806));
})();
if(cljs.core.truth_(and__3115__auto____$1)){
var and__3115__auto____$2 = (function (){var G__7808 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__7808) : p3.call(null,G__7808));
})();
if(cljs.core.truth_(and__3115__auto____$2)){
var and__3115__auto____$3 = (function (){var G__7810 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7810) : p1.call(null,G__7810));
})();
if(cljs.core.truth_(and__3115__auto____$3)){
var and__3115__auto____$4 = (function (){var G__7812 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7812) : p2.call(null,G__7812));
})();
if(cljs.core.truth_(and__3115__auto____$4)){
var G__7813 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__7813) : p3.call(null,G__7813));
} else {
return and__3115__auto____$4;
}
} else {
return and__3115__auto____$3;
}
} else {
return and__3115__auto____$2;
}
} else {
return and__3115__auto____$1;
}
} else {
return and__3115__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3115__auto__ = (function (){var G__7815 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7815) : p1.call(null,G__7815));
})();
if(cljs.core.truth_(and__3115__auto__)){
var and__3115__auto____$1 = (function (){var G__7817 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7817) : p2.call(null,G__7817));
})();
if(cljs.core.truth_(and__3115__auto____$1)){
var and__3115__auto____$2 = (function (){var G__7819 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__7819) : p3.call(null,G__7819));
})();
if(cljs.core.truth_(and__3115__auto____$2)){
var and__3115__auto____$3 = (function (){var G__7821 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7821) : p1.call(null,G__7821));
})();
if(cljs.core.truth_(and__3115__auto____$3)){
var and__3115__auto____$4 = (function (){var G__7823 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7823) : p2.call(null,G__7823));
})();
if(cljs.core.truth_(and__3115__auto____$4)){
var and__3115__auto____$5 = (function (){var G__7825 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__7825) : p3.call(null,G__7825));
})();
if(cljs.core.truth_(and__3115__auto____$5)){
var and__3115__auto____$6 = (function (){var G__7827 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7827) : p1.call(null,G__7827));
})();
if(cljs.core.truth_(and__3115__auto____$6)){
var and__3115__auto____$7 = (function (){var G__7829 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7829) : p2.call(null,G__7829));
})();
if(cljs.core.truth_(and__3115__auto____$7)){
var G__7830 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__7830) : p3.call(null,G__7830));
} else {
return and__3115__auto____$7;
}
} else {
return and__3115__auto____$6;
}
} else {
return and__3115__auto____$5;
}
} else {
return and__3115__auto____$4;
}
} else {
return and__3115__auto____$3;
}
} else {
return and__3115__auto____$2;
}
} else {
return and__3115__auto____$1;
}
} else {
return and__3115__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__7875__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__7476_SHARP_){
var and__3115__auto__ = (function (){var G__7837 = p1__7476_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__7837) : p1.call(null,G__7837));
})();
if(cljs.core.truth_(and__3115__auto__)){
var and__3115__auto____$1 = (function (){var G__7839 = p1__7476_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__7839) : p2.call(null,G__7839));
})();
if(cljs.core.truth_(and__3115__auto____$1)){
var G__7840 = p1__7476_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__7840) : p3.call(null,G__7840));
} else {
return and__3115__auto____$1;
}
} else {
return and__3115__auto__;
}
}),args)));
};
var G__7875 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7876__i = 0, G__7876__a = new Array(arguments.length -  3);
while (G__7876__i < G__7876__a.length) {G__7876__a[G__7876__i] = arguments[G__7876__i + 3]; ++G__7876__i;}
  args = new cljs.core.IndexedSeq(G__7876__a,0);
} 
return G__7875__delegate.call(this,x,y,z,args);};
G__7875.cljs$lang$maxFixedArity = 3;
G__7875.cljs$lang$applyTo = (function (arglist__7877){
var x = cljs.core.first(arglist__7877);
arglist__7877 = cljs.core.next(arglist__7877);
var y = cljs.core.first(arglist__7877);
arglist__7877 = cljs.core.next(arglist__7877);
var z = cljs.core.first(arglist__7877);
var args = cljs.core.rest(arglist__7877);
return G__7875__delegate(x,y,z,args);
});
G__7875.cljs$core$IFn$_invoke$arity$variadic = G__7875__delegate;
return G__7875;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__7878 = null;
if (arguments.length > 3) {
var G__7879__i = 0, G__7879__a = new Array(arguments.length -  3);
while (G__7879__i < G__7879__a.length) {G__7879__a[G__7879__i] = arguments[G__7879__i + 3]; ++G__7879__i;}
G__7878 = new cljs.core.IndexedSeq(G__7879__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7878);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__7880__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__7477_SHARP_){
var G__7856 = x;
return (p1__7477_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7477_SHARP_.cljs$core$IFn$_invoke$arity$1(G__7856) : p1__7477_SHARP_.call(null,G__7856));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__7478_SHARP_){
var and__3115__auto__ = (function (){var G__7858 = x;
return (p1__7478_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7478_SHARP_.cljs$core$IFn$_invoke$arity$1(G__7858) : p1__7478_SHARP_.call(null,G__7858));
})();
if(cljs.core.truth_(and__3115__auto__)){
var G__7859 = y;
return (p1__7478_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7478_SHARP_.cljs$core$IFn$_invoke$arity$1(G__7859) : p1__7478_SHARP_.call(null,G__7859));
} else {
return and__3115__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__7479_SHARP_){
var and__3115__auto__ = (function (){var G__7861 = x;
return (p1__7479_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7479_SHARP_.cljs$core$IFn$_invoke$arity$1(G__7861) : p1__7479_SHARP_.call(null,G__7861));
})();
if(cljs.core.truth_(and__3115__auto__)){
var and__3115__auto____$1 = (function (){var G__7863 = y;
return (p1__7479_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7479_SHARP_.cljs$core$IFn$_invoke$arity$1(G__7863) : p1__7479_SHARP_.call(null,G__7863));
})();
if(cljs.core.truth_(and__3115__auto____$1)){
var G__7864 = z;
return (p1__7479_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7479_SHARP_.cljs$core$IFn$_invoke$arity$1(G__7864) : p1__7479_SHARP_.call(null,G__7864));
} else {
return and__3115__auto____$1;
}
} else {
return and__3115__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__7881__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__7480_SHARP_){
return cljs.core.every_QMARK_(p1__7480_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__7881 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__7882__i = 0, G__7882__a = new Array(arguments.length -  3);
while (G__7882__i < G__7882__a.length) {G__7882__a[G__7882__i] = arguments[G__7882__i + 3]; ++G__7882__i;}
  args = new cljs.core.IndexedSeq(G__7882__a,0);
} 
return G__7881__delegate.call(this,x,y,z,args);};
G__7881.cljs$lang$maxFixedArity = 3;
G__7881.cljs$lang$applyTo = (function (arglist__7883){
var x = cljs.core.first(arglist__7883);
arglist__7883 = cljs.core.next(arglist__7883);
var y = cljs.core.first(arglist__7883);
arglist__7883 = cljs.core.next(arglist__7883);
var z = cljs.core.first(arglist__7883);
var args = cljs.core.rest(arglist__7883);
return G__7881__delegate(x,y,z,args);
});
G__7881.cljs$core$IFn$_invoke$arity$variadic = G__7881__delegate;
return G__7881;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__7884 = null;
if (arguments.length > 3) {
var G__7885__i = 0, G__7885__a = new Array(arguments.length -  3);
while (G__7885__i < G__7885__a.length) {G__7885__a[G__7885__i] = arguments[G__7885__i + 3]; ++G__7885__i;}
G__7884 = new cljs.core.IndexedSeq(G__7885__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__7884);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__7880 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__7886__i = 0, G__7886__a = new Array(arguments.length -  3);
while (G__7886__i < G__7886__a.length) {G__7886__a[G__7886__i] = arguments[G__7886__i + 3]; ++G__7886__i;}
  ps = new cljs.core.IndexedSeq(G__7886__a,0);
} 
return G__7880__delegate.call(this,p1,p2,p3,ps);};
G__7880.cljs$lang$maxFixedArity = 3;
G__7880.cljs$lang$applyTo = (function (arglist__7887){
var p1 = cljs.core.first(arglist__7887);
arglist__7887 = cljs.core.next(arglist__7887);
var p2 = cljs.core.first(arglist__7887);
arglist__7887 = cljs.core.next(arglist__7887);
var p3 = cljs.core.first(arglist__7887);
var ps = cljs.core.rest(arglist__7887);
return G__7880__delegate(p1,p2,p3,ps);
});
G__7880.cljs$core$IFn$_invoke$arity$variadic = G__7880__delegate;
return G__7880;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__7888 = null;
if (arguments.length > 3) {
var G__7889__i = 0, G__7889__a = new Array(arguments.length -  3);
while (G__7889__i < G__7889__a.length) {G__7889__a[G__7889__i] = arguments[G__7889__i + 3]; ++G__7889__i;}
G__7888 = new cljs.core.IndexedSeq(G__7889__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__7888);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__8095 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8095) : p.call(null,G__8095));
});
var sp1__2 = (function (x,y){
var or__3127__auto__ = (function (){var G__8097 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8097) : p.call(null,G__8097));
})();
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
var G__8098 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8098) : p.call(null,G__8098));
}
});
var sp1__3 = (function (x,y,z){
var or__3127__auto__ = (function (){var G__8100 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8100) : p.call(null,G__8100));
})();
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (function (){var G__8102 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8102) : p.call(null,G__8102));
})();
if(cljs.core.truth_(or__3127__auto____$1)){
return or__3127__auto____$1;
} else {
var G__8103 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8103) : p.call(null,G__8103));
}
}
});
var sp1__4 = (function() { 
var G__8264__delegate = function (x,y,z,args){
var or__3127__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__8264 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8265__i = 0, G__8265__a = new Array(arguments.length -  3);
while (G__8265__i < G__8265__a.length) {G__8265__a[G__8265__i] = arguments[G__8265__i + 3]; ++G__8265__i;}
  args = new cljs.core.IndexedSeq(G__8265__a,0);
} 
return G__8264__delegate.call(this,x,y,z,args);};
G__8264.cljs$lang$maxFixedArity = 3;
G__8264.cljs$lang$applyTo = (function (arglist__8266){
var x = cljs.core.first(arglist__8266);
arglist__8266 = cljs.core.next(arglist__8266);
var y = cljs.core.first(arglist__8266);
arglist__8266 = cljs.core.next(arglist__8266);
var z = cljs.core.first(arglist__8266);
var args = cljs.core.rest(arglist__8266);
return G__8264__delegate(x,y,z,args);
});
G__8264.cljs$core$IFn$_invoke$arity$variadic = G__8264__delegate;
return G__8264;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__8267 = null;
if (arguments.length > 3) {
var G__8268__i = 0, G__8268__a = new Array(arguments.length -  3);
while (G__8268__i < G__8268__a.length) {G__8268__a[G__8268__i] = arguments[G__8268__i + 3]; ++G__8268__i;}
G__8267 = new cljs.core.IndexedSeq(G__8268__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8267);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3127__auto__ = (function (){var G__8135 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8135) : p1.call(null,G__8135));
})();
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
var G__8136 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8136) : p2.call(null,G__8136));
}
});
var sp2__2 = (function (x,y){
var or__3127__auto__ = (function (){var G__8138 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8138) : p1.call(null,G__8138));
})();
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (function (){var G__8140 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8140) : p1.call(null,G__8140));
})();
if(cljs.core.truth_(or__3127__auto____$1)){
return or__3127__auto____$1;
} else {
var or__3127__auto____$2 = (function (){var G__8142 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8142) : p2.call(null,G__8142));
})();
if(cljs.core.truth_(or__3127__auto____$2)){
return or__3127__auto____$2;
} else {
var G__8143 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8143) : p2.call(null,G__8143));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3127__auto__ = (function (){var G__8145 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8145) : p1.call(null,G__8145));
})();
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (function (){var G__8147 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8147) : p1.call(null,G__8147));
})();
if(cljs.core.truth_(or__3127__auto____$1)){
return or__3127__auto____$1;
} else {
var or__3127__auto____$2 = (function (){var G__8149 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8149) : p1.call(null,G__8149));
})();
if(cljs.core.truth_(or__3127__auto____$2)){
return or__3127__auto____$2;
} else {
var or__3127__auto____$3 = (function (){var G__8151 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8151) : p2.call(null,G__8151));
})();
if(cljs.core.truth_(or__3127__auto____$3)){
return or__3127__auto____$3;
} else {
var or__3127__auto____$4 = (function (){var G__8153 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8153) : p2.call(null,G__8153));
})();
if(cljs.core.truth_(or__3127__auto____$4)){
return or__3127__auto____$4;
} else {
var G__8154 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8154) : p2.call(null,G__8154));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__8269__delegate = function (x,y,z,args){
var or__3127__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
return cljs.core.some(((function (or__3127__auto__){
return (function (p1__7890_SHARP_){
var or__3127__auto____$1 = (function (){var G__8156 = p1__7890_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8156) : p1.call(null,G__8156));
})();
if(cljs.core.truth_(or__3127__auto____$1)){
return or__3127__auto____$1;
} else {
var G__8157 = p1__7890_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8157) : p2.call(null,G__8157));
}
});})(or__3127__auto__))
,args);
}
};
var G__8269 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8270__i = 0, G__8270__a = new Array(arguments.length -  3);
while (G__8270__i < G__8270__a.length) {G__8270__a[G__8270__i] = arguments[G__8270__i + 3]; ++G__8270__i;}
  args = new cljs.core.IndexedSeq(G__8270__a,0);
} 
return G__8269__delegate.call(this,x,y,z,args);};
G__8269.cljs$lang$maxFixedArity = 3;
G__8269.cljs$lang$applyTo = (function (arglist__8271){
var x = cljs.core.first(arglist__8271);
arglist__8271 = cljs.core.next(arglist__8271);
var y = cljs.core.first(arglist__8271);
arglist__8271 = cljs.core.next(arglist__8271);
var z = cljs.core.first(arglist__8271);
var args = cljs.core.rest(arglist__8271);
return G__8269__delegate(x,y,z,args);
});
G__8269.cljs$core$IFn$_invoke$arity$variadic = G__8269__delegate;
return G__8269;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__8272 = null;
if (arguments.length > 3) {
var G__8273__i = 0, G__8273__a = new Array(arguments.length -  3);
while (G__8273__i < G__8273__a.length) {G__8273__a[G__8273__i] = arguments[G__8273__i + 3]; ++G__8273__i;}
G__8272 = new cljs.core.IndexedSeq(G__8273__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8272);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3127__auto__ = (function (){var G__8203 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8203) : p1.call(null,G__8203));
})();
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (function (){var G__8205 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8205) : p2.call(null,G__8205));
})();
if(cljs.core.truth_(or__3127__auto____$1)){
return or__3127__auto____$1;
} else {
var G__8206 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8206) : p3.call(null,G__8206));
}
}
});
var sp3__2 = (function (x,y){
var or__3127__auto__ = (function (){var G__8208 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8208) : p1.call(null,G__8208));
})();
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (function (){var G__8210 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8210) : p2.call(null,G__8210));
})();
if(cljs.core.truth_(or__3127__auto____$1)){
return or__3127__auto____$1;
} else {
var or__3127__auto____$2 = (function (){var G__8212 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8212) : p3.call(null,G__8212));
})();
if(cljs.core.truth_(or__3127__auto____$2)){
return or__3127__auto____$2;
} else {
var or__3127__auto____$3 = (function (){var G__8214 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8214) : p1.call(null,G__8214));
})();
if(cljs.core.truth_(or__3127__auto____$3)){
return or__3127__auto____$3;
} else {
var or__3127__auto____$4 = (function (){var G__8216 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8216) : p2.call(null,G__8216));
})();
if(cljs.core.truth_(or__3127__auto____$4)){
return or__3127__auto____$4;
} else {
var G__8217 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8217) : p3.call(null,G__8217));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3127__auto__ = (function (){var G__8219 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8219) : p1.call(null,G__8219));
})();
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (function (){var G__8221 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8221) : p2.call(null,G__8221));
})();
if(cljs.core.truth_(or__3127__auto____$1)){
return or__3127__auto____$1;
} else {
var or__3127__auto____$2 = (function (){var G__8223 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8223) : p3.call(null,G__8223));
})();
if(cljs.core.truth_(or__3127__auto____$2)){
return or__3127__auto____$2;
} else {
var or__3127__auto____$3 = (function (){var G__8225 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8225) : p1.call(null,G__8225));
})();
if(cljs.core.truth_(or__3127__auto____$3)){
return or__3127__auto____$3;
} else {
var or__3127__auto____$4 = (function (){var G__8227 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8227) : p2.call(null,G__8227));
})();
if(cljs.core.truth_(or__3127__auto____$4)){
return or__3127__auto____$4;
} else {
var or__3127__auto____$5 = (function (){var G__8229 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8229) : p3.call(null,G__8229));
})();
if(cljs.core.truth_(or__3127__auto____$5)){
return or__3127__auto____$5;
} else {
var or__3127__auto____$6 = (function (){var G__8231 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8231) : p1.call(null,G__8231));
})();
if(cljs.core.truth_(or__3127__auto____$6)){
return or__3127__auto____$6;
} else {
var or__3127__auto____$7 = (function (){var G__8233 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8233) : p2.call(null,G__8233));
})();
if(cljs.core.truth_(or__3127__auto____$7)){
return or__3127__auto____$7;
} else {
var G__8234 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8234) : p3.call(null,G__8234));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__8274__delegate = function (x,y,z,args){
var or__3127__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
return cljs.core.some(((function (or__3127__auto__){
return (function (p1__7891_SHARP_){
var or__3127__auto____$1 = (function (){var G__8236 = p1__7891_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8236) : p1.call(null,G__8236));
})();
if(cljs.core.truth_(or__3127__auto____$1)){
return or__3127__auto____$1;
} else {
var or__3127__auto____$2 = (function (){var G__8238 = p1__7891_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8238) : p2.call(null,G__8238));
})();
if(cljs.core.truth_(or__3127__auto____$2)){
return or__3127__auto____$2;
} else {
var G__8239 = p1__7891_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8239) : p3.call(null,G__8239));
}
}
});})(or__3127__auto__))
,args);
}
};
var G__8274 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8275__i = 0, G__8275__a = new Array(arguments.length -  3);
while (G__8275__i < G__8275__a.length) {G__8275__a[G__8275__i] = arguments[G__8275__i + 3]; ++G__8275__i;}
  args = new cljs.core.IndexedSeq(G__8275__a,0);
} 
return G__8274__delegate.call(this,x,y,z,args);};
G__8274.cljs$lang$maxFixedArity = 3;
G__8274.cljs$lang$applyTo = (function (arglist__8276){
var x = cljs.core.first(arglist__8276);
arglist__8276 = cljs.core.next(arglist__8276);
var y = cljs.core.first(arglist__8276);
arglist__8276 = cljs.core.next(arglist__8276);
var z = cljs.core.first(arglist__8276);
var args = cljs.core.rest(arglist__8276);
return G__8274__delegate(x,y,z,args);
});
G__8274.cljs$core$IFn$_invoke$arity$variadic = G__8274__delegate;
return G__8274;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__8277 = null;
if (arguments.length > 3) {
var G__8278__i = 0, G__8278__a = new Array(arguments.length -  3);
while (G__8278__i < G__8278__a.length) {G__8278__a[G__8278__i] = arguments[G__8278__i + 3]; ++G__8278__i;}
G__8277 = new cljs.core.IndexedSeq(G__8278__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8277);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__8279__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__7892_SHARP_){
var G__8255 = x;
return (p1__7892_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7892_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8255) : p1__7892_SHARP_.call(null,G__8255));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__7893_SHARP_){
var or__3127__auto__ = (function (){var G__8257 = x;
return (p1__7893_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7893_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8257) : p1__7893_SHARP_.call(null,G__8257));
})();
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
var G__8258 = y;
return (p1__7893_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7893_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8258) : p1__7893_SHARP_.call(null,G__8258));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__7894_SHARP_){
var or__3127__auto__ = (function (){var G__8260 = x;
return (p1__7894_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7894_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8260) : p1__7894_SHARP_.call(null,G__8260));
})();
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (function (){var G__8262 = y;
return (p1__7894_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7894_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8262) : p1__7894_SHARP_.call(null,G__8262));
})();
if(cljs.core.truth_(or__3127__auto____$1)){
return or__3127__auto____$1;
} else {
var G__8263 = z;
return (p1__7894_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7894_SHARP_.cljs$core$IFn$_invoke$arity$1(G__8263) : p1__7894_SHARP_.call(null,G__8263));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__8280__delegate = function (x,y,z,args){
var or__3127__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
return cljs.core.some(((function (or__3127__auto__,ps__$1){
return (function (p1__7895_SHARP_){
return cljs.core.some(p1__7895_SHARP_,args);
});})(or__3127__auto__,ps__$1))
,ps__$1);
}
};
var G__8280 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__8281__i = 0, G__8281__a = new Array(arguments.length -  3);
while (G__8281__i < G__8281__a.length) {G__8281__a[G__8281__i] = arguments[G__8281__i + 3]; ++G__8281__i;}
  args = new cljs.core.IndexedSeq(G__8281__a,0);
} 
return G__8280__delegate.call(this,x,y,z,args);};
G__8280.cljs$lang$maxFixedArity = 3;
G__8280.cljs$lang$applyTo = (function (arglist__8282){
var x = cljs.core.first(arglist__8282);
arglist__8282 = cljs.core.next(arglist__8282);
var y = cljs.core.first(arglist__8282);
arglist__8282 = cljs.core.next(arglist__8282);
var z = cljs.core.first(arglist__8282);
var args = cljs.core.rest(arglist__8282);
return G__8280__delegate(x,y,z,args);
});
G__8280.cljs$core$IFn$_invoke$arity$variadic = G__8280__delegate;
return G__8280;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__8283 = null;
if (arguments.length > 3) {
var G__8284__i = 0, G__8284__a = new Array(arguments.length -  3);
while (G__8284__i < G__8284__a.length) {G__8284__a[G__8284__i] = arguments[G__8284__i + 3]; ++G__8284__i;}
G__8283 = new cljs.core.IndexedSeq(G__8284__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__8283);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__8279 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__8285__i = 0, G__8285__a = new Array(arguments.length -  3);
while (G__8285__i < G__8285__a.length) {G__8285__a[G__8285__i] = arguments[G__8285__i + 3]; ++G__8285__i;}
  ps = new cljs.core.IndexedSeq(G__8285__a,0);
} 
return G__8279__delegate.call(this,p1,p2,p3,ps);};
G__8279.cljs$lang$maxFixedArity = 3;
G__8279.cljs$lang$applyTo = (function (arglist__8286){
var p1 = cljs.core.first(arglist__8286);
arglist__8286 = cljs.core.next(arglist__8286);
var p2 = cljs.core.first(arglist__8286);
arglist__8286 = cljs.core.next(arglist__8286);
var p3 = cljs.core.first(arglist__8286);
var ps = cljs.core.rest(arglist__8286);
return G__8279__delegate(p1,p2,p3,ps);
});
G__8279.cljs$core$IFn$_invoke$arity$variadic = G__8279__delegate;
return G__8279;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__8287 = null;
if (arguments.length > 3) {
var G__8288__i = 0, G__8288__a = new Array(arguments.length -  3);
while (G__8288__i < G__8288__a.length) {G__8288__a[G__8288__i] = arguments[G__8288__i + 3]; ++G__8288__i;}
G__8287 = new cljs.core.IndexedSeq(G__8288__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__8287);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__8343 = null;
var G__8343__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8343__1 = (function (result){
var G__8329 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8329) : rf.call(null,G__8329));
});
var G__8343__2 = (function (result,input){
var G__8330 = result;
var G__8331 = (function (){var G__8332 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8332) : f.call(null,G__8332));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8330,G__8331) : rf.call(null,G__8330,G__8331));
});
var G__8343__3 = (function() { 
var G__8344__delegate = function (result,input,inputs){
var G__8333 = result;
var G__8334 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8333,G__8334) : rf.call(null,G__8333,G__8334));
};
var G__8344 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__8345__i = 0, G__8345__a = new Array(arguments.length -  2);
while (G__8345__i < G__8345__a.length) {G__8345__a[G__8345__i] = arguments[G__8345__i + 2]; ++G__8345__i;}
  inputs = new cljs.core.IndexedSeq(G__8345__a,0);
} 
return G__8344__delegate.call(this,result,input,inputs);};
G__8344.cljs$lang$maxFixedArity = 2;
G__8344.cljs$lang$applyTo = (function (arglist__8346){
var result = cljs.core.first(arglist__8346);
arglist__8346 = cljs.core.next(arglist__8346);
var input = cljs.core.first(arglist__8346);
var inputs = cljs.core.rest(arglist__8346);
return G__8344__delegate(result,input,inputs);
});
G__8344.cljs$core$IFn$_invoke$arity$variadic = G__8344__delegate;
return G__8344;
})()
;
G__8343 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__8343__0.call(this);
case 1:
return G__8343__1.call(this,result);
case 2:
return G__8343__2.call(this,result,input);
default:
var G__8347 = null;
if (arguments.length > 2) {
var G__8348__i = 0, G__8348__a = new Array(arguments.length -  2);
while (G__8348__i < G__8348__a.length) {G__8348__a[G__8348__i] = arguments[G__8348__i + 2]; ++G__8348__i;}
G__8347 = new cljs.core.IndexedSeq(G__8348__a,0);
}
return G__8343__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__8347);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8343.cljs$lang$maxFixedArity = 2;
G__8343.cljs$lang$applyTo = G__8343__3.cljs$lang$applyTo;
G__8343.cljs$core$IFn$_invoke$arity$0 = G__8343__0;
G__8343.cljs$core$IFn$_invoke$arity$1 = G__8343__1;
G__8343.cljs$core$IFn$_invoke$arity$2 = G__8343__2;
G__8343.cljs$core$IFn$_invoke$arity$variadic = G__8343__3.cljs$core$IFn$_invoke$arity$variadic;
return G__8343;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4014__auto___8349 = size;
var i_8350 = (0);
while(true){
if((i_8350 < n__4014__auto___8349)){
cljs.core.chunk_append(b,(function (){var G__8335 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8350);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8335) : f.call(null,G__8335));
})());

var G__8351 = (i_8350 + (1));
i_8350 = G__8351;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__8336 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8336) : f.call(null,G__8336));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__8337 = cljs.core.first(s1);
var G__8338 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8337,G__8338) : f.call(null,G__8337,G__8338));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__8339 = cljs.core.first(s1);
var G__8340 = cljs.core.first(s2);
var G__8341 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8339,G__8340,G__8341) : f.call(null,G__8339,G__8340,G__8341));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__8352__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__8289_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__8289_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__8352 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__8353__i = 0, G__8353__a = new Array(arguments.length -  4);
while (G__8353__i < G__8353__a.length) {G__8353__a[G__8353__i] = arguments[G__8353__i + 4]; ++G__8353__i;}
  colls = new cljs.core.IndexedSeq(G__8353__a,0);
} 
return G__8352__delegate.call(this,f,c1,c2,c3,colls);};
G__8352.cljs$lang$maxFixedArity = 4;
G__8352.cljs$lang$applyTo = (function (arglist__8354){
var f = cljs.core.first(arglist__8354);
arglist__8354 = cljs.core.next(arglist__8354);
var c1 = cljs.core.first(arglist__8354);
arglist__8354 = cljs.core.next(arglist__8354);
var c2 = cljs.core.first(arglist__8354);
arglist__8354 = cljs.core.next(arglist__8354);
var c3 = cljs.core.first(arglist__8354);
var colls = cljs.core.rest(arglist__8354);
return G__8352__delegate(f,c1,c2,c3,colls);
});
G__8352.cljs$core$IFn$_invoke$arity$variadic = G__8352__delegate;
return G__8352;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__8355 = null;
if (arguments.length > 4) {
var G__8356__i = 0, G__8356__a = new Array(arguments.length -  4);
while (G__8356__i < G__8356__a.length) {G__8356__a[G__8356__i] = arguments[G__8356__i + 4]; ++G__8356__i;}
G__8355 = new cljs.core.IndexedSeq(G__8356__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__8355);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__8365 = null;
var G__8365__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8365__1 = (function (result){
var G__8362 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8362) : rf.call(null,G__8362));
});
var G__8365__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__8363 = result;
var G__8364 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8363,G__8364) : rf.call(null,G__8363,G__8364));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__8365 = function(result,input){
switch(arguments.length){
case 0:
return G__8365__0.call(this);
case 1:
return G__8365__1.call(this,result);
case 2:
return G__8365__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8365.cljs$core$IFn$_invoke$arity$0 = G__8365__0;
G__8365.cljs$core$IFn$_invoke$arity$1 = G__8365__1;
G__8365.cljs$core$IFn$_invoke$arity$2 = G__8365__2;
return G__8365;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__8372 = null;
var G__8372__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8372__1 = (function (result){
var G__8369 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8369) : rf.call(null,G__8369));
});
var G__8372__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__8370 = result;
var G__8371 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8370,G__8371) : rf.call(null,G__8370,G__8371));
}
});
G__8372 = function(result,input){
switch(arguments.length){
case 0:
return G__8372__0.call(this);
case 1:
return G__8372__1.call(this,result);
case 2:
return G__8372__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8372.cljs$core$IFn$_invoke$arity$0 = G__8372__0;
G__8372.cljs$core$IFn$_invoke$arity$1 = G__8372__1;
G__8372.cljs$core$IFn$_invoke$arity$2 = G__8372__2;
return G__8372;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__8373 = (n__$1 - (1));
var G__8374 = cljs.core.rest(s);
n__$1 = G__8373;
coll__$1 = G__8374;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__8377 = cljs.core.next(s);
var G__8378 = cljs.core.next(lead);
s = G__8377;
lead = G__8378;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__8391 = null;
var G__8391__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8391__1 = (function (result){
var G__8385 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8385) : rf.call(null,G__8385));
});
var G__8391__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3115__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3115__auto__)){
var G__8386 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8386) : pred.call(null,G__8386));
} else {
return and__3115__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__8387 = result;
var G__8388 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8387,G__8388) : rf.call(null,G__8387,G__8388));
}
});
G__8391 = function(result,input){
switch(arguments.length){
case 0:
return G__8391__0.call(this);
case 1:
return G__8391__1.call(this,result);
case 2:
return G__8391__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8391.cljs$core$IFn$_invoke$arity$0 = G__8391__0;
G__8391.cljs$core$IFn$_invoke$arity$1 = G__8391__1;
G__8391.cljs$core$IFn$_invoke$arity$2 = G__8391__2;
return G__8391;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3115__auto__ = s;
if(and__3115__auto__){
var G__8390 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__8390) : pred__$1.call(null,G__8390));
} else {
return and__3115__auto__;
}
})())){
var G__8392 = pred__$1;
var G__8393 = cljs.core.rest(s);
pred__$1 = G__8392;
coll__$1 = G__8393;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__8402 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8402) : f.call(null,G__8402));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__8405__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__8405 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__8406__i = 0, G__8406__a = new Array(arguments.length -  2);
while (G__8406__i < G__8406__a.length) {G__8406__a[G__8406__i] = arguments[G__8406__i + 2]; ++G__8406__i;}
  colls = new cljs.core.IndexedSeq(G__8406__a,0);
} 
return G__8405__delegate.call(this,c1,c2,colls);};
G__8405.cljs$lang$maxFixedArity = 2;
G__8405.cljs$lang$applyTo = (function (arglist__8407){
var c1 = cljs.core.first(arglist__8407);
arglist__8407 = cljs.core.next(arglist__8407);
var c2 = cljs.core.first(arglist__8407);
var colls = cljs.core.rest(arglist__8407);
return G__8405__delegate(c1,c2,colls);
});
G__8405.cljs$core$IFn$_invoke$arity$variadic = G__8405__delegate;
return G__8405;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__8408 = null;
if (arguments.length > 2) {
var G__8409__i = 0, G__8409__a = new Array(arguments.length -  2);
while (G__8409__i < G__8409__a.length) {G__8409__a[G__8409__i] = arguments[G__8409__i + 2]; ++G__8409__i;}
G__8408 = new cljs.core.IndexedSeq(G__8409__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__8408);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__8424 = null;
var G__8424__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8424__1 = (function (result){
var G__8417 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8417) : rf.call(null,G__8417));
});
var G__8424__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__8418 = result;
var G__8419 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8418,G__8419) : rf.call(null,G__8418,G__8419));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__8420 = sepr;
var G__8421 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8420,G__8421) : rf.call(null,G__8420,G__8421));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__8422 = result;
var G__8423 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8422,G__8423) : rf.call(null,G__8422,G__8423));
}
});
G__8424 = function(result,input){
switch(arguments.length){
case 0:
return G__8424__0.call(this);
case 1:
return G__8424__1.call(this,result);
case 2:
return G__8424__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8424.cljs$core$IFn$_invoke$arity$0 = G__8424__0;
G__8424.cljs$core$IFn$_invoke$arity$1 = G__8424__1;
G__8424.cljs$core$IFn$_invoke$arity$2 = G__8424__2;
return G__8424;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4423__auto__ = cljs.core.seq(coll);
if(temp__4423__auto__){
var coll__$1 = temp__4423__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__8433__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__8433 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__8434__i = 0, G__8434__a = new Array(arguments.length -  1);
while (G__8434__i < G__8434__a.length) {G__8434__a[G__8434__i] = arguments[G__8434__i + 1]; ++G__8434__i;}
  colls = new cljs.core.IndexedSeq(G__8434__a,0);
} 
return G__8433__delegate.call(this,f,colls);};
G__8433.cljs$lang$maxFixedArity = 1;
G__8433.cljs$lang$applyTo = (function (arglist__8435){
var f = cljs.core.first(arglist__8435);
var colls = cljs.core.rest(arglist__8435);
return G__8433__delegate(f,colls);
});
G__8433.cljs$core$IFn$_invoke$arity$variadic = G__8433__delegate;
return G__8433;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__8436 = null;
if (arguments.length > 1) {
var G__8437__i = 0, G__8437__a = new Array(arguments.length -  1);
while (G__8437__i < G__8437__a.length) {G__8437__a[G__8437__i] = arguments[G__8437__i + 1]; ++G__8437__i;}
G__8436 = new cljs.core.IndexedSeq(G__8437__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__8436);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__8456 = null;
var G__8456__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__8456__1 = (function (result){
var G__8450 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8450) : rf.call(null,G__8450));
});
var G__8456__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__8451 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8451) : pred.call(null,G__8451));
})())){
var G__8452 = result;
var G__8453 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8452,G__8453) : rf.call(null,G__8452,G__8453));
} else {
return result;
}
});
G__8456 = function(result,input){
switch(arguments.length){
case 0:
return G__8456__0.call(this);
case 1:
return G__8456__1.call(this,result);
case 2:
return G__8456__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8456.cljs$core$IFn$_invoke$arity$0 = G__8456__0;
G__8456.cljs$core$IFn$_invoke$arity$1 = G__8456__1;
G__8456.cljs$core$IFn$_invoke$arity$2 = G__8456__2;
return G__8456;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4014__auto___8457 = size;
var i_8458 = (0);
while(true){
if((i_8458 < n__4014__auto___8457)){
if(cljs.core.truth_((function (){var G__8454 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8458);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8454) : pred.call(null,G__8454));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_8458));
} else {
}

var G__8459 = (i_8458 + (1));
i_8458 = G__8459;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__8455 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8455) : pred.call(null,G__8455));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__8466 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__8466) : branch_QMARK_.call(null,G__8466));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__8467 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__8467) : children.call(null,G__8467));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__8468_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__8468_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__8471 = to;
if(G__8471){
var bit__3801__auto__ = (G__8471.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__3801__auto__) || (G__8471.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__8472 = to;
if(G__8472){
var bit__3801__auto__ = (G__8472.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__3801__auto__) || (G__8472.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__8474 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8474) : f.call(null,G__8474));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__8475__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__8475 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__8476__i = 0, G__8476__a = new Array(arguments.length -  4);
while (G__8476__i < G__8476__a.length) {G__8476__a[G__8476__i] = arguments[G__8476__i + 4]; ++G__8476__i;}
  colls = new cljs.core.IndexedSeq(G__8476__a,0);
} 
return G__8475__delegate.call(this,f,c1,c2,c3,colls);};
G__8475.cljs$lang$maxFixedArity = 4;
G__8475.cljs$lang$applyTo = (function (arglist__8477){
var f = cljs.core.first(arglist__8477);
arglist__8477 = cljs.core.next(arglist__8477);
var c1 = cljs.core.first(arglist__8477);
arglist__8477 = cljs.core.next(arglist__8477);
var c2 = cljs.core.first(arglist__8477);
arglist__8477 = cljs.core.next(arglist__8477);
var c3 = cljs.core.first(arglist__8477);
var colls = cljs.core.rest(arglist__8477);
return G__8475__delegate(f,c1,c2,c3,colls);
});
G__8475.cljs$core$IFn$_invoke$arity$variadic = G__8475__delegate;
return G__8475;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__8478 = null;
if (arguments.length > 4) {
var G__8479__i = 0, G__8479__a = new Array(arguments.length -  4);
while (G__8479__i < G__8479__a.length) {G__8479__a[G__8479__i] = arguments[G__8479__i + 4]; ++G__8479__i;}
G__8478 = new cljs.core.IndexedSeq(G__8479__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__8478);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__8481 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8481) : pred.call(null,G__8481));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__8496 = m__$1;
if(G__8496){
var bit__3808__auto__ = (G__8496.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__3808__auto__) || (G__8496.cljs$core$ILookup$)){
return true;
} else {
if((!G__8496.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__8496);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__8496);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__8497 = sentinel;
var G__8498 = m__$2;
var G__8499 = cljs.core.next(ks__$1);
sentinel = G__8497;
m__$1 = G__8498;
ks__$1 = G__8499;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__8500,v){
var vec__8505 = p__8500;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8505,(0),null);
var ks = cljs.core.nthnext(vec__8505,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__8506,f){
var vec__8544 = p__8506;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8544,(0),null);
var ks = cljs.core.nthnext(vec__8544,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__8545 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8545) : f.call(null,G__8545));
})());
}
});
var update_in__4 = (function (m,p__8507,f,a){
var vec__8546 = p__8507;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8546,(0),null);
var ks = cljs.core.nthnext(vec__8546,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__8547 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__8548 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8547,G__8548) : f.call(null,G__8547,G__8548));
})());
}
});
var update_in__5 = (function (m,p__8508,f,a,b){
var vec__8549 = p__8508;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8549,(0),null);
var ks = cljs.core.nthnext(vec__8549,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__8550 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__8551 = a;
var G__8552 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8550,G__8551,G__8552) : f.call(null,G__8550,G__8551,G__8552));
})());
}
});
var update_in__6 = (function (m,p__8509,f,a,b,c){
var vec__8553 = p__8509;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8553,(0),null);
var ks = cljs.core.nthnext(vec__8553,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__8554 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__8555 = a;
var G__8556 = b;
var G__8557 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8554,G__8555,G__8556,G__8557) : f.call(null,G__8554,G__8555,G__8556,G__8557));
})());
}
});
var update_in__7 = (function() { 
var G__8559__delegate = function (m,p__8510,f,a,b,c,args){
var vec__8558 = p__8510;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8558,(0),null);
var ks = cljs.core.nthnext(vec__8558,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__8559 = function (m,p__8510,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__8560__i = 0, G__8560__a = new Array(arguments.length -  6);
while (G__8560__i < G__8560__a.length) {G__8560__a[G__8560__i] = arguments[G__8560__i + 6]; ++G__8560__i;}
  args = new cljs.core.IndexedSeq(G__8560__a,0);
} 
return G__8559__delegate.call(this,m,p__8510,f,a,b,c,args);};
G__8559.cljs$lang$maxFixedArity = 6;
G__8559.cljs$lang$applyTo = (function (arglist__8561){
var m = cljs.core.first(arglist__8561);
arglist__8561 = cljs.core.next(arglist__8561);
var p__8510 = cljs.core.first(arglist__8561);
arglist__8561 = cljs.core.next(arglist__8561);
var f = cljs.core.first(arglist__8561);
arglist__8561 = cljs.core.next(arglist__8561);
var a = cljs.core.first(arglist__8561);
arglist__8561 = cljs.core.next(arglist__8561);
var b = cljs.core.first(arglist__8561);
arglist__8561 = cljs.core.next(arglist__8561);
var c = cljs.core.first(arglist__8561);
var args = cljs.core.rest(arglist__8561);
return G__8559__delegate(m,p__8510,f,a,b,c,args);
});
G__8559.cljs$core$IFn$_invoke$arity$variadic = G__8559__delegate;
return G__8559;
})()
;
update_in = function(m,p__8510,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__8510,f);
case 4:
return update_in__4.call(this,m,p__8510,f,a);
case 5:
return update_in__5.call(this,m,p__8510,f,a,b);
case 6:
return update_in__6.call(this,m,p__8510,f,a,b,c);
default:
var G__8562 = null;
if (arguments.length > 6) {
var G__8563__i = 0, G__8563__a = new Array(arguments.length -  6);
while (G__8563__i < G__8563__a.length) {G__8563__a[G__8563__i] = arguments[G__8563__i + 6]; ++G__8563__i;}
G__8562 = new cljs.core.IndexedSeq(G__8563__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__8510,f,a,b,c, G__8562);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__8574 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8574) : f.call(null,G__8574));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__8575 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__8576 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8575,G__8576) : f.call(null,G__8575,G__8576));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__8577 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__8578 = x;
var G__8579 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8577,G__8578,G__8579) : f.call(null,G__8577,G__8578,G__8579));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__8580 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__8581 = x;
var G__8582 = y;
var G__8583 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8580,G__8581,G__8582,G__8583) : f.call(null,G__8580,G__8581,G__8582,G__8583));
})());
});
var update__7 = (function() { 
var G__8584__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__8584 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__8585__i = 0, G__8585__a = new Array(arguments.length -  6);
while (G__8585__i < G__8585__a.length) {G__8585__a[G__8585__i] = arguments[G__8585__i + 6]; ++G__8585__i;}
  more = new cljs.core.IndexedSeq(G__8585__a,0);
} 
return G__8584__delegate.call(this,m,k,f,x,y,z,more);};
G__8584.cljs$lang$maxFixedArity = 6;
G__8584.cljs$lang$applyTo = (function (arglist__8586){
var m = cljs.core.first(arglist__8586);
arglist__8586 = cljs.core.next(arglist__8586);
var k = cljs.core.first(arglist__8586);
arglist__8586 = cljs.core.next(arglist__8586);
var f = cljs.core.first(arglist__8586);
arglist__8586 = cljs.core.next(arglist__8586);
var x = cljs.core.first(arglist__8586);
arglist__8586 = cljs.core.next(arglist__8586);
var y = cljs.core.first(arglist__8586);
arglist__8586 = cljs.core.next(arglist__8586);
var z = cljs.core.first(arglist__8586);
var more = cljs.core.rest(arglist__8586);
return G__8584__delegate(m,k,f,x,y,z,more);
});
G__8584.cljs$core$IFn$_invoke$arity$variadic = G__8584__delegate;
return G__8584;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__8587 = null;
if (arguments.length > 6) {
var G__8588__i = 0, G__8588__a = new Array(arguments.length -  6);
while (G__8588__i < G__8588__a.length) {G__8588__a[G__8588__i] = arguments[G__8588__i + 6]; ++G__8588__i;}
G__8587 = new cljs.core.IndexedSeq(G__8588__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__8587);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__8589 = (ll - (5));
var G__8590 = r;
ll = G__8589;
ret = G__8590;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__8595 = cljs.core.pv_aget(node,(0));
var G__8596 = (level - (5));
node = G__8595;
level = G__8596;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__8597 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__8598 = (level - (5));
node = G__8597;
level = G__8598;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__8608 = init__$2;
var G__8609 = (j + i);
var G__8610 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8608,G__8609,G__8610) : f.call(null,G__8608,G__8609,G__8610));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__8621 = (j + (1));
var G__8622 = init__$3;
j = G__8621;
init__$2 = G__8622;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__8611 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__8611) : cljs.core.deref.call(null,G__8611));
} else {
var G__8623 = (i + len);
var G__8624 = init__$2;
i = G__8623;
init__$1 = G__8624;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__8612 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__8612) : cljs.core.tv_editable_root.call(null,G__8612));
})(),(function (){var G__8613 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__8613) : cljs.core.tv_editable_tail.call(null,G__8613));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__8614 = init__$2;
var G__8615 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8614,G__8615) : f.call(null,G__8614,G__8615));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__8625 = (j + (1));
var G__8626 = init__$3;
j = G__8625;
init__$2 = G__8626;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__8616 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__8616) : cljs.core.deref.call(null,G__8616));
} else {
var G__8627 = (i + len);
var G__8628 = init__$2;
i = G__8627;
init__$1 = G__8628;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__8617 = coll__$1;
var G__8618 = cljs.core.first_array_for_longvec(coll__$1);
var G__8619 = (0);
var G__8620 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8617,G__8618,G__8619,G__8620) : cljs.core.chunked_seq.call(null,G__8617,G__8618,G__8619,G__8620));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4014__auto___8629 = len;
var i_8630 = (0);
while(true){
if((i_8630 < n__4014__auto___8629)){
(new_tail[i_8630] = (self__.tail[i_8630]));

var G__8631 = (i_8630 + (1));
i_8630 = G__8631;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__8632 = null;
var G__8632__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__8632__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__8632 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__8632__2.call(this,self__,k);
case 3:
return G__8632__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8632.cljs$core$IFn$_invoke$arity$2 = G__8632__2;
G__8632.cljs$core$IFn$_invoke$arity$3 = G__8632__3;
return G__8632;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args8607){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args8607)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__8633 = (i + (1));
var G__8634 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__8633;
out = G__8634;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__8635__i = 0, G__8635__a = new Array(arguments.length -  0);
while (G__8635__i < G__8635__a.length) {G__8635__a[G__8635__i] = arguments[G__8635__i + 0]; ++G__8635__i;}
  args = new cljs.core.IndexedSeq(G__8635__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__8636){
var args = cljs.core.seq(arglist__8636);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__8637 = self__.vec;
var G__8638 = self__.node;
var G__8639 = self__.i;
var G__8640 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8637,G__8638,G__8639,G__8640) : cljs.core.chunked_seq.call(null,G__8637,G__8638,G__8639,G__8640));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__8641 = self__.vec;
var G__8642 = (self__.i + self__.off);
var G__8643 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__8641,G__8642,G__8643) : cljs.core.subvec.call(null,G__8641,G__8642,G__8643));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__8644 = self__.vec;
var G__8645 = (self__.i + self__.off);
var G__8646 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__8644,G__8645,G__8646) : cljs.core.subvec.call(null,G__8644,G__8645,G__8646));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__8647 = self__.vec;
var G__8648 = self__.node;
var G__8649 = self__.i;
var G__8650 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8647,G__8648,G__8649,G__8650) : cljs.core.chunked_seq.call(null,G__8647,G__8648,G__8649,G__8650));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__8651 = self__.vec;
var G__8652 = cljs.core.unchecked_array_for(self__.vec,end);
var G__8653 = end;
var G__8654 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8651,G__8652,G__8653,G__8654) : cljs.core.chunked_seq.call(null,G__8651,G__8652,G__8653,G__8654));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__8655 = self__.vec;
var G__8656 = self__.node;
var G__8657 = self__.i;
var G__8658 = self__.off;
var G__8659 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__8655,G__8656,G__8657,G__8658,G__8659) : cljs.core.chunked_seq.call(null,G__8655,G__8656,G__8657,G__8658,G__8659));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__8660 = self__.vec;
var G__8661 = cljs.core.unchecked_array_for(self__.vec,end);
var G__8662 = end;
var G__8663 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8660,G__8661,G__8662,G__8663) : cljs.core.chunked_seq.call(null,G__8660,G__8661,G__8662,G__8663));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__8665 = self__.meta;
var G__8666 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__8667 = self__.start;
var G__8668 = (function (){var x__3444__auto__ = self__.end;
var y__3445__auto__ = (v_pos + (1));
return ((x__3444__auto__ > y__3445__auto__) ? x__3444__auto__ : y__3445__auto__);
})();
var G__8669 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__8665,G__8666,G__8667,G__8668,G__8669) : cljs.core.build_subvec.call(null,G__8665,G__8666,G__8667,G__8668,G__8669));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__8670 = self__.meta;
var G__8671 = self__.v;
var G__8672 = self__.start;
var G__8673 = (self__.end - (1));
var G__8674 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__8670,G__8671,G__8672,G__8673,G__8674) : cljs.core.build_subvec.call(null,G__8670,G__8671,G__8672,G__8673,G__8674));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__8676 = meta__$1;
var G__8677 = self__.v;
var G__8678 = self__.start;
var G__8679 = self__.end;
var G__8680 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__8676,G__8677,G__8678,G__8679,G__8680) : cljs.core.build_subvec.call(null,G__8676,G__8677,G__8678,G__8679,G__8680));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__8681 = self__.meta;
var G__8682 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__8683 = self__.start;
var G__8684 = (self__.end + (1));
var G__8685 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__8681,G__8682,G__8683,G__8684,G__8685) : cljs.core.build_subvec.call(null,G__8681,G__8682,G__8683,G__8684,G__8685));
});

cljs.core.Subvec.prototype.call = (function() {
var G__8686 = null;
var G__8686__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__8686__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__8686 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__8686__2.call(this,self__,k);
case 3:
return G__8686__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8686.cljs$core$IFn$_invoke$arity$2 = G__8686__2;
G__8686.cljs$core$IFn$_invoke$arity$3 = G__8686__3;
return G__8686;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args8664){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args8664)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__8687 = meta;
var G__8688 = v.v;
var G__8689 = (v.start + start);
var G__8690 = (v.start + end);
var G__8691 = __hash;
meta = G__8687;
v = G__8688;
start = G__8689;
end = G__8690;
__hash = G__8691;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj8698 = {};
return obj8698;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__8706 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__8707 = (level - (5));
node = G__8706;
level = G__8707;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition1$ = 88;
this.cljs$lang$protocol_mask$partition0$ = 275;
})
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.call = (function() {
var G__8711 = null;
var G__8711__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__8711__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__8711 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__8711__2.call(this,self__,k);
case 3:
return G__8711__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8711.cljs$core$IFn$_invoke$arity$2 = G__8711__2;
G__8711.cljs$core$IFn$_invoke$arity$3 = G__8711__3;
return G__8711;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args8708){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args8708)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4423__auto__ = cljs.core.next(self__.front);
if(temp__4423__auto__){
var f1 = temp__4423__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4423__auto__ = cljs.core.next(self__.front);
if(temp__4423__auto__){
var f1 = temp__4423__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3127__auto__ = self__.front;
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3127__auto__ = self__.rear;
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition0$ = 2097152;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__8712 = (i + incr);
i = G__8712;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__8713 = (i + (1));
var G__8714 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__8713;
out = G__8714;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj8718 = {};
return obj8718;
})();
var l = ks.length;
var i_8719 = (0);
while(true){
if((i_8719 < l)){
var k_8720 = (ks[i_8719]);
(new_obj[k_8720] = (obj[k_8720]));

var G__8721 = (i_8719 + (1));
i_8719 = G__8721;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3115__auto__ = (function (){var G__8725 = k;
return goog.isString(G__8725);
})();
if(cljs.core.truth_(and__3115__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3115__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__8726 = init__$1;
var G__8727 = k;
var G__8728 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8726,G__8727,G__8728) : f.call(null,G__8726,G__8727,G__8728));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__8729 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__8729) : cljs.core.deref.call(null,G__8729));
} else {
var G__8735 = cljs.core.rest(keys__$1);
var G__8736 = init__$2;
keys__$1 = G__8735;
init__$1 = G__8736;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3115__auto__ = (function (){var G__8731 = k;
return goog.isString(G__8731);
})();
if(cljs.core.truth_(and__3115__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3115__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__8732 = k;
return goog.isString(G__8732);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3115__auto__ = (function (){var G__8734 = k;
return goog.isString(G__8734);
})();
if(cljs.core.truth_(and__3115__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3115__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__8722_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__8722_SHARP_,(self__.strobj[p1__8722_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__8737 = null;
var G__8737__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__8737__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__8737 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__8737__2.call(this,self__,k);
case 3:
return G__8737__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8737.cljs$core$IFn$_invoke$arity$2 = G__8737__2;
G__8737.cljs$core$IFn$_invoke$arity$3 = G__8737__3;
return G__8737;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args8723){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args8723)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj8739 = {};
return obj8739;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__8740 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8740,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8740,(1),null);
self__.s = cljs.core.next(self__.s);

return {"value": [k,v], "done": false};
} else {
return {"value": null, "done": true};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"value": [x,x], "done": false};
} else {
return {"value": null, "done": true};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__8741 = (i + (2));
i = G__8741;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__8742 = (i + (2));
i = G__8742;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__8743 = (i + (2));
i = G__8743;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__8744 = (i + (2));
i = G__8744;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__8745 = (i + (2));
i = G__8745;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3127__auto__ = (function (){var G__8749 = k;
return goog.isString(G__8749);
})();
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_8750 = (0);
while(true){
if((i_8750 < l)){
(narr[i_8750] = (arr[i_8750]));

var G__8751 = (i_8750 + (1));
i_8750 = G__8751;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__8753 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__8753) : cljs.core.keys.call(null,G__8753));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__8754 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__8754) : cljs.core.vals.call(null,G__8754));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__8755 = cljs.core.seq(coll);
var chunk__8756 = null;
var count__8757 = (0);
var i__8758 = (0);
while(true){
if((i__8758 < count__8757)){
var vec__8759 = chunk__8756.cljs$core$IIndexed$_nth$arity$2(null,i__8758);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8759,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8759,(1),null);
var G__8760_8773 = v;
var G__8761_8774 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8760_8773,G__8761_8774) : f.call(null,G__8760_8773,G__8761_8774));

var G__8775 = seq__8755;
var G__8776 = chunk__8756;
var G__8777 = count__8757;
var G__8778 = (i__8758 + (1));
seq__8755 = G__8775;
chunk__8756 = G__8776;
count__8757 = G__8777;
i__8758 = G__8778;
continue;
} else {
var temp__4425__auto__ = cljs.core.seq(seq__8755);
if(temp__4425__auto__){
var seq__8755__$1 = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__8755__$1)){
var c__3914__auto__ = cljs.core.chunk_first(seq__8755__$1);
var G__8779 = cljs.core.chunk_rest(seq__8755__$1);
var G__8780 = c__3914__auto__;
var G__8781 = cljs.core.count(c__3914__auto__);
var G__8782 = (0);
seq__8755 = G__8779;
chunk__8756 = G__8780;
count__8757 = G__8781;
i__8758 = G__8782;
continue;
} else {
var vec__8762 = cljs.core.first(seq__8755__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8762,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8762,(1),null);
var G__8763_8783 = v;
var G__8764_8784 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8763_8783,G__8764_8784) : f.call(null,G__8763_8783,G__8764_8784));

var G__8785 = cljs.core.next(seq__8755__$1);
var G__8786 = null;
var G__8787 = (0);
var G__8788 = (0);
seq__8755 = G__8785;
chunk__8756 = G__8786;
count__8757 = G__8787;
i__8758 = G__8788;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__8765 = init__$1;
var G__8766 = (self__.arr[i]);
var G__8767 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8765,G__8766,G__8767) : f.call(null,G__8765,G__8766,G__8767));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__8768 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__8768) : cljs.core.deref.call(null,G__8768));
} else {
var G__8789 = (i + (2));
var G__8790 = init__$2;
i = G__8789;
init__$1 = G__8790;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__8769 = other;
if(G__8769){
var bit__3801__auto__ = (G__8769.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__3801__auto__) || (G__8769.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__8791 = (i + (2));
i = G__8791;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj8771 = {};
return obj8771;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__8792 = (s + (2));
var G__8793 = d;
s = G__8792;
d = G__8793;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__8794 = (s + (2));
var G__8795 = (d + (2));
s = G__8794;
d = G__8795;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__8772 = cljs.core.aclone(self__.arr);
(G__8772[(idx + (1))] = v);

return G__8772;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__8796 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__8797 = cljs.core.next(es);
ret = G__8796;
es = G__8797;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__8798 = null;
var G__8798__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__8798__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__8798 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__8798__2.call(this,self__,k);
case 3:
return G__8798__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8798.cljs$core$IFn$_invoke$arity$2 = G__8798__2;
G__8798.cljs$core$IFn$_invoke$arity$3 = G__8798__3;
return G__8798;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args8752){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args8752)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__8799 = (i + (2));
var G__8800 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__8799;
ret = G__8800;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition0$ = 258;
this.cljs$lang$protocol_mask$partition1$ = 56;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__8801 = o;
if(G__8801){
var bit__3808__auto__ = (G__8801.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__3808__auto__) || (G__8801.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__8801.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__8801);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__8801);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__8802 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__8802) : cljs.core.key.call(null,G__8802));
})(),(function (){var G__8803 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__8803) : cljs.core.val.call(null,G__8803));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4423__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4423__auto__)){
var e = temp__4423__auto__;
var G__8809 = cljs.core.next(es);
var G__8810 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__8804 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__8804) : cljs.core.key.call(null,G__8804));
})(),(function (){var G__8805 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__8805) : cljs.core.val.call(null,G__8805));
})());
es = G__8809;
tcoll__$2 = G__8810;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__8806 = self__.len;
var G__8807 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__8806,G__8807) : cljs.core.array__GT_transient_hash_map.call(null,G__8806,G__8807));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__8808_8811 = self__.arr;
G__8808_8811.pop();

G__8808_8811.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__8812 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__8813 = (i + (2));
out = G__8812;
i = G__8813;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__8816 = cljs.core.aclone(arr);
(G__8816[i] = a);

return G__8816;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__8817 = cljs.core.aclone(arr);
(G__8817[i] = a);

(G__8817[j] = b);

return G__8817;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__8822 = init__$1;
var G__8823 = k;
var G__8824 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8822,G__8823,G__8824) : f.call(null,G__8822,G__8823,G__8824));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__8825 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__8825) : cljs.core.deref.call(null,G__8825));
} else {
var G__8826 = (i + (2));
var G__8827 = init__$2;
i = G__8826;
init__$1 = G__8827;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__8828 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__8828) : cljs.core.create_inode_seq.call(null,G__8828));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_8842 = (0);
var j_8843 = (0);
while(true){
if((i_8842 < (32))){
if((((self__.bitmap >>> i_8842) & (1)) === (0))){
var G__8844 = (i_8842 + (1));
var G__8845 = j_8843;
i_8842 = G__8844;
j_8843 = G__8845;
continue;
} else {
(nodes[i_8842] = ((!(((self__.arr[j_8843]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_8843])),(self__.arr[j_8843]),(self__.arr[(j_8843 + (1))]),added_leaf_QMARK_):(self__.arr[(j_8843 + (1))])));

var G__8846 = (i_8842 + (1));
var G__8847 = (j_8843 + (2));
i_8842 = G__8846;
j_8843 = G__8847;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__8829 = edit__$1;
var G__8830 = (shift + (5));
var G__8831 = key_or_nil;
var G__8832 = val_or_node;
var G__8833 = hash;
var G__8834 = key;
var G__8835 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__8829,G__8830,G__8831,G__8832,G__8833,G__8834,G__8835) : cljs.core.create_node.call(null,G__8829,G__8830,G__8831,G__8832,G__8833,G__8834,G__8835));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_8848 = (0);
var j_8849 = (0);
while(true){
if((i_8848 < (32))){
if((((self__.bitmap >>> i_8848) & (1)) === (0))){
var G__8850 = (i_8848 + (1));
var G__8851 = j_8849;
i_8848 = G__8850;
j_8849 = G__8851;
continue;
} else {
(nodes[i_8848] = ((!(((self__.arr[j_8849]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_8849])),(self__.arr[j_8849]),(self__.arr[(j_8849 + (1))]),added_leaf_QMARK_):(self__.arr[(j_8849 + (1))])));

var G__8852 = (i_8848 + (1));
var G__8853 = (j_8849 + (2));
i_8848 = G__8852;
j_8849 = G__8853;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__8836 = (shift + (5));
var G__8837 = key_or_nil;
var G__8838 = val_or_node;
var G__8839 = hash;
var G__8840 = key;
var G__8841 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__8836,G__8837,G__8838,G__8839,G__8840,G__8841) : cljs.core.create_node.call(null,G__8836,G__8837,G__8838,G__8839,G__8840,G__8841));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__8854 = (i + (1));
var G__8855 = (j + (2));
var G__8856 = (bitmap | ((1) << i));
i = G__8854;
j = G__8855;
bitmap = G__8856;
continue;
} else {
var G__8857 = (i + (1));
var G__8858 = j;
var G__8859 = bitmap;
i = G__8857;
j = G__8858;
bitmap = G__8859;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__8860 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__8860) : cljs.core.create_array_node_seq.call(null,G__8860));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__8861 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__8861) : cljs.core.deref.call(null,G__8861));
} else {
var G__8862 = (i + (1));
var G__8863 = init__$2;
i = G__8862;
init__$1 = G__8863;
continue;
}
} else {
var G__8864 = (i + (1));
var G__8865 = init__$1;
i = G__8864;
init__$1 = G__8865;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__8866 = (i + (2));
i = G__8866;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__8867 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__8867) : cljs.core.create_inode_seq.call(null,G__8867));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__8868 = self__.nodes;
var G__8869 = (self__.i + (2));
var G__8870 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__8868,G__8869,G__8870) : cljs.core.create_inode_seq.call(null,G__8868,G__8869,G__8870));
} else {
var G__8871 = self__.nodes;
var G__8872 = self__.i;
var G__8873 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__8871,G__8872,G__8873) : cljs.core.create_inode_seq.call(null,G__8871,G__8872,G__8873));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4423__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4423__auto__)){
var node = temp__4423__auto__;
var temp__4423__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4423__auto____$1)){
var node_seq = temp__4423__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__8877 = (j + (2));
j = G__8877;
continue;
}
} else {
var G__8878 = (j + (2));
j = G__8878;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__8879 = null;
var G__8880 = self__.nodes;
var G__8881 = self__.i;
var G__8882 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__8879,G__8880,G__8881,G__8882) : cljs.core.create_array_node_seq.call(null,G__8879,G__8880,G__8881,G__8882));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4423__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4423__auto__)){
var nj = temp__4423__auto__;
var temp__4423__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4423__auto____$1)){
var ns = temp__4423__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__8887 = (j + (1));
j = G__8887;
continue;
}
} else {
var G__8888 = (j + (1));
j = G__8888;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__8890 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__8890) : cljs.core.keys.call(null,G__8890));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__8891 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__8891) : cljs.core.vals.call(null,G__8891));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__8892 = cljs.core.seq(coll);
var chunk__8893 = null;
var count__8894 = (0);
var i__8895 = (0);
while(true){
if((i__8895 < count__8894)){
var vec__8896 = chunk__8893.cljs$core$IIndexed$_nth$arity$2(null,i__8895);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8896,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8896,(1),null);
var G__8897_8908 = v;
var G__8898_8909 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8897_8908,G__8898_8909) : f.call(null,G__8897_8908,G__8898_8909));

var G__8910 = seq__8892;
var G__8911 = chunk__8893;
var G__8912 = count__8894;
var G__8913 = (i__8895 + (1));
seq__8892 = G__8910;
chunk__8893 = G__8911;
count__8894 = G__8912;
i__8895 = G__8913;
continue;
} else {
var temp__4425__auto__ = cljs.core.seq(seq__8892);
if(temp__4425__auto__){
var seq__8892__$1 = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__8892__$1)){
var c__3914__auto__ = cljs.core.chunk_first(seq__8892__$1);
var G__8914 = cljs.core.chunk_rest(seq__8892__$1);
var G__8915 = c__3914__auto__;
var G__8916 = cljs.core.count(c__3914__auto__);
var G__8917 = (0);
seq__8892 = G__8914;
chunk__8893 = G__8915;
count__8894 = G__8916;
i__8895 = G__8917;
continue;
} else {
var vec__8899 = cljs.core.first(seq__8892__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8899,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8899,(1),null);
var G__8900_8918 = v;
var G__8901_8919 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8900_8918,G__8901_8919) : f.call(null,G__8900_8918,G__8901_8919));

var G__8920 = cljs.core.next(seq__8892__$1);
var G__8921 = null;
var G__8922 = (0);
var G__8923 = (0);
seq__8892 = G__8920;
chunk__8893 = G__8921;
count__8894 = G__8922;
i__8895 = G__8923;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__8902 = init;
var G__8903 = null;
var G__8904 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8902,G__8903,G__8904) : f.call(null,G__8902,G__8903,G__8904));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__8905 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__8905) : cljs.core.deref.call(null,G__8905));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj8907 = {};
return obj8907;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__8924 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__8925 = cljs.core.next(es);
ret = G__8924;
es = G__8925;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__8926 = null;
var G__8926__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__8926__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__8926 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__8926__2.call(this,self__,k);
case 3:
return G__8926__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8926.cljs$core$IFn$_invoke$arity$2 = G__8926__2;
G__8926.cljs$core$IFn$_invoke$arity$3 = G__8926__3;
return G__8926;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args8889){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args8889)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__8927 = (i + (2));
var G__8928 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__8927;
ret = G__8928;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__8929 = (i + (1));
var G__8930 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__8929;
out = G__8930;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition0$ = 258;
this.cljs$lang$protocol_mask$partition1$ = 56;
})
cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__8931 = o;
if(G__8931){
var bit__3808__auto__ = (G__8931.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__3808__auto__) || (G__8931.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__8931.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__8931);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__8931);
}
})()){
return tcoll.assoc_BANG_((function (){var G__8932 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__8932) : cljs.core.key.call(null,G__8932));
})(),(function (){var G__8933 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__8933) : cljs.core.val.call(null,G__8933));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4423__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4423__auto__)){
var e = temp__4423__auto__;
var G__8936 = cljs.core.next(es);
var G__8937 = tcoll__$1.assoc_BANG_((function (){var G__8934 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__8934) : cljs.core.key.call(null,G__8934));
})(),(function (){var G__8935 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__8935) : cljs.core.val.call(null,G__8935));
})());
es = G__8936;
tcoll__$1 = G__8937;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__8938 = ((ascending_QMARK_)?t.left:t.right);
var G__8939 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__8938;
stack__$1 = G__8939;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__8952 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__8952) : cljs.core.deref.call(null,G__8952));
} else {
var init__$2 = (function (){var G__8953 = init__$1;
var G__8954 = node.key;
var G__8955 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8953,G__8954,G__8955) : f.call(null,G__8953,G__8954,G__8955));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__8956 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__8956) : cljs.core.deref.call(null,G__8956));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__8957 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__8957) : cljs.core.deref.call(null,G__8957));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__8959 = null;
var G__8959__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__8959__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__8959 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__8959__2.call(this,self__,k);
case 3:
return G__8959__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8959.cljs$core$IFn$_invoke$arity$2 = G__8959__2;
G__8959.cljs$core$IFn$_invoke$arity$3 = G__8959__3;
return G__8959;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args8958){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args8958)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__8961 = null;
var G__8961__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__8961__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__8961 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__8961__2.call(this,self__,k);
case 3:
return G__8961__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__8961.cljs$core$IFn$_invoke$arity$2 = G__8961__2;
G__8961.cljs$core$IFn$_invoke$arity$3 = G__8961__3;
return G__8961;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args8960){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args8960)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__8974 = k;
var G__8975 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__8974,G__8975) : comp.call(null,G__8974,G__8975));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__8994 = k;
var G__8995 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__8994,G__8995) : comp.call(null,G__8994,G__8995));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__9006 = k;
var G__9007 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9006,G__9007) : comp.call(null,G__9006,G__9007));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__9009 = cljs.core.seq(coll);
var chunk__9010 = null;
var count__9011 = (0);
var i__9012 = (0);
while(true){
if((i__9012 < count__9011)){
var vec__9013 = chunk__9010.cljs$core$IIndexed$_nth$arity$2(null,i__9012);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9013,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9013,(1),null);
var G__9014_9026 = v;
var G__9015_9027 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9014_9026,G__9015_9027) : f.call(null,G__9014_9026,G__9015_9027));

var G__9028 = seq__9009;
var G__9029 = chunk__9010;
var G__9030 = count__9011;
var G__9031 = (i__9012 + (1));
seq__9009 = G__9028;
chunk__9010 = G__9029;
count__9011 = G__9030;
i__9012 = G__9031;
continue;
} else {
var temp__4425__auto__ = cljs.core.seq(seq__9009);
if(temp__4425__auto__){
var seq__9009__$1 = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9009__$1)){
var c__3914__auto__ = cljs.core.chunk_first(seq__9009__$1);
var G__9032 = cljs.core.chunk_rest(seq__9009__$1);
var G__9033 = c__3914__auto__;
var G__9034 = cljs.core.count(c__3914__auto__);
var G__9035 = (0);
seq__9009 = G__9032;
chunk__9010 = G__9033;
count__9011 = G__9034;
i__9012 = G__9035;
continue;
} else {
var vec__9016 = cljs.core.first(seq__9009__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9016,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9016,(1),null);
var G__9017_9036 = v;
var G__9018_9037 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9017_9036,G__9018_9037) : f.call(null,G__9017_9036,G__9018_9037));

var G__9038 = cljs.core.next(seq__9009__$1);
var G__9039 = null;
var G__9040 = (0);
var G__9041 = (0);
seq__9009 = G__9038;
chunk__9010 = G__9039;
count__9011 = G__9040;
i__9012 = G__9041;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9019 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9019) : cljs.core.keys.call(null,G__9019));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__9020 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9020) : cljs.core.vals.call(null,G__9020));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__9021 = k;
var G__9022 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__9021,G__9022) : self__.comp.call(null,G__9021,G__9022));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__9042 = t.left;
t = G__9042;
continue;
} else {
var G__9043 = t.right;
t = G__9043;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__9044 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__9045 = cljs.core.next(es);
ret = G__9044;
es = G__9045;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__9046 = null;
var G__9046__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9046__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9046 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9046__2.call(this,self__,k);
case 3:
return G__9046__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9046.cljs$core$IFn$_invoke$arity$2 = G__9046__2;
G__9046.cljs$core$IFn$_invoke$arity$3 = G__9046__3;
return G__9046;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args9008){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9008)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__9023 = k;
var G__9024 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__9023,G__9024) : self__.comp.call(null,G__9023,G__9024));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__9047 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__9048 = t.left;
stack = G__9047;
t = G__9048;
continue;
} else {
var G__9049 = stack;
var G__9050 = t.right;
stack = G__9049;
t = G__9050;
continue;
}
} else {
if((c > (0))){
var G__9051 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__9052 = t.right;
stack = G__9051;
t = G__9052;
continue;
} else {
var G__9053 = stack;
var G__9054 = t.left;
stack = G__9053;
t = G__9054;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__9025 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9025) : cljs.core.key.call(null,G__9025));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__9055 = cljs.core.nnext(in$);
var G__9056 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__9055;
out = G__9056;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__9057__i = 0, G__9057__a = new Array(arguments.length -  0);
while (G__9057__i < G__9057__a.length) {G__9057__a[G__9057__i] = arguments[G__9057__i + 0]; ++G__9057__i;}
  keyvals = new cljs.core.IndexedSeq(G__9057__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__9058){
var keyvals = cljs.core.seq(arglist__9058);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__9059__i = 0, G__9059__a = new Array(arguments.length -  0);
while (G__9059__i < G__9059__a.length) {G__9059__a[G__9059__i] = arguments[G__9059__i + 0]; ++G__9059__i;}
  keyvals = new cljs.core.IndexedSeq(G__9059__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__9060){
var keyvals = cljs.core.seq(arglist__9060);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj9064 = {};
return obj9064;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__9065 = cljs.core.nnext(kvs);
kvs = G__9065;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__9066__i = 0, G__9066__a = new Array(arguments.length -  0);
while (G__9066__i < G__9066__a.length) {G__9066__a[G__9066__i] = arguments[G__9066__i + 0]; ++G__9066__i;}
  keyvals = new cljs.core.IndexedSeq(G__9066__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__9067){
var keyvals = cljs.core.seq(arglist__9067);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__9068 = cljs.core.nnext(in$);
var G__9069 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__9068;
out = G__9069;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__9070__i = 0, G__9070__a = new Array(arguments.length -  0);
while (G__9070__i < G__9070__a.length) {G__9070__a[G__9070__i] = arguments[G__9070__i + 0]; ++G__9070__i;}
  keyvals = new cljs.core.IndexedSeq(G__9070__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__9071){
var keyvals = cljs.core.seq(arglist__9071);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__9072 = cljs.core.nnext(in$);
var G__9073 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__9072;
out = G__9073;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__9074__i = 0, G__9074__a = new Array(arguments.length -  1);
while (G__9074__i < G__9074__a.length) {G__9074__a[G__9074__i] = arguments[G__9074__i + 1]; ++G__9074__i;}
  keyvals = new cljs.core.IndexedSeq(G__9074__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__9075){
var comparator = cljs.core.first(arglist__9075);
var keyvals = cljs.core.rest(arglist__9075);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__9076 = self__.mseq;
if(G__9076){
var bit__3808__auto__ = (G__9076.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__3808__auto__) || (G__9076.cljs$core$INext$)){
return true;
} else {
if((!G__9076.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9076);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9076);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__9077 = self__.mseq;
if(G__9077){
var bit__3808__auto__ = (G__9077.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__3808__auto__) || (G__9077.cljs$core$INext$)){
return true;
} else {
if((!G__9077.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9077);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9077);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4425__auto__ = cljs.core.seq(hash_map);
if(temp__4425__auto__){
var mseq = temp__4425__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__9078 = self__.mseq;
if(G__9078){
var bit__3808__auto__ = (G__9078.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__3808__auto__) || (G__9078.cljs$core$INext$)){
return true;
} else {
if((!G__9078.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9078);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9078);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__9079 = self__.mseq;
if(G__9079){
var bit__3808__auto__ = (G__9079.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__3808__auto__) || (G__9079.cljs$core$INext$)){
return true;
} else {
if((!G__9079.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9079);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__9079);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4425__auto__ = cljs.core.seq(hash_map);
if(temp__4425__auto__){
var mseq = temp__4425__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__9080_SHARP_,p2__9081_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3127__auto__ = p1__9080_SHARP_;
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__9081_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__9082__i = 0, G__9082__a = new Array(arguments.length -  0);
while (G__9082__i < G__9082__a.length) {G__9082__a[G__9082__i] = arguments[G__9082__i + 0]; ++G__9082__i;}
  maps = new cljs.core.IndexedSeq(G__9082__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__9083){
var maps = cljs.core.seq(arglist__9083);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__9086 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__9087 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9086,G__9087) : f.call(null,G__9086,G__9087));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3127__auto__ = m1;
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__9088__i = 0, G__9088__a = new Array(arguments.length -  1);
while (G__9088__i < G__9088__a.length) {G__9088__a[G__9088__i] = arguments[G__9088__i + 1]; ++G__9088__i;}
  maps = new cljs.core.IndexedSeq(G__9088__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__9089){
var f = cljs.core.first(arglist__9089);
var maps = cljs.core.rest(arglist__9089);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__9090 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__9091 = cljs.core.next(keys);
ret = G__9090;
keys = G__9091;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__9094 = cljs.core.seq(coll);
var chunk__9095 = null;
var count__9096 = (0);
var i__9097 = (0);
while(true){
if((i__9097 < count__9096)){
var vec__9098 = chunk__9095.cljs$core$IIndexed$_nth$arity$2(null,i__9097);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9098,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9098,(1),null);
var G__9099_9104 = v;
var G__9100_9105 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9099_9104,G__9100_9105) : f.call(null,G__9099_9104,G__9100_9105));

var G__9106 = seq__9094;
var G__9107 = chunk__9095;
var G__9108 = count__9096;
var G__9109 = (i__9097 + (1));
seq__9094 = G__9106;
chunk__9095 = G__9107;
count__9096 = G__9108;
i__9097 = G__9109;
continue;
} else {
var temp__4425__auto__ = cljs.core.seq(seq__9094);
if(temp__4425__auto__){
var seq__9094__$1 = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9094__$1)){
var c__3914__auto__ = cljs.core.chunk_first(seq__9094__$1);
var G__9110 = cljs.core.chunk_rest(seq__9094__$1);
var G__9111 = c__3914__auto__;
var G__9112 = cljs.core.count(c__3914__auto__);
var G__9113 = (0);
seq__9094 = G__9110;
chunk__9095 = G__9111;
count__9096 = G__9112;
i__9097 = G__9113;
continue;
} else {
var vec__9101 = cljs.core.first(seq__9094__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9101,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9101,(1),null);
var G__9102_9114 = v;
var G__9103_9115 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9102_9114,G__9103_9115) : f.call(null,G__9102_9114,G__9103_9115));

var G__9116 = cljs.core.next(seq__9094__$1);
var G__9117 = null;
var G__9118 = (0);
var G__9119 = (0);
seq__9094 = G__9116;
chunk__9095 = G__9117;
count__9096 = G__9118;
i__9097 = G__9119;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__9092_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__9092_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__9120 = null;
var G__9120__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9120__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9120 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9120__2.call(this,self__,k);
case 3:
return G__9120__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9120.cljs$core$IFn$_invoke$arity$2 = G__9120__2;
G__9120.cljs$core$IFn$_invoke$arity$3 = G__9120__3;
return G__9120;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args9093){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9093)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__9121 = (i + (1));
var G__9122 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__9121;
out = G__9122;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__9123 = (i + (1));
var G__9124 = cljs.core._conj_BANG_(out,(items[i]));
i = G__9123;
out = G__9124;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition1$ = 136;
this.cljs$lang$protocol_mask$partition0$ = 259;
})
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.call = (function() {
var G__9126 = null;
var G__9126__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__9126__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__9126 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9126__2.call(this,self__,k);
case 3:
return G__9126__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9126.cljs$core$IFn$_invoke$arity$2 = G__9126__2;
G__9126.cljs$core$IFn$_invoke$arity$3 = G__9126__3;
return G__9126;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args9125){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9125)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__9129 = cljs.core.seq(coll);
var chunk__9130 = null;
var count__9131 = (0);
var i__9132 = (0);
while(true){
if((i__9132 < count__9131)){
var vec__9133 = chunk__9130.cljs$core$IIndexed$_nth$arity$2(null,i__9132);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9133,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9133,(1),null);
var G__9134_9139 = v;
var G__9135_9140 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9134_9139,G__9135_9140) : f.call(null,G__9134_9139,G__9135_9140));

var G__9141 = seq__9129;
var G__9142 = chunk__9130;
var G__9143 = count__9131;
var G__9144 = (i__9132 + (1));
seq__9129 = G__9141;
chunk__9130 = G__9142;
count__9131 = G__9143;
i__9132 = G__9144;
continue;
} else {
var temp__4425__auto__ = cljs.core.seq(seq__9129);
if(temp__4425__auto__){
var seq__9129__$1 = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9129__$1)){
var c__3914__auto__ = cljs.core.chunk_first(seq__9129__$1);
var G__9145 = cljs.core.chunk_rest(seq__9129__$1);
var G__9146 = c__3914__auto__;
var G__9147 = cljs.core.count(c__3914__auto__);
var G__9148 = (0);
seq__9129 = G__9145;
chunk__9130 = G__9146;
count__9131 = G__9147;
i__9132 = G__9148;
continue;
} else {
var vec__9136 = cljs.core.first(seq__9129__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9136,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9136,(1),null);
var G__9137_9149 = v;
var G__9138_9150 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9137_9149,G__9138_9150) : f.call(null,G__9137_9149,G__9138_9150));

var G__9151 = cljs.core.next(seq__9129__$1);
var G__9152 = null;
var G__9153 = (0);
var G__9154 = (0);
seq__9129 = G__9151;
chunk__9130 = G__9152;
count__9131 = G__9153;
i__9132 = G__9154;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__9127_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__9127_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__9155 = null;
var G__9155__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__9155__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__9155 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__9155__2.call(this,self__,k);
case 3:
return G__9155__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9155.cljs$core$IFn$_invoke$arity$2 = G__9155__2;
G__9155.cljs$core$IFn$_invoke$arity$3 = G__9155__3;
return G__9155;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args9128){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9128)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4008__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4008__auto__.length)){
var G__9156 = (i + (1));
var G__9157 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__9156;
res = G__9157;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__9158 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__9159 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__9158;
out = G__9159;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__9160__delegate = function (keys){
return cljs.core.set(keys);
};
var G__9160 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__9161__i = 0, G__9161__a = new Array(arguments.length -  0);
while (G__9161__i < G__9161__a.length) {G__9161__a[G__9161__i] = arguments[G__9161__i + 0]; ++G__9161__i;}
  keys = new cljs.core.IndexedSeq(G__9161__a,0);
} 
return G__9160__delegate.call(this,keys);};
G__9160.cljs$lang$maxFixedArity = 0;
G__9160.cljs$lang$applyTo = (function (arglist__9162){
var keys = cljs.core.seq(arglist__9162);
return G__9160__delegate(keys);
});
G__9160.cljs$core$IFn$_invoke$arity$variadic = G__9160__delegate;
return G__9160;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__9163 = null;
if (arguments.length > 0) {
var G__9164__i = 0, G__9164__a = new Array(arguments.length -  0);
while (G__9164__i < G__9164__a.length) {G__9164__a[G__9164__i] = arguments[G__9164__i + 0]; ++G__9164__i;}
G__9163 = new cljs.core.IndexedSeq(G__9164__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__9163);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__9165__i = 0, G__9165__a = new Array(arguments.length -  0);
while (G__9165__i < G__9165__a.length) {G__9165__a[G__9165__i] = arguments[G__9165__i + 0]; ++G__9165__i;}
  keys = new cljs.core.IndexedSeq(G__9165__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__9166){
var keys = cljs.core.seq(arglist__9166);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__9167__i = 0, G__9167__a = new Array(arguments.length -  1);
while (G__9167__i < G__9167__a.length) {G__9167__a[G__9167__i] = arguments[G__9167__i + 1]; ++G__9167__i;}
  keys = new cljs.core.IndexedSeq(G__9167__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__9168){
var comparator = cljs.core.first(arglist__9168);
var keys = cljs.core.rest(arglist__9168);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__9169_SHARP_){
var temp__4423__auto__ = cljs.core.find(smap,p1__9169_SHARP_);
if(cljs.core.truth_(temp__4423__auto__)){
var e = temp__4423__auto__;
return cljs.core.val(e);
} else {
return p1__9169_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4423__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4423__auto__)){
var e = temp__4423__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__9170_SHARP_){
var temp__4423__auto__ = cljs.core.find(smap,p1__9170_SHARP_);
if(cljs.core.truth_(temp__4423__auto__)){
var e = temp__4423__auto__;
return cljs.core.second(e);
} else {
return p1__9170_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__9191 = null;
var G__9191__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9191__1 = (function (result){
var G__9181 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9181) : rf.call(null,G__9181));
});
var G__9191__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__9182 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9182) : cljs.core.deref.call(null,G__9182));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__9183 = result;
var G__9184 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9183,G__9184) : rf.call(null,G__9183,G__9184));
}
});
G__9191 = function(result,input){
switch(arguments.length){
case 0:
return G__9191__0.call(this);
case 1:
return G__9191__1.call(this,result);
case 2:
return G__9191__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9191.cljs$core$IFn$_invoke$arity$0 = G__9191__0;
G__9191.cljs$core$IFn$_invoke$arity$1 = G__9191__1;
G__9191.cljs$core$IFn$_invoke$arity$2 = G__9191__2;
return G__9191;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__9189,seen__$1){
while(true){
var vec__9190 = p__9189;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9190,(0),null);
var xs__$1 = vec__9190;
var temp__4425__auto__ = cljs.core.seq(xs__$1);
if(temp__4425__auto__){
var s = temp__4425__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__9192 = cljs.core.rest(s);
var G__9193 = seen__$1;
p__9189 = G__9192;
seen__$1 = G__9193;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__9194 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__9195 = cljs.core.next(s__$1);
ret = G__9194;
s__$1 = G__9195;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__9197 = x;
if(G__9197){
var bit__3801__auto__ = (G__9197.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__3801__auto__) || (G__9197.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__9198 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__9199 = cljs.core.next(ks);
var G__9200 = cljs.core.next(vs);
map = G__9198;
ks = G__9199;
vs = G__9200;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__9211 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9211) : k.call(null,G__9211));
})() > (function (){var G__9212 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9212) : k.call(null,G__9212));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__9213__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__9201_SHARP_,p2__9202_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__9201_SHARP_,p2__9202_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__9213 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__9214__i = 0, G__9214__a = new Array(arguments.length -  3);
while (G__9214__i < G__9214__a.length) {G__9214__a[G__9214__i] = arguments[G__9214__i + 3]; ++G__9214__i;}
  more = new cljs.core.IndexedSeq(G__9214__a,0);
} 
return G__9213__delegate.call(this,k,x,y,more);};
G__9213.cljs$lang$maxFixedArity = 3;
G__9213.cljs$lang$applyTo = (function (arglist__9215){
var k = cljs.core.first(arglist__9215);
arglist__9215 = cljs.core.next(arglist__9215);
var x = cljs.core.first(arglist__9215);
arglist__9215 = cljs.core.next(arglist__9215);
var y = cljs.core.first(arglist__9215);
var more = cljs.core.rest(arglist__9215);
return G__9213__delegate(k,x,y,more);
});
G__9213.cljs$core$IFn$_invoke$arity$variadic = G__9213__delegate;
return G__9213;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__9216 = null;
if (arguments.length > 3) {
var G__9217__i = 0, G__9217__a = new Array(arguments.length -  3);
while (G__9217__i < G__9217__a.length) {G__9217__a[G__9217__i] = arguments[G__9217__i + 3]; ++G__9217__i;}
G__9216 = new cljs.core.IndexedSeq(G__9217__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__9216);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__9228 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9228) : k.call(null,G__9228));
})() < (function (){var G__9229 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__9229) : k.call(null,G__9229));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__9230__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__9218_SHARP_,p2__9219_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__9218_SHARP_,p2__9219_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__9230 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__9231__i = 0, G__9231__a = new Array(arguments.length -  3);
while (G__9231__i < G__9231__a.length) {G__9231__a[G__9231__i] = arguments[G__9231__i + 3]; ++G__9231__i;}
  more = new cljs.core.IndexedSeq(G__9231__a,0);
} 
return G__9230__delegate.call(this,k,x,y,more);};
G__9230.cljs$lang$maxFixedArity = 3;
G__9230.cljs$lang$applyTo = (function (arglist__9232){
var k = cljs.core.first(arglist__9232);
arglist__9232 = cljs.core.next(arglist__9232);
var x = cljs.core.first(arglist__9232);
arglist__9232 = cljs.core.next(arglist__9232);
var y = cljs.core.first(arglist__9232);
var more = cljs.core.rest(arglist__9232);
return G__9230__delegate(k,x,y,more);
});
G__9230.cljs$core$IFn$_invoke$arity$variadic = G__9230__delegate;
return G__9230;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__9233 = null;
if (arguments.length > 3) {
var G__9234__i = 0, G__9234__a = new Array(arguments.length -  3);
while (G__9234__i < G__9234__a.length) {G__9234__a[G__9234__i] = arguments[G__9234__i + 3]; ++G__9234__i;}
G__9233 = new cljs.core.IndexedSeq(G__9234__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__9233);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__9251 = null;
var G__9251__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9251__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__9246 = result;
var G__9247 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9246,G__9247) : rf.call(null,G__9246,G__9247));
})());
})());
var G__9248 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9248) : rf.call(null,G__9248));
});
var G__9251__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__9249 = result;
var G__9250 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9249,G__9250) : rf.call(null,G__9249,G__9250));
} else {
return result;
}
});
G__9251 = function(result,input){
switch(arguments.length){
case 0:
return G__9251__0.call(this);
case 1:
return G__9251__1.call(this,result);
case 2:
return G__9251__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9251.cljs$core$IFn$_invoke$arity$0 = G__9251__0;
G__9251.cljs$core$IFn$_invoke$arity$1 = G__9251__1;
G__9251.cljs$core$IFn$_invoke$arity$2 = G__9251__2;
return G__9251;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__9264 = null;
var G__9264__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9264__1 = (function (result){
var G__9259 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9259) : rf.call(null,G__9259));
});
var G__9264__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__9260 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9260) : pred.call(null,G__9260));
})())){
var G__9261 = result;
var G__9262 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9261,G__9262) : rf.call(null,G__9261,G__9262));
} else {
return cljs.core.reduced(result);
}
});
G__9264 = function(result,input){
switch(arguments.length){
case 0:
return G__9264__0.call(this);
case 1:
return G__9264__1.call(this,result);
case 2:
return G__9264__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9264.cljs$core$IFn$_invoke$arity$0 = G__9264__0;
G__9264.cljs$core$IFn$_invoke$arity$1 = G__9264__1;
G__9264.cljs$core$IFn$_invoke$arity$2 = G__9264__2;
return G__9264;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
if(cljs.core.truth_((function (){var G__9263 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9263) : pred.call(null,G__9263));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__9269 = (function (){var G__9271 = cljs.core._entry_key(sc,e);
var G__9272 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9271,G__9272) : comp.call(null,G__9271,G__9272));
})();
var G__9270 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__9269,G__9270) : test.call(null,G__9269,G__9270));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4425__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4425__auto__)){
var vec__9276 = temp__4425__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9276,(0),null);
var s = vec__9276;
if(cljs.core.truth_((function (){var G__9277 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__9277) : include.call(null,G__9277));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4425__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4425__auto__)){
var vec__9278 = temp__4425__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9278,(0),null);
var s = vec__9278;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4425__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4425__auto__)){
var vec__9282 = temp__4425__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9282,(0),null);
var s = vec__9282;
if(cljs.core.truth_((function (){var G__9283 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__9283) : include.call(null,G__9283));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4425__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4425__auto__)){
var vec__9284 = temp__4425__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9284,(0),null);
var s = vec__9284;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__9285 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__9285) : Math.ceil.call(null,G__9285));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__3548__auto__ = self__.__hash;
if(!((h__3548__auto__ == null))){
return h__3548__auto__;
} else {
var h__3548__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__3548__auto____$1;

return h__3548__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__9286 = ret;
var G__9287 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9286,G__9287) : f.call(null,G__9286,G__9287));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__9288 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9288) : cljs.core.deref.call(null,G__9288));
} else {
var G__9289 = (i + self__.step);
var G__9290 = ret__$1;
i = G__9289;
ret = G__9290;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__9308 = null;
var G__9308__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9308__1 = (function (result){
var G__9305 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9305) : rf.call(null,G__9305));
});
var G__9308__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__9306 = result;
var G__9307 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9306,G__9307) : rf.call(null,G__9306,G__9307));
} else {
return result;
}
});
G__9308 = function(result,input){
switch(arguments.length){
case 0:
return G__9308__0.call(this);
case 1:
return G__9308__1.call(this,result);
case 2:
return G__9308__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9308.cljs$core$IFn$_invoke$arity$0 = G__9308__0;
G__9308.cljs$core$IFn$_invoke$arity$1 = G__9308__1;
G__9308.cljs$core$IFn$_invoke$arity$2 = G__9308__2;
return G__9308;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__9330 = null;
var G__9330__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9330__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__9321 = result;
var G__9322 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9321,G__9322) : rf.call(null,G__9321,G__9322));
})());
})());
var G__9323 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9323) : rf.call(null,G__9323));
});
var G__9330__2 = (function (result,input){
var pval = (function (){var G__9324 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9324) : cljs.core.deref.call(null,G__9324));
})();
var val = (function (){var G__9325 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9325) : f.call(null,G__9325));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__9326 = result;
var G__9327 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9326,G__9327) : rf.call(null,G__9326,G__9327));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__9330 = function(result,input){
switch(arguments.length){
case 0:
return G__9330__0.call(this);
case 1:
return G__9330__1.call(this,result);
case 2:
return G__9330__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9330.cljs$core$IFn$_invoke$arity$0 = G__9330__0;
G__9330.cljs$core$IFn$_invoke$arity$1 = G__9330__1;
G__9330.cljs$core$IFn$_invoke$arity$2 = G__9330__2;
return G__9330;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__9328 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9328) : f.call(null,G__9328));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4425__auto__){
return (function (p1__9309_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__9329 = p1__9309_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9329) : f.call(null,G__9329));
})());
});})(fst,fv,s,temp__4425__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4423__auto__ = cljs.core.seq(coll);
if(temp__4423__auto__){
var s = temp__4423__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4425__auto__ = cljs.core.seq(coll);
if(temp__4425__auto__){
var s = temp__4425__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__9339 = init;
var G__9340 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9339,G__9340) : f.call(null,G__9339,G__9340));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__9435 = null;
var G__9435__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__9435__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9393 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9393) : f.call(null,G__9393));
})()],null));
});
var G__9435__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9394 = x;
var G__9395 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9394,G__9395) : f.call(null,G__9394,G__9395));
})()],null));
});
var G__9435__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9396 = x;
var G__9397 = y;
var G__9398 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9396,G__9397,G__9398) : f.call(null,G__9396,G__9397,G__9398));
})()],null));
});
var G__9435__4 = (function() { 
var G__9436__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__9436 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9437__i = 0, G__9437__a = new Array(arguments.length -  3);
while (G__9437__i < G__9437__a.length) {G__9437__a[G__9437__i] = arguments[G__9437__i + 3]; ++G__9437__i;}
  args = new cljs.core.IndexedSeq(G__9437__a,0);
} 
return G__9436__delegate.call(this,x,y,z,args);};
G__9436.cljs$lang$maxFixedArity = 3;
G__9436.cljs$lang$applyTo = (function (arglist__9438){
var x = cljs.core.first(arglist__9438);
arglist__9438 = cljs.core.next(arglist__9438);
var y = cljs.core.first(arglist__9438);
arglist__9438 = cljs.core.next(arglist__9438);
var z = cljs.core.first(arglist__9438);
var args = cljs.core.rest(arglist__9438);
return G__9436__delegate(x,y,z,args);
});
G__9436.cljs$core$IFn$_invoke$arity$variadic = G__9436__delegate;
return G__9436;
})()
;
G__9435 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9435__0.call(this);
case 1:
return G__9435__1.call(this,x);
case 2:
return G__9435__2.call(this,x,y);
case 3:
return G__9435__3.call(this,x,y,z);
default:
var G__9439 = null;
if (arguments.length > 3) {
var G__9440__i = 0, G__9440__a = new Array(arguments.length -  3);
while (G__9440__i < G__9440__a.length) {G__9440__a[G__9440__i] = arguments[G__9440__i + 3]; ++G__9440__i;}
G__9439 = new cljs.core.IndexedSeq(G__9440__a,0);
}
return G__9435__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9439);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9435.cljs$lang$maxFixedArity = 3;
G__9435.cljs$lang$applyTo = G__9435__4.cljs$lang$applyTo;
G__9435.cljs$core$IFn$_invoke$arity$0 = G__9435__0;
G__9435.cljs$core$IFn$_invoke$arity$1 = G__9435__1;
G__9435.cljs$core$IFn$_invoke$arity$2 = G__9435__2;
G__9435.cljs$core$IFn$_invoke$arity$3 = G__9435__3;
G__9435.cljs$core$IFn$_invoke$arity$variadic = G__9435__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9435;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__9441 = null;
var G__9441__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__9441__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9399 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9399) : f.call(null,G__9399));
})(),(function (){var G__9400 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9400) : g.call(null,G__9400));
})()],null));
});
var G__9441__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9401 = x;
var G__9402 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9401,G__9402) : f.call(null,G__9401,G__9402));
})(),(function (){var G__9403 = x;
var G__9404 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__9403,G__9404) : g.call(null,G__9403,G__9404));
})()],null));
});
var G__9441__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9405 = x;
var G__9406 = y;
var G__9407 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9405,G__9406,G__9407) : f.call(null,G__9405,G__9406,G__9407));
})(),(function (){var G__9408 = x;
var G__9409 = y;
var G__9410 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__9408,G__9409,G__9410) : g.call(null,G__9408,G__9409,G__9410));
})()],null));
});
var G__9441__4 = (function() { 
var G__9442__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__9442 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9443__i = 0, G__9443__a = new Array(arguments.length -  3);
while (G__9443__i < G__9443__a.length) {G__9443__a[G__9443__i] = arguments[G__9443__i + 3]; ++G__9443__i;}
  args = new cljs.core.IndexedSeq(G__9443__a,0);
} 
return G__9442__delegate.call(this,x,y,z,args);};
G__9442.cljs$lang$maxFixedArity = 3;
G__9442.cljs$lang$applyTo = (function (arglist__9444){
var x = cljs.core.first(arglist__9444);
arglist__9444 = cljs.core.next(arglist__9444);
var y = cljs.core.first(arglist__9444);
arglist__9444 = cljs.core.next(arglist__9444);
var z = cljs.core.first(arglist__9444);
var args = cljs.core.rest(arglist__9444);
return G__9442__delegate(x,y,z,args);
});
G__9442.cljs$core$IFn$_invoke$arity$variadic = G__9442__delegate;
return G__9442;
})()
;
G__9441 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9441__0.call(this);
case 1:
return G__9441__1.call(this,x);
case 2:
return G__9441__2.call(this,x,y);
case 3:
return G__9441__3.call(this,x,y,z);
default:
var G__9445 = null;
if (arguments.length > 3) {
var G__9446__i = 0, G__9446__a = new Array(arguments.length -  3);
while (G__9446__i < G__9446__a.length) {G__9446__a[G__9446__i] = arguments[G__9446__i + 3]; ++G__9446__i;}
G__9445 = new cljs.core.IndexedSeq(G__9446__a,0);
}
return G__9441__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9445);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9441.cljs$lang$maxFixedArity = 3;
G__9441.cljs$lang$applyTo = G__9441__4.cljs$lang$applyTo;
G__9441.cljs$core$IFn$_invoke$arity$0 = G__9441__0;
G__9441.cljs$core$IFn$_invoke$arity$1 = G__9441__1;
G__9441.cljs$core$IFn$_invoke$arity$2 = G__9441__2;
G__9441.cljs$core$IFn$_invoke$arity$3 = G__9441__3;
G__9441.cljs$core$IFn$_invoke$arity$variadic = G__9441__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9441;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__9447 = null;
var G__9447__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__9447__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9411 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9411) : f.call(null,G__9411));
})(),(function (){var G__9412 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__9412) : g.call(null,G__9412));
})(),(function (){var G__9413 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__9413) : h.call(null,G__9413));
})()],null));
});
var G__9447__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9414 = x;
var G__9415 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9414,G__9415) : f.call(null,G__9414,G__9415));
})(),(function (){var G__9416 = x;
var G__9417 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__9416,G__9417) : g.call(null,G__9416,G__9417));
})(),(function (){var G__9418 = x;
var G__9419 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__9418,G__9419) : h.call(null,G__9418,G__9419));
})()],null));
});
var G__9447__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__9420 = x;
var G__9421 = y;
var G__9422 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9420,G__9421,G__9422) : f.call(null,G__9420,G__9421,G__9422));
})(),(function (){var G__9423 = x;
var G__9424 = y;
var G__9425 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__9423,G__9424,G__9425) : g.call(null,G__9423,G__9424,G__9425));
})(),(function (){var G__9426 = x;
var G__9427 = y;
var G__9428 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__9426,G__9427,G__9428) : h.call(null,G__9426,G__9427,G__9428));
})()],null));
});
var G__9447__4 = (function() { 
var G__9448__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__9448 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9449__i = 0, G__9449__a = new Array(arguments.length -  3);
while (G__9449__i < G__9449__a.length) {G__9449__a[G__9449__i] = arguments[G__9449__i + 3]; ++G__9449__i;}
  args = new cljs.core.IndexedSeq(G__9449__a,0);
} 
return G__9448__delegate.call(this,x,y,z,args);};
G__9448.cljs$lang$maxFixedArity = 3;
G__9448.cljs$lang$applyTo = (function (arglist__9450){
var x = cljs.core.first(arglist__9450);
arglist__9450 = cljs.core.next(arglist__9450);
var y = cljs.core.first(arglist__9450);
arglist__9450 = cljs.core.next(arglist__9450);
var z = cljs.core.first(arglist__9450);
var args = cljs.core.rest(arglist__9450);
return G__9448__delegate(x,y,z,args);
});
G__9448.cljs$core$IFn$_invoke$arity$variadic = G__9448__delegate;
return G__9448;
})()
;
G__9447 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9447__0.call(this);
case 1:
return G__9447__1.call(this,x);
case 2:
return G__9447__2.call(this,x,y);
case 3:
return G__9447__3.call(this,x,y,z);
default:
var G__9451 = null;
if (arguments.length > 3) {
var G__9452__i = 0, G__9452__a = new Array(arguments.length -  3);
while (G__9452__i < G__9452__a.length) {G__9452__a[G__9452__i] = arguments[G__9452__i + 3]; ++G__9452__i;}
G__9451 = new cljs.core.IndexedSeq(G__9452__a,0);
}
return G__9447__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9451);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9447.cljs$lang$maxFixedArity = 3;
G__9447.cljs$lang$applyTo = G__9447__4.cljs$lang$applyTo;
G__9447.cljs$core$IFn$_invoke$arity$0 = G__9447__0;
G__9447.cljs$core$IFn$_invoke$arity$1 = G__9447__1;
G__9447.cljs$core$IFn$_invoke$arity$2 = G__9447__2;
G__9447.cljs$core$IFn$_invoke$arity$3 = G__9447__3;
G__9447.cljs$core$IFn$_invoke$arity$variadic = G__9447__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9447;
})()
});
var juxt__4 = (function() { 
var G__9453__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__9454 = null;
var G__9454__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__9341_SHARP_,p2__9342_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9341_SHARP_,(function (){return (p2__9342_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__9342_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__9342_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__9454__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__9343_SHARP_,p2__9344_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9343_SHARP_,(function (){var G__9429 = x;
return (p2__9344_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__9344_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9429) : p2__9344_SHARP_.call(null,G__9429));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__9454__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__9345_SHARP_,p2__9346_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9345_SHARP_,(function (){var G__9430 = x;
var G__9431 = y;
return (p2__9346_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__9346_SHARP_.cljs$core$IFn$_invoke$arity$2(G__9430,G__9431) : p2__9346_SHARP_.call(null,G__9430,G__9431));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__9454__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__9347_SHARP_,p2__9348_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9347_SHARP_,(function (){var G__9432 = x;
var G__9433 = y;
var G__9434 = z;
return (p2__9348_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__9348_SHARP_.cljs$core$IFn$_invoke$arity$3(G__9432,G__9433,G__9434) : p2__9348_SHARP_.call(null,G__9432,G__9433,G__9434));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__9454__4 = (function() { 
var G__9455__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__9349_SHARP_,p2__9350_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9349_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__9350_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__9455 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__9456__i = 0, G__9456__a = new Array(arguments.length -  3);
while (G__9456__i < G__9456__a.length) {G__9456__a[G__9456__i] = arguments[G__9456__i + 3]; ++G__9456__i;}
  args = new cljs.core.IndexedSeq(G__9456__a,0);
} 
return G__9455__delegate.call(this,x,y,z,args);};
G__9455.cljs$lang$maxFixedArity = 3;
G__9455.cljs$lang$applyTo = (function (arglist__9457){
var x = cljs.core.first(arglist__9457);
arglist__9457 = cljs.core.next(arglist__9457);
var y = cljs.core.first(arglist__9457);
arglist__9457 = cljs.core.next(arglist__9457);
var z = cljs.core.first(arglist__9457);
var args = cljs.core.rest(arglist__9457);
return G__9455__delegate(x,y,z,args);
});
G__9455.cljs$core$IFn$_invoke$arity$variadic = G__9455__delegate;
return G__9455;
})()
;
G__9454 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__9454__0.call(this);
case 1:
return G__9454__1.call(this,x);
case 2:
return G__9454__2.call(this,x,y);
case 3:
return G__9454__3.call(this,x,y,z);
default:
var G__9458 = null;
if (arguments.length > 3) {
var G__9459__i = 0, G__9459__a = new Array(arguments.length -  3);
while (G__9459__i < G__9459__a.length) {G__9459__a[G__9459__i] = arguments[G__9459__i + 3]; ++G__9459__i;}
G__9458 = new cljs.core.IndexedSeq(G__9459__a,0);
}
return G__9454__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__9458);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9454.cljs$lang$maxFixedArity = 3;
G__9454.cljs$lang$applyTo = G__9454__4.cljs$lang$applyTo;
G__9454.cljs$core$IFn$_invoke$arity$0 = G__9454__0;
G__9454.cljs$core$IFn$_invoke$arity$1 = G__9454__1;
G__9454.cljs$core$IFn$_invoke$arity$2 = G__9454__2;
G__9454.cljs$core$IFn$_invoke$arity$3 = G__9454__3;
G__9454.cljs$core$IFn$_invoke$arity$variadic = G__9454__4.cljs$core$IFn$_invoke$arity$variadic;
return G__9454;
})()
;})(fs__$1))
};
var G__9453 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__9460__i = 0, G__9460__a = new Array(arguments.length -  3);
while (G__9460__i < G__9460__a.length) {G__9460__a[G__9460__i] = arguments[G__9460__i + 3]; ++G__9460__i;}
  fs = new cljs.core.IndexedSeq(G__9460__a,0);
} 
return G__9453__delegate.call(this,f,g,h,fs);};
G__9453.cljs$lang$maxFixedArity = 3;
G__9453.cljs$lang$applyTo = (function (arglist__9461){
var f = cljs.core.first(arglist__9461);
arglist__9461 = cljs.core.next(arglist__9461);
var g = cljs.core.first(arglist__9461);
arglist__9461 = cljs.core.next(arglist__9461);
var h = cljs.core.first(arglist__9461);
var fs = cljs.core.rest(arglist__9461);
return G__9453__delegate(f,g,h,fs);
});
G__9453.cljs$core$IFn$_invoke$arity$variadic = G__9453__delegate;
return G__9453;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__9462 = null;
if (arguments.length > 3) {
var G__9463__i = 0, G__9463__a = new Array(arguments.length -  3);
while (G__9463__i < G__9463__a.length) {G__9463__a[G__9463__i] = arguments[G__9463__i + 3]; ++G__9463__i;}
G__9462 = new cljs.core.IndexedSeq(G__9463__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__9462);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__9464 = cljs.core.next(coll);
coll = G__9464;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__9465 = (n - (1));
var G__9466 = cljs.core.next(coll);
n = G__9465;
coll = G__9466;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__9470 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9470,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9470,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9470,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_9478 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__3127__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__9479_9485 = cljs.core.first(coll);
var G__9480_9486 = writer;
var G__9481_9487 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__9479_9485,G__9480_9486,G__9481_9487) : print_one.call(null,G__9479_9485,G__9480_9486,G__9481_9487));
} else {
}

var coll_9488__$1 = cljs.core.next(coll);
var n_9489 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_9488__$1) && (((n_9489 == null)) || (!((n_9489 === (0)))))){
cljs.core._write(writer,sep);

var G__9482_9490 = cljs.core.first(coll_9488__$1);
var G__9483_9491 = writer;
var G__9484_9492 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__9482_9490,G__9483_9491,G__9484_9492) : print_one.call(null,G__9482_9490,G__9483_9491,G__9484_9492));

var G__9493 = cljs.core.next(coll_9488__$1);
var G__9494 = (n_9489 - (1));
coll_9488__$1 = G__9493;
n_9489 = G__9494;
continue;
} else {
if((cljs.core.seq(coll_9488__$1)) && ((n_9489 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__3127__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_9478;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__9499 = cljs.core.seq(ss);
var chunk__9500 = null;
var count__9501 = (0);
var i__9502 = (0);
while(true){
if((i__9502 < count__9501)){
var s = chunk__9500.cljs$core$IIndexed$_nth$arity$2(null,i__9502);
cljs.core._write(writer,s);

var G__9503 = seq__9499;
var G__9504 = chunk__9500;
var G__9505 = count__9501;
var G__9506 = (i__9502 + (1));
seq__9499 = G__9503;
chunk__9500 = G__9504;
count__9501 = G__9505;
i__9502 = G__9506;
continue;
} else {
var temp__4425__auto__ = cljs.core.seq(seq__9499);
if(temp__4425__auto__){
var seq__9499__$1 = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9499__$1)){
var c__3914__auto__ = cljs.core.chunk_first(seq__9499__$1);
var G__9507 = cljs.core.chunk_rest(seq__9499__$1);
var G__9508 = c__3914__auto__;
var G__9509 = cljs.core.count(c__3914__auto__);
var G__9510 = (0);
seq__9499 = G__9507;
chunk__9500 = G__9508;
count__9501 = G__9509;
i__9502 = G__9510;
continue;
} else {
var s = cljs.core.first(seq__9499__$1);
cljs.core._write(writer,s);

var G__9511 = cljs.core.next(seq__9499__$1);
var G__9512 = null;
var G__9513 = (0);
var G__9514 = (0);
seq__9499 = G__9511;
chunk__9500 = G__9512;
count__9501 = G__9513;
i__9502 = G__9514;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__9515__i = 0, G__9515__a = new Array(arguments.length -  1);
while (G__9515__i < G__9515__a.length) {G__9515__a[G__9515__i] = arguments[G__9515__i + 1]; ++G__9515__i;}
  ss = new cljs.core.IndexedSeq(G__9515__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__9516){
var writer = cljs.core.first(arglist__9516);
var ss = cljs.core.rest(arglist__9516);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj9518 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj9518;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__9521 = "[\\\\\"\b\f\n\r\t]";
var G__9522 = "g";
return RegExp(G__9521,G__9522);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3115__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__3115__auto__)){
var and__3115__auto____$1 = (function (){var G__9536 = obj;
if(G__9536){
var bit__3808__auto__ = (G__9536.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__3808__auto__) || (G__9536.cljs$core$IMeta$)){
return true;
} else {
if((!G__9536.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__9536);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__9536);
}
})();
if(and__3115__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3115__auto____$1;
}
} else {
return and__3115__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__9537_9547 = cljs.core.meta(obj);
var G__9538_9548 = writer;
var G__9539_9549 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__9537_9547,G__9538_9548,G__9539_9549) : cljs.core.pr_writer.call(null,G__9537_9547,G__9538_9548,G__9539_9549));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__9540 = obj;
if(G__9540){
var bit__3801__auto__ = (G__9540.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__3801__auto__) || (G__9540.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__9541 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__9542 = cljs.core.pr_writer;
var G__9543 = writer;
var G__9544 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__9541,G__9542,G__9543,G__9544) : cljs.core.print_map.call(null,G__9541,G__9542,G__9543,G__9544));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__9545 = obj;
return goog.isString(G__9545);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__9550 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__9550;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__9546 = obj;
if(G__9546){
var bit__3808__auto__ = (G__9546.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__3808__auto__) || (G__9546.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__9546.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__9546);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__9546);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4423__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4423__auto__)){
var alt_impl = temp__4423__auto__;
var G__9554 = obj;
var G__9555 = writer;
var G__9556 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__9554,G__9555,G__9556) : alt_impl.call(null,G__9554,G__9555,G__9556));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__9561 = cljs.core.seq(cljs.core.next(objs));
var chunk__9562 = null;
var count__9563 = (0);
var i__9564 = (0);
while(true){
if((i__9564 < count__9563)){
var obj = chunk__9562.cljs$core$IIndexed$_nth$arity$2(null,i__9564);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__9565 = seq__9561;
var G__9566 = chunk__9562;
var G__9567 = count__9563;
var G__9568 = (i__9564 + (1));
seq__9561 = G__9565;
chunk__9562 = G__9566;
count__9563 = G__9567;
i__9564 = G__9568;
continue;
} else {
var temp__4425__auto__ = cljs.core.seq(seq__9561);
if(temp__4425__auto__){
var seq__9561__$1 = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__9561__$1)){
var c__3914__auto__ = cljs.core.chunk_first(seq__9561__$1);
var G__9569 = cljs.core.chunk_rest(seq__9561__$1);
var G__9570 = c__3914__auto__;
var G__9571 = cljs.core.count(c__3914__auto__);
var G__9572 = (0);
seq__9561 = G__9569;
chunk__9562 = G__9570;
count__9563 = G__9571;
i__9564 = G__9572;
continue;
} else {
var obj = cljs.core.first(seq__9561__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__9573 = cljs.core.next(seq__9561__$1);
var G__9574 = null;
var G__9575 = (0);
var G__9576 = (0);
seq__9561 = G__9573;
chunk__9562 = G__9574;
count__9563 = G__9575;
i__9564 = G__9576;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__9577__i = 0, G__9577__a = new Array(arguments.length -  0);
while (G__9577__i < G__9577__a.length) {G__9577__a[G__9577__i] = arguments[G__9577__i + 0]; ++G__9577__i;}
  objs = new cljs.core.IndexedSeq(G__9577__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__9578){
var objs = cljs.core.seq(arglist__9578);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__9579__i = 0, G__9579__a = new Array(arguments.length -  0);
while (G__9579__i < G__9579__a.length) {G__9579__a[G__9579__i] = arguments[G__9579__i + 0]; ++G__9579__i;}
  objs = new cljs.core.IndexedSeq(G__9579__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__9580){
var objs = cljs.core.seq(arglist__9580);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__9581__i = 0, G__9581__a = new Array(arguments.length -  0);
while (G__9581__i < G__9581__a.length) {G__9581__a[G__9581__i] = arguments[G__9581__i + 0]; ++G__9581__i;}
  objs = new cljs.core.IndexedSeq(G__9581__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__9582){
var objs = cljs.core.seq(arglist__9582);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__9583__i = 0, G__9583__a = new Array(arguments.length -  0);
while (G__9583__i < G__9583__a.length) {G__9583__a[G__9583__i] = arguments[G__9583__i + 0]; ++G__9583__i;}
  objs = new cljs.core.IndexedSeq(G__9583__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__9584){
var objs = cljs.core.seq(arglist__9584);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__9585__i = 0, G__9585__a = new Array(arguments.length -  0);
while (G__9585__i < G__9585__a.length) {G__9585__a[G__9585__i] = arguments[G__9585__i + 0]; ++G__9585__i;}
  objs = new cljs.core.IndexedSeq(G__9585__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__9586){
var objs = cljs.core.seq(arglist__9586);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__9587__i = 0, G__9587__a = new Array(arguments.length -  0);
while (G__9587__i < G__9587__a.length) {G__9587__a[G__9587__i] = arguments[G__9587__i + 0]; ++G__9587__i;}
  objs = new cljs.core.IndexedSeq(G__9587__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__9588){
var objs = cljs.core.seq(arglist__9588);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__9589__i = 0, G__9589__a = new Array(arguments.length -  0);
while (G__9589__i < G__9589__a.length) {G__9589__a[G__9589__i] = arguments[G__9589__i + 0]; ++G__9589__i;}
  objs = new cljs.core.IndexedSeq(G__9589__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__9590){
var objs = cljs.core.seq(arglist__9590);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__9591__i = 0, G__9591__a = new Array(arguments.length -  0);
while (G__9591__i < G__9591__a.length) {G__9591__a[G__9591__i] = arguments[G__9591__i + 0]; ++G__9591__i;}
  objs = new cljs.core.IndexedSeq(G__9591__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__9592){
var objs = cljs.core.seq(arglist__9592);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__9599_9605 = cljs.core.key(e);
var G__9600_9606 = w;
var G__9601_9607 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__9599_9605,G__9600_9606,G__9601_9607) : print_one.call(null,G__9599_9605,G__9600_9606,G__9601_9607));

cljs.core._write(w," ");

var G__9602 = cljs.core.val(e);
var G__9603 = w;
var G__9604 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__9602,G__9603,G__9604) : print_one.call(null,G__9602,G__9603,G__9604));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__9608__i = 0, G__9608__a = new Array(arguments.length -  2);
while (G__9608__i < G__9608__a.length) {G__9608__a[G__9608__i] = arguments[G__9608__i + 2]; ++G__9608__i;}
  args = new cljs.core.IndexedSeq(G__9608__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__9609){
var iref = cljs.core.first(arglist__9609);
arglist__9609 = cljs.core.next(arglist__9609);
var f = cljs.core.first(arglist__9609);
var args = cljs.core.rest(arglist__9609);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__9612 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9612) : cljs.core.atom.call(null,G__9612));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition0$ = 32768;
this.cljs$lang$protocol_mask$partition1$ = 1;
})
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__9614 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9614) : cljs.core.deref.call(null,G__9614));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__9615_SHARP_,p2__9616_SHARP_){
var ret = (function (){var G__9619 = p1__9615_SHARP_;
var G__9620 = p2__9616_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9619,G__9620) : rf.call(null,G__9619,G__9620));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__9623 = null;
var G__9623__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9623__1 = (function (result){
var G__9622 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9622) : rf.call(null,G__9622));
});
var G__9623__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__9623 = function(result,input){
switch(arguments.length){
case 0:
return G__9623__0.call(this);
case 1:
return G__9623__1.call(this,result);
case 2:
return G__9623__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9623.cljs$core$IFn$_invoke$arity$0 = G__9623__0;
G__9623.cljs$core$IFn$_invoke$arity$1 = G__9623__1;
G__9623.cljs$core$IFn$_invoke$arity$2 = G__9623__2;
return G__9623;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__9632 = null;
var G__9632__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__9632__1 = (function (result){
var G__9628 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9628) : rf.call(null,G__9628));
});
var G__9632__2 = (function (result,input){
var prior = (function (){var G__9629 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9629) : cljs.core.deref.call(null,G__9629));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__9630 = result;
var G__9631 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9630,G__9631) : rf.call(null,G__9630,G__9631));
}
});
G__9632 = function(result,input){
switch(arguments.length){
case 0:
return G__9632__0.call(this);
case 1:
return G__9632__1.call(this,result);
case 2:
return G__9632__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__9632.cljs$core$IFn$_invoke$arity$0 = G__9632__0;
G__9632.cljs$core$IFn$_invoke$arity$1 = G__9632__1;
G__9632.cljs$core$IFn$_invoke$arity$2 = G__9632__2;
return G__9632;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4105__auto__ = this;
return cljs.core.es6_iterator(this__4105__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__9634_SHARP_,p2__9633_SHARP_){
var G__9636 = p2__9633_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__9636) : proc.call(null,G__9636));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj9638 = {};
return obj9638;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3115__auto__ = x;
if(and__3115__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3115__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__3771__auto__ = (((x == null))?null:x);
return (function (){var or__3127__auto__ = (cljs.core._clj__GT_js[(function (){var G__9642 = x__3771__auto__;
return goog.typeOf(G__9642);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3115__auto__ = x;
if(and__3115__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3115__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__3771__auto__ = (((x == null))?null:x);
return (function (){var or__3127__auto__ = (cljs.core._key__GT_js[(function (){var G__9646 = x__3771__auto__;
return goog.typeOf(G__9646);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__9649 = k;
if(G__9649){
var bit__3808__auto__ = null;
if(cljs.core.truth_((function (){var or__3127__auto__ = bit__3808__auto__;
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
return G__9649.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__9649.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__9649);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__9649);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__9650 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__9650) : cljs.core.clj__GT_js.call(null,G__9650));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__9666 = x;
if(G__9666){
var bit__3808__auto__ = null;
if(cljs.core.truth_((function (){var or__3127__auto__ = bit__3808__auto__;
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
return G__9666.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__9666.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__9666);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__9666);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj9668 = {};
return obj9668;
})();
var seq__9669_9679 = cljs.core.seq(x);
var chunk__9670_9680 = null;
var count__9671_9681 = (0);
var i__9672_9682 = (0);
while(true){
if((i__9672_9682 < count__9671_9681)){
var vec__9673_9683 = chunk__9670_9680.cljs$core$IIndexed$_nth$arity$2(null,i__9672_9682);
var k_9684 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9673_9683,(0),null);
var v_9685 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9673_9683,(1),null);
(m[cljs.core.key__GT_js(k_9684)] = clj__GT_js(v_9685));

var G__9686 = seq__9669_9679;
var G__9687 = chunk__9670_9680;
var G__9688 = count__9671_9681;
var G__9689 = (i__9672_9682 + (1));
seq__9669_9679 = G__9686;
chunk__9670_9680 = G__9687;
count__9671_9681 = G__9688;
i__9672_9682 = G__9689;
continue;
} else {
var temp__4425__auto___9690 = cljs.core.seq(seq__9669_9679);
if(temp__4425__auto___9690){
var seq__9669_9691__$1 = temp__4425__auto___9690;
if(cljs.core.chunked_seq_QMARK_(seq__9669_9691__$1)){
var c__3914__auto___9692 = cljs.core.chunk_first(seq__9669_9691__$1);
var G__9693 = cljs.core.chunk_rest(seq__9669_9691__$1);
var G__9694 = c__3914__auto___9692;
var G__9695 = cljs.core.count(c__3914__auto___9692);
var G__9696 = (0);
seq__9669_9679 = G__9693;
chunk__9670_9680 = G__9694;
count__9671_9681 = G__9695;
i__9672_9682 = G__9696;
continue;
} else {
var vec__9674_9697 = cljs.core.first(seq__9669_9691__$1);
var k_9698 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9674_9697,(0),null);
var v_9699 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9674_9697,(1),null);
(m[cljs.core.key__GT_js(k_9698)] = clj__GT_js(v_9699));

var G__9700 = cljs.core.next(seq__9669_9691__$1);
var G__9701 = null;
var G__9702 = (0);
var G__9703 = (0);
seq__9669_9679 = G__9700;
chunk__9670_9680 = G__9701;
count__9671_9681 = G__9702;
i__9672_9682 = G__9703;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__9675_9704 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__9676_9705 = null;
var count__9677_9706 = (0);
var i__9678_9707 = (0);
while(true){
if((i__9678_9707 < count__9677_9706)){
var x_9708__$1 = chunk__9676_9705.cljs$core$IIndexed$_nth$arity$2(null,i__9678_9707);
arr.push(x_9708__$1);

var G__9709 = seq__9675_9704;
var G__9710 = chunk__9676_9705;
var G__9711 = count__9677_9706;
var G__9712 = (i__9678_9707 + (1));
seq__9675_9704 = G__9709;
chunk__9676_9705 = G__9710;
count__9677_9706 = G__9711;
i__9678_9707 = G__9712;
continue;
} else {
var temp__4425__auto___9713 = cljs.core.seq(seq__9675_9704);
if(temp__4425__auto___9713){
var seq__9675_9714__$1 = temp__4425__auto___9713;
if(cljs.core.chunked_seq_QMARK_(seq__9675_9714__$1)){
var c__3914__auto___9715 = cljs.core.chunk_first(seq__9675_9714__$1);
var G__9716 = cljs.core.chunk_rest(seq__9675_9714__$1);
var G__9717 = c__3914__auto___9715;
var G__9718 = cljs.core.count(c__3914__auto___9715);
var G__9719 = (0);
seq__9675_9704 = G__9716;
chunk__9676_9705 = G__9717;
count__9677_9706 = G__9718;
i__9678_9707 = G__9719;
continue;
} else {
var x_9720__$1 = cljs.core.first(seq__9675_9714__$1);
arr.push(x_9720__$1);

var G__9721 = cljs.core.next(seq__9675_9714__$1);
var G__9722 = null;
var G__9723 = (0);
var G__9724 = (0);
seq__9675_9704 = G__9721;
chunk__9676_9705 = G__9722;
count__9677_9706 = G__9723;
i__9678_9707 = G__9724;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj9726 = {};
return obj9726;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3115__auto__ = x;
if(and__3115__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3115__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__3771__auto__ = (((x == null))?null:x);
return (function (){var or__3127__auto__ = (cljs.core._js__GT_clj[(function (){var G__9730 = x__3771__auto__;
return goog.typeOf(G__9730);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__9787__delegate = function (x,opts){
var map__9760 = opts;
var map__9760__$1 = ((cljs.core.seq_QMARK_(map__9760))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__9760):map__9760);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9760__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__9760,map__9760__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__9776 = x__$1;
if(G__9776){
var bit__3808__auto__ = null;
if(cljs.core.truth_((function (){var or__3127__auto__ = bit__3808__auto__;
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
return G__9776.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__9776.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__9776);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__9776);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__3883__auto__ = ((function (map__9760,map__9760__$1,keywordize_keys,keyfn){
return (function iter__9777(s__9778){
return (new cljs.core.LazySeq(null,((function (map__9760,map__9760__$1,keywordize_keys,keyfn){
return (function (){
var s__9778__$1 = s__9778;
while(true){
var temp__4425__auto__ = cljs.core.seq(s__9778__$1);
if(temp__4425__auto__){
var s__9778__$2 = temp__4425__auto__;
if(cljs.core.chunked_seq_QMARK_(s__9778__$2)){
var c__3881__auto__ = cljs.core.chunk_first(s__9778__$2);
var size__3882__auto__ = cljs.core.count(c__3881__auto__);
var b__9780 = cljs.core.chunk_buffer(size__3882__auto__);
if((function (){var i__9779 = (0);
while(true){
if((i__9779 < size__3882__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__3881__auto__,i__9779);
cljs.core.chunk_append(b__9780,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__9785 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__9785) : keyfn.call(null,G__9785));
})(),thisfn((x__$1[k]))], null));

var G__9788 = (i__9779 + (1));
i__9779 = G__9788;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__9780),iter__9777(cljs.core.chunk_rest(s__9778__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__9780),null);
}
} else {
var k = cljs.core.first(s__9778__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__9786 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__9786) : keyfn.call(null,G__9786));
})(),thisfn((x__$1[k]))], null),iter__9777(cljs.core.rest(s__9778__$2)));
}
} else {
return null;
}
break;
}
});})(map__9760,map__9760__$1,keywordize_keys,keyfn))
,null,null));
});})(map__9760,map__9760__$1,keywordize_keys,keyfn))
;
return iter__3883__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__9760,map__9760__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__9787 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__9789__i = 0, G__9789__a = new Array(arguments.length -  1);
while (G__9789__i < G__9789__a.length) {G__9789__a[G__9789__i] = arguments[G__9789__i + 1]; ++G__9789__i;}
  opts = new cljs.core.IndexedSeq(G__9789__a,0);
} 
return G__9787__delegate.call(this,x,opts);};
G__9787.cljs$lang$maxFixedArity = 1;
G__9787.cljs$lang$applyTo = (function (arglist__9790){
var x = cljs.core.first(arglist__9790);
var opts = cljs.core.rest(arglist__9790);
return G__9787__delegate(x,opts);
});
G__9787.cljs$core$IFn$_invoke$arity$variadic = G__9787__delegate;
return G__9787;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__9791 = null;
if (arguments.length > 1) {
var G__9792__i = 0, G__9792__a = new Array(arguments.length -  1);
while (G__9792__i < G__9792__a.length) {G__9792__a[G__9792__i] = arguments[G__9792__i + 1]; ++G__9792__i;}
G__9791 = new cljs.core.IndexedSeq(G__9792__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__9791);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__9795 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9795) : cljs.core.atom.call(null,G__9795));
})();
return ((function (mem){
return (function() { 
var G__9797__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__9796 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9796) : cljs.core.deref.call(null,G__9796));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__9797 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9798__i = 0, G__9798__a = new Array(arguments.length -  0);
while (G__9798__i < G__9798__a.length) {G__9798__a[G__9798__i] = arguments[G__9798__i + 0]; ++G__9798__i;}
  args = new cljs.core.IndexedSeq(G__9798__a,0);
} 
return G__9797__delegate.call(this,args);};
G__9797.cljs$lang$maxFixedArity = 0;
G__9797.cljs$lang$applyTo = (function (arglist__9799){
var args = cljs.core.seq(arglist__9799);
return G__9797__delegate(args);
});
G__9797.cljs$core$IFn$_invoke$arity$variadic = G__9797__delegate;
return G__9797;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__9801 = ret;
f = G__9801;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__9802__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__9802 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__9803__i = 0, G__9803__a = new Array(arguments.length -  1);
while (G__9803__i < G__9803__a.length) {G__9803__a[G__9803__i] = arguments[G__9803__i + 1]; ++G__9803__i;}
  args = new cljs.core.IndexedSeq(G__9803__a,0);
} 
return G__9802__delegate.call(this,f,args);};
G__9802.cljs$lang$maxFixedArity = 1;
G__9802.cljs$lang$applyTo = (function (arglist__9804){
var f = cljs.core.first(arglist__9804);
var args = cljs.core.rest(arglist__9804);
return G__9802__delegate(f,args);
});
G__9802.cljs$core$IFn$_invoke$arity$variadic = G__9802__delegate;
return G__9802;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__9805 = null;
if (arguments.length > 1) {
var G__9806__i = 0, G__9806__a = new Array(arguments.length -  1);
while (G__9806__i < G__9806__a.length) {G__9806__a[G__9806__i] = arguments[G__9806__i + 1]; ++G__9806__i;}
G__9805 = new cljs.core.IndexedSeq(G__9806__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__9805);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__9809 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__9809) : Math.floor.call(null,G__9809));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__9811 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9811) : f.call(null,G__9811));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__9813 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9813) : cljs.core.atom.call(null,G__9813));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__9814__i = 0, G__9814__a = new Array(arguments.length -  1);
while (G__9814__i < G__9814__a.length) {G__9814__a[G__9814__i] = arguments[G__9814__i + 1]; ++G__9814__i;}
  args = new cljs.core.IndexedSeq(G__9814__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__9815){
var f = cljs.core.first(arglist__9815);
var args = cljs.core.rest(arglist__9815);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__9880 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9880) : cljs.core.deref.call(null,G__9880));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3127__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
var and__3115__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3115__auto__){
var and__3115__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3115__auto____$1){
var and__3115__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3115__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__9905 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__9903 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__9903) : child.call(null,G__9903));
})(),(function (){var G__9904 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__9904) : parent.call(null,G__9904));
})());
var G__9906 = (i + (1));
ret = G__9905;
i = G__9906;
continue;
}
break;
}
} else {
return and__3115__auto____$2;
}
} else {
return and__3115__auto____$1;
}
} else {
return and__3115__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__9910 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9910) : cljs.core.deref.call(null,G__9910));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__9914 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9914) : cljs.core.deref.call(null,G__9914));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__9918 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9918) : cljs.core.deref.call(null,G__9918));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__9927 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__9927) : targets.call(null,G__9927));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__9928 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__9928) : sources.call(null,G__9928));
})()));
});})(tp,td,ta))
;
var or__3127__auto__ = ((cljs.core.contains_QMARK_((function (){var G__9932 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__9932) : tp.call(null,G__9932));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__9933 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__9933) : ta.call(null,G__9933));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__9934 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__9934) : ta.call(null,G__9934));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__9941 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__9941) : parentMap.call(null,G__9941));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__9942 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__9942) : parentMap.call(null,G__9942));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__9935_SHARP_){
return cljs.core.cons(cljs.core.first(p1__9935_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__9935_SHARP_),cljs.core.second(p1__9935_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__9943 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__9943) : parentMap.call(null,G__9943));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__9936_SHARP_,p2__9937_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__9936_SHARP_,p2__9937_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__9946 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9946) : cljs.core.deref.call(null,G__9946));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__9947 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9947) : cljs.core.deref.call(null,G__9947));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__9963 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9963) : cljs.core.deref.call(null,G__9963));
})().call(null,x);
var or__3127__auto__ = (cljs.core.truth_((function (){var and__3115__auto__ = xprefs;
if(cljs.core.truth_(and__3115__auto__)){
var G__9965 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__9965) : xprefs.call(null,G__9965));
} else {
return and__3115__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__9966 = cljs.core.rest(ps);
ps = G__9966;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3127__auto____$1)){
return or__3127__auto____$1;
} else {
var or__3127__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__9967 = cljs.core.rest(ps);
ps = G__9967;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3127__auto____$2)){
return or__3127__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3127__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3127__auto__)){
return or__3127__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__9981){
var vec__9982 = p__9981;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9982,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9982,(1),null);
var e = vec__9982;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__9983 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9983) : cljs.core.deref.call(null,G__9983));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3127__auto__ = (be == null);
if(or__3127__auto__){
return or__3127__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__9984 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9984) : cljs.core.deref.call(null,G__9984));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__9985 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9985) : cljs.core.deref.call(null,G__9985));
})(),(function (){var G__9986 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9986) : cljs.core.deref.call(null,G__9986));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj9988 = {};
return obj9988;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3115__auto__ = mf;
if(and__3115__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3115__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__3771__auto__ = (((mf == null))?null:mf);
return (function (){var or__3127__auto__ = (cljs.core._reset[(function (){var G__9992 = x__3771__auto__;
return goog.typeOf(G__9992);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._reset["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3115__auto__ = mf;
if(and__3115__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3115__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__3771__auto__ = (((mf == null))?null:mf);
return (function (){var or__3127__auto__ = (cljs.core._add_method[(function (){var G__9996 = x__3771__auto__;
return goog.typeOf(G__9996);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._add_method["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3115__auto__ = mf;
if(and__3115__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3115__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__3771__auto__ = (((mf == null))?null:mf);
return (function (){var or__3127__auto__ = (cljs.core._remove_method[(function (){var G__10000 = x__3771__auto__;
return goog.typeOf(G__10000);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3115__auto__ = mf;
if(and__3115__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3115__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__3771__auto__ = (((mf == null))?null:mf);
return (function (){var or__3127__auto__ = (cljs.core._prefer_method[(function (){var G__10004 = x__3771__auto__;
return goog.typeOf(G__10004);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3115__auto__ = mf;
if(and__3115__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3115__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__3771__auto__ = (((mf == null))?null:mf);
return (function (){var or__3127__auto__ = (cljs.core._get_method[(function (){var G__10008 = x__3771__auto__;
return goog.typeOf(G__10008);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._get_method["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3115__auto__ = mf;
if(and__3115__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3115__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__3771__auto__ = (((mf == null))?null:mf);
return (function (){var or__3127__auto__ = (cljs.core._methods[(function (){var G__10012 = x__3771__auto__;
return goog.typeOf(G__10012);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._methods["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3115__auto__ = mf;
if(and__3115__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3115__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__3771__auto__ = (((mf == null))?null:mf);
return (function (){var or__3127__auto__ = (cljs.core._prefers[(function (){var G__10016 = x__3771__auto__;
return goog.typeOf(G__10016);
})()]);
if(or__3127__auto__){
return or__3127__auto__;
} else {
var or__3127__auto____$1 = (cljs.core._prefers["_"]);
if(or__3127__auto____$1){
return or__3127__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.call = (function() {
var G__10865 = null;
var G__10865__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__10865__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10018 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__10018) : self__.dispatch_fn.call(null,G__10018));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10019 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__10019) : target_fn.call(null,G__10019));
});
var G__10865__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10020 = a;
var G__10021 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__10020,G__10021) : self__.dispatch_fn.call(null,G__10020,G__10021));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10022 = a;
var G__10023 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__10022,G__10023) : target_fn.call(null,G__10022,G__10023));
});
var G__10865__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10024 = a;
var G__10025 = b;
var G__10026 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__10024,G__10025,G__10026) : self__.dispatch_fn.call(null,G__10024,G__10025,G__10026));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10027 = a;
var G__10028 = b;
var G__10029 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__10027,G__10028,G__10029) : target_fn.call(null,G__10027,G__10028,G__10029));
});
var G__10865__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10030 = a;
var G__10031 = b;
var G__10032 = c;
var G__10033 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__10030,G__10031,G__10032,G__10033) : self__.dispatch_fn.call(null,G__10030,G__10031,G__10032,G__10033));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10034 = a;
var G__10035 = b;
var G__10036 = c;
var G__10037 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__10034,G__10035,G__10036,G__10037) : target_fn.call(null,G__10034,G__10035,G__10036,G__10037));
});
var G__10865__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10038 = a;
var G__10039 = b;
var G__10040 = c;
var G__10041 = d;
var G__10042 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__10038,G__10039,G__10040,G__10041,G__10042) : self__.dispatch_fn.call(null,G__10038,G__10039,G__10040,G__10041,G__10042));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10043 = a;
var G__10044 = b;
var G__10045 = c;
var G__10046 = d;
var G__10047 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__10043,G__10044,G__10045,G__10046,G__10047) : target_fn.call(null,G__10043,G__10044,G__10045,G__10046,G__10047));
});
var G__10865__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10048 = a;
var G__10049 = b;
var G__10050 = c;
var G__10051 = d;
var G__10052 = e;
var G__10053 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__10048,G__10049,G__10050,G__10051,G__10052,G__10053) : self__.dispatch_fn.call(null,G__10048,G__10049,G__10050,G__10051,G__10052,G__10053));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10054 = a;
var G__10055 = b;
var G__10056 = c;
var G__10057 = d;
var G__10058 = e;
var G__10059 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__10054,G__10055,G__10056,G__10057,G__10058,G__10059) : target_fn.call(null,G__10054,G__10055,G__10056,G__10057,G__10058,G__10059));
});
var G__10865__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10060 = a;
var G__10061 = b;
var G__10062 = c;
var G__10063 = d;
var G__10064 = e;
var G__10065 = f;
var G__10066 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__10060,G__10061,G__10062,G__10063,G__10064,G__10065,G__10066) : self__.dispatch_fn.call(null,G__10060,G__10061,G__10062,G__10063,G__10064,G__10065,G__10066));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10067 = a;
var G__10068 = b;
var G__10069 = c;
var G__10070 = d;
var G__10071 = e;
var G__10072 = f;
var G__10073 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__10067,G__10068,G__10069,G__10070,G__10071,G__10072,G__10073) : target_fn.call(null,G__10067,G__10068,G__10069,G__10070,G__10071,G__10072,G__10073));
});
var G__10865__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10074 = a;
var G__10075 = b;
var G__10076 = c;
var G__10077 = d;
var G__10078 = e;
var G__10079 = f;
var G__10080 = g;
var G__10081 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__10074,G__10075,G__10076,G__10077,G__10078,G__10079,G__10080,G__10081) : self__.dispatch_fn.call(null,G__10074,G__10075,G__10076,G__10077,G__10078,G__10079,G__10080,G__10081));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10082 = a;
var G__10083 = b;
var G__10084 = c;
var G__10085 = d;
var G__10086 = e;
var G__10087 = f;
var G__10088 = g;
var G__10089 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__10082,G__10083,G__10084,G__10085,G__10086,G__10087,G__10088,G__10089) : target_fn.call(null,G__10082,G__10083,G__10084,G__10085,G__10086,G__10087,G__10088,G__10089));
});
var G__10865__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10090 = a;
var G__10091 = b;
var G__10092 = c;
var G__10093 = d;
var G__10094 = e;
var G__10095 = f;
var G__10096 = g;
var G__10097 = h;
var G__10098 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__10090,G__10091,G__10092,G__10093,G__10094,G__10095,G__10096,G__10097,G__10098) : self__.dispatch_fn.call(null,G__10090,G__10091,G__10092,G__10093,G__10094,G__10095,G__10096,G__10097,G__10098));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10099 = a;
var G__10100 = b;
var G__10101 = c;
var G__10102 = d;
var G__10103 = e;
var G__10104 = f;
var G__10105 = g;
var G__10106 = h;
var G__10107 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__10099,G__10100,G__10101,G__10102,G__10103,G__10104,G__10105,G__10106,G__10107) : target_fn.call(null,G__10099,G__10100,G__10101,G__10102,G__10103,G__10104,G__10105,G__10106,G__10107));
});
var G__10865__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10108 = a;
var G__10109 = b;
var G__10110 = c;
var G__10111 = d;
var G__10112 = e;
var G__10113 = f;
var G__10114 = g;
var G__10115 = h;
var G__10116 = i;
var G__10117 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__10108,G__10109,G__10110,G__10111,G__10112,G__10113,G__10114,G__10115,G__10116,G__10117) : self__.dispatch_fn.call(null,G__10108,G__10109,G__10110,G__10111,G__10112,G__10113,G__10114,G__10115,G__10116,G__10117));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10118 = a;
var G__10119 = b;
var G__10120 = c;
var G__10121 = d;
var G__10122 = e;
var G__10123 = f;
var G__10124 = g;
var G__10125 = h;
var G__10126 = i;
var G__10127 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__10118,G__10119,G__10120,G__10121,G__10122,G__10123,G__10124,G__10125,G__10126,G__10127) : target_fn.call(null,G__10118,G__10119,G__10120,G__10121,G__10122,G__10123,G__10124,G__10125,G__10126,G__10127));
});
var G__10865__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10128 = a;
var G__10129 = b;
var G__10130 = c;
var G__10131 = d;
var G__10132 = e;
var G__10133 = f;
var G__10134 = g;
var G__10135 = h;
var G__10136 = i;
var G__10137 = j;
var G__10138 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__10128,G__10129,G__10130,G__10131,G__10132,G__10133,G__10134,G__10135,G__10136,G__10137,G__10138) : self__.dispatch_fn.call(null,G__10128,G__10129,G__10130,G__10131,G__10132,G__10133,G__10134,G__10135,G__10136,G__10137,G__10138));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10139 = a;
var G__10140 = b;
var G__10141 = c;
var G__10142 = d;
var G__10143 = e;
var G__10144 = f;
var G__10145 = g;
var G__10146 = h;
var G__10147 = i;
var G__10148 = j;
var G__10149 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__10139,G__10140,G__10141,G__10142,G__10143,G__10144,G__10145,G__10146,G__10147,G__10148,G__10149) : target_fn.call(null,G__10139,G__10140,G__10141,G__10142,G__10143,G__10144,G__10145,G__10146,G__10147,G__10148,G__10149));
});
var G__10865__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10150 = a;
var G__10151 = b;
var G__10152 = c;
var G__10153 = d;
var G__10154 = e;
var G__10155 = f;
var G__10156 = g;
var G__10157 = h;
var G__10158 = i;
var G__10159 = j;
var G__10160 = k;
var G__10161 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__10150,G__10151,G__10152,G__10153,G__10154,G__10155,G__10156,G__10157,G__10158,G__10159,G__10160,G__10161) : self__.dispatch_fn.call(null,G__10150,G__10151,G__10152,G__10153,G__10154,G__10155,G__10156,G__10157,G__10158,G__10159,G__10160,G__10161));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10162 = a;
var G__10163 = b;
var G__10164 = c;
var G__10165 = d;
var G__10166 = e;
var G__10167 = f;
var G__10168 = g;
var G__10169 = h;
var G__10170 = i;
var G__10171 = j;
var G__10172 = k;
var G__10173 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__10162,G__10163,G__10164,G__10165,G__10166,G__10167,G__10168,G__10169,G__10170,G__10171,G__10172,G__10173) : target_fn.call(null,G__10162,G__10163,G__10164,G__10165,G__10166,G__10167,G__10168,G__10169,G__10170,G__10171,G__10172,G__10173));
});
var G__10865__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10174 = a;
var G__10175 = b;
var G__10176 = c;
var G__10177 = d;
var G__10178 = e;
var G__10179 = f;
var G__10180 = g;
var G__10181 = h;
var G__10182 = i;
var G__10183 = j;
var G__10184 = k;
var G__10185 = l;
var G__10186 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__10174,G__10175,G__10176,G__10177,G__10178,G__10179,G__10180,G__10181,G__10182,G__10183,G__10184,G__10185,G__10186) : self__.dispatch_fn.call(null,G__10174,G__10175,G__10176,G__10177,G__10178,G__10179,G__10180,G__10181,G__10182,G__10183,G__10184,G__10185,G__10186));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10187 = a;
var G__10188 = b;
var G__10189 = c;
var G__10190 = d;
var G__10191 = e;
var G__10192 = f;
var G__10193 = g;
var G__10194 = h;
var G__10195 = i;
var G__10196 = j;
var G__10197 = k;
var G__10198 = l;
var G__10199 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__10187,G__10188,G__10189,G__10190,G__10191,G__10192,G__10193,G__10194,G__10195,G__10196,G__10197,G__10198,G__10199) : target_fn.call(null,G__10187,G__10188,G__10189,G__10190,G__10191,G__10192,G__10193,G__10194,G__10195,G__10196,G__10197,G__10198,G__10199));
});
var G__10865__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10200 = a;
var G__10201 = b;
var G__10202 = c;
var G__10203 = d;
var G__10204 = e;
var G__10205 = f;
var G__10206 = g;
var G__10207 = h;
var G__10208 = i;
var G__10209 = j;
var G__10210 = k;
var G__10211 = l;
var G__10212 = m;
var G__10213 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__10200,G__10201,G__10202,G__10203,G__10204,G__10205,G__10206,G__10207,G__10208,G__10209,G__10210,G__10211,G__10212,G__10213) : self__.dispatch_fn.call(null,G__10200,G__10201,G__10202,G__10203,G__10204,G__10205,G__10206,G__10207,G__10208,G__10209,G__10210,G__10211,G__10212,G__10213));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10214 = a;
var G__10215 = b;
var G__10216 = c;
var G__10217 = d;
var G__10218 = e;
var G__10219 = f;
var G__10220 = g;
var G__10221 = h;
var G__10222 = i;
var G__10223 = j;
var G__10224 = k;
var G__10225 = l;
var G__10226 = m;
var G__10227 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__10214,G__10215,G__10216,G__10217,G__10218,G__10219,G__10220,G__10221,G__10222,G__10223,G__10224,G__10225,G__10226,G__10227) : target_fn.call(null,G__10214,G__10215,G__10216,G__10217,G__10218,G__10219,G__10220,G__10221,G__10222,G__10223,G__10224,G__10225,G__10226,G__10227));
});
var G__10865__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10228 = a;
var G__10229 = b;
var G__10230 = c;
var G__10231 = d;
var G__10232 = e;
var G__10233 = f;
var G__10234 = g;
var G__10235 = h;
var G__10236 = i;
var G__10237 = j;
var G__10238 = k;
var G__10239 = l;
var G__10240 = m;
var G__10241 = n;
var G__10242 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__10228,G__10229,G__10230,G__10231,G__10232,G__10233,G__10234,G__10235,G__10236,G__10237,G__10238,G__10239,G__10240,G__10241,G__10242) : self__.dispatch_fn.call(null,G__10228,G__10229,G__10230,G__10231,G__10232,G__10233,G__10234,G__10235,G__10236,G__10237,G__10238,G__10239,G__10240,G__10241,G__10242));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10243 = a;
var G__10244 = b;
var G__10245 = c;
var G__10246 = d;
var G__10247 = e;
var G__10248 = f;
var G__10249 = g;
var G__10250 = h;
var G__10251 = i;
var G__10252 = j;
var G__10253 = k;
var G__10254 = l;
var G__10255 = m;
var G__10256 = n;
var G__10257 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__10243,G__10244,G__10245,G__10246,G__10247,G__10248,G__10249,G__10250,G__10251,G__10252,G__10253,G__10254,G__10255,G__10256,G__10257) : target_fn.call(null,G__10243,G__10244,G__10245,G__10246,G__10247,G__10248,G__10249,G__10250,G__10251,G__10252,G__10253,G__10254,G__10255,G__10256,G__10257));
});
var G__10865__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10258 = a;
var G__10259 = b;
var G__10260 = c;
var G__10261 = d;
var G__10262 = e;
var G__10263 = f;
var G__10264 = g;
var G__10265 = h;
var G__10266 = i;
var G__10267 = j;
var G__10268 = k;
var G__10269 = l;
var G__10270 = m;
var G__10271 = n;
var G__10272 = o;
var G__10273 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__10258,G__10259,G__10260,G__10261,G__10262,G__10263,G__10264,G__10265,G__10266,G__10267,G__10268,G__10269,G__10270,G__10271,G__10272,G__10273) : self__.dispatch_fn.call(null,G__10258,G__10259,G__10260,G__10261,G__10262,G__10263,G__10264,G__10265,G__10266,G__10267,G__10268,G__10269,G__10270,G__10271,G__10272,G__10273));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10274 = a;
var G__10275 = b;
var G__10276 = c;
var G__10277 = d;
var G__10278 = e;
var G__10279 = f;
var G__10280 = g;
var G__10281 = h;
var G__10282 = i;
var G__10283 = j;
var G__10284 = k;
var G__10285 = l;
var G__10286 = m;
var G__10287 = n;
var G__10288 = o;
var G__10289 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__10274,G__10275,G__10276,G__10277,G__10278,G__10279,G__10280,G__10281,G__10282,G__10283,G__10284,G__10285,G__10286,G__10287,G__10288,G__10289) : target_fn.call(null,G__10274,G__10275,G__10276,G__10277,G__10278,G__10279,G__10280,G__10281,G__10282,G__10283,G__10284,G__10285,G__10286,G__10287,G__10288,G__10289));
});
var G__10865__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10290 = a;
var G__10291 = b;
var G__10292 = c;
var G__10293 = d;
var G__10294 = e;
var G__10295 = f;
var G__10296 = g;
var G__10297 = h;
var G__10298 = i;
var G__10299 = j;
var G__10300 = k;
var G__10301 = l;
var G__10302 = m;
var G__10303 = n;
var G__10304 = o;
var G__10305 = p;
var G__10306 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__10290,G__10291,G__10292,G__10293,G__10294,G__10295,G__10296,G__10297,G__10298,G__10299,G__10300,G__10301,G__10302,G__10303,G__10304,G__10305,G__10306) : self__.dispatch_fn.call(null,G__10290,G__10291,G__10292,G__10293,G__10294,G__10295,G__10296,G__10297,G__10298,G__10299,G__10300,G__10301,G__10302,G__10303,G__10304,G__10305,G__10306));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10307 = a;
var G__10308 = b;
var G__10309 = c;
var G__10310 = d;
var G__10311 = e;
var G__10312 = f;
var G__10313 = g;
var G__10314 = h;
var G__10315 = i;
var G__10316 = j;
var G__10317 = k;
var G__10318 = l;
var G__10319 = m;
var G__10320 = n;
var G__10321 = o;
var G__10322 = p;
var G__10323 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__10307,G__10308,G__10309,G__10310,G__10311,G__10312,G__10313,G__10314,G__10315,G__10316,G__10317,G__10318,G__10319,G__10320,G__10321,G__10322,G__10323) : target_fn.call(null,G__10307,G__10308,G__10309,G__10310,G__10311,G__10312,G__10313,G__10314,G__10315,G__10316,G__10317,G__10318,G__10319,G__10320,G__10321,G__10322,G__10323));
});
var G__10865__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10324 = a;
var G__10325 = b;
var G__10326 = c;
var G__10327 = d;
var G__10328 = e;
var G__10329 = f;
var G__10330 = g;
var G__10331 = h;
var G__10332 = i;
var G__10333 = j;
var G__10334 = k;
var G__10335 = l;
var G__10336 = m;
var G__10337 = n;
var G__10338 = o;
var G__10339 = p;
var G__10340 = q;
var G__10341 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__10324,G__10325,G__10326,G__10327,G__10328,G__10329,G__10330,G__10331,G__10332,G__10333,G__10334,G__10335,G__10336,G__10337,G__10338,G__10339,G__10340,G__10341) : self__.dispatch_fn.call(null,G__10324,G__10325,G__10326,G__10327,G__10328,G__10329,G__10330,G__10331,G__10332,G__10333,G__10334,G__10335,G__10336,G__10337,G__10338,G__10339,G__10340,G__10341));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10342 = a;
var G__10343 = b;
var G__10344 = c;
var G__10345 = d;
var G__10346 = e;
var G__10347 = f;
var G__10348 = g;
var G__10349 = h;
var G__10350 = i;
var G__10351 = j;
var G__10352 = k;
var G__10353 = l;
var G__10354 = m;
var G__10355 = n;
var G__10356 = o;
var G__10357 = p;
var G__10358 = q;
var G__10359 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__10342,G__10343,G__10344,G__10345,G__10346,G__10347,G__10348,G__10349,G__10350,G__10351,G__10352,G__10353,G__10354,G__10355,G__10356,G__10357,G__10358,G__10359) : target_fn.call(null,G__10342,G__10343,G__10344,G__10345,G__10346,G__10347,G__10348,G__10349,G__10350,G__10351,G__10352,G__10353,G__10354,G__10355,G__10356,G__10357,G__10358,G__10359));
});
var G__10865__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10360 = a;
var G__10361 = b;
var G__10362 = c;
var G__10363 = d;
var G__10364 = e;
var G__10365 = f;
var G__10366 = g;
var G__10367 = h;
var G__10368 = i;
var G__10369 = j;
var G__10370 = k;
var G__10371 = l;
var G__10372 = m;
var G__10373 = n;
var G__10374 = o;
var G__10375 = p;
var G__10376 = q;
var G__10377 = r;
var G__10378 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__10360,G__10361,G__10362,G__10363,G__10364,G__10365,G__10366,G__10367,G__10368,G__10369,G__10370,G__10371,G__10372,G__10373,G__10374,G__10375,G__10376,G__10377,G__10378) : self__.dispatch_fn.call(null,G__10360,G__10361,G__10362,G__10363,G__10364,G__10365,G__10366,G__10367,G__10368,G__10369,G__10370,G__10371,G__10372,G__10373,G__10374,G__10375,G__10376,G__10377,G__10378));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10379 = a;
var G__10380 = b;
var G__10381 = c;
var G__10382 = d;
var G__10383 = e;
var G__10384 = f;
var G__10385 = g;
var G__10386 = h;
var G__10387 = i;
var G__10388 = j;
var G__10389 = k;
var G__10390 = l;
var G__10391 = m;
var G__10392 = n;
var G__10393 = o;
var G__10394 = p;
var G__10395 = q;
var G__10396 = r;
var G__10397 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__10379,G__10380,G__10381,G__10382,G__10383,G__10384,G__10385,G__10386,G__10387,G__10388,G__10389,G__10390,G__10391,G__10392,G__10393,G__10394,G__10395,G__10396,G__10397) : target_fn.call(null,G__10379,G__10380,G__10381,G__10382,G__10383,G__10384,G__10385,G__10386,G__10387,G__10388,G__10389,G__10390,G__10391,G__10392,G__10393,G__10394,G__10395,G__10396,G__10397));
});
var G__10865__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__10398 = a;
var G__10399 = b;
var G__10400 = c;
var G__10401 = d;
var G__10402 = e;
var G__10403 = f;
var G__10404 = g;
var G__10405 = h;
var G__10406 = i;
var G__10407 = j;
var G__10408 = k;
var G__10409 = l;
var G__10410 = m;
var G__10411 = n;
var G__10412 = o;
var G__10413 = p;
var G__10414 = q;
var G__10415 = r;
var G__10416 = s;
var G__10417 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__10398,G__10399,G__10400,G__10401,G__10402,G__10403,G__10404,G__10405,G__10406,G__10407,G__10408,G__10409,G__10410,G__10411,G__10412,G__10413,G__10414,G__10415,G__10416,G__10417) : self__.dispatch_fn.call(null,G__10398,G__10399,G__10400,G__10401,G__10402,G__10403,G__10404,G__10405,G__10406,G__10407,G__10408,G__10409,G__10410,G__10411,G__10412,G__10413,G__10414,G__10415,G__10416,G__10417));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10418 = a;
var G__10419 = b;
var G__10420 = c;
var G__10421 = d;
var G__10422 = e;
var G__10423 = f;
var G__10424 = g;
var G__10425 = h;
var G__10426 = i;
var G__10427 = j;
var G__10428 = k;
var G__10429 = l;
var G__10430 = m;
var G__10431 = n;
var G__10432 = o;
var G__10433 = p;
var G__10434 = q;
var G__10435 = r;
var G__10436 = s;
var G__10437 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__10418,G__10419,G__10420,G__10421,G__10422,G__10423,G__10424,G__10425,G__10426,G__10427,G__10428,G__10429,G__10430,G__10431,G__10432,G__10433,G__10434,G__10435,G__10436,G__10437) : target_fn.call(null,G__10418,G__10419,G__10420,G__10421,G__10422,G__10423,G__10424,G__10425,G__10426,G__10427,G__10428,G__10429,G__10430,G__10431,G__10432,G__10433,G__10434,G__10435,G__10436,G__10437));
});
var G__10865__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__10865 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__10865__1.call(this,self__);
case 2:
return G__10865__2.call(this,self__,a);
case 3:
return G__10865__3.call(this,self__,a,b);
case 4:
return G__10865__4.call(this,self__,a,b,c);
case 5:
return G__10865__5.call(this,self__,a,b,c,d);
case 6:
return G__10865__6.call(this,self__,a,b,c,d,e);
case 7:
return G__10865__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__10865__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__10865__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__10865__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__10865__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__10865__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__10865__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__10865__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__10865__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__10865__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__10865__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__10865__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__10865__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__10865__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__10865__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__10865__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10865.cljs$core$IFn$_invoke$arity$1 = G__10865__1;
G__10865.cljs$core$IFn$_invoke$arity$2 = G__10865__2;
G__10865.cljs$core$IFn$_invoke$arity$3 = G__10865__3;
G__10865.cljs$core$IFn$_invoke$arity$4 = G__10865__4;
G__10865.cljs$core$IFn$_invoke$arity$5 = G__10865__5;
G__10865.cljs$core$IFn$_invoke$arity$6 = G__10865__6;
G__10865.cljs$core$IFn$_invoke$arity$7 = G__10865__7;
G__10865.cljs$core$IFn$_invoke$arity$8 = G__10865__8;
G__10865.cljs$core$IFn$_invoke$arity$9 = G__10865__9;
G__10865.cljs$core$IFn$_invoke$arity$10 = G__10865__10;
G__10865.cljs$core$IFn$_invoke$arity$11 = G__10865__11;
G__10865.cljs$core$IFn$_invoke$arity$12 = G__10865__12;
G__10865.cljs$core$IFn$_invoke$arity$13 = G__10865__13;
G__10865.cljs$core$IFn$_invoke$arity$14 = G__10865__14;
G__10865.cljs$core$IFn$_invoke$arity$15 = G__10865__15;
G__10865.cljs$core$IFn$_invoke$arity$16 = G__10865__16;
G__10865.cljs$core$IFn$_invoke$arity$17 = G__10865__17;
G__10865.cljs$core$IFn$_invoke$arity$18 = G__10865__18;
G__10865.cljs$core$IFn$_invoke$arity$19 = G__10865__19;
G__10865.cljs$core$IFn$_invoke$arity$20 = G__10865__20;
G__10865.cljs$core$IFn$_invoke$arity$21 = G__10865__21;
G__10865.cljs$core$IFn$_invoke$arity$22 = G__10865__22;
return G__10865;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args10017){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10017)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10438 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__10438) : self__.dispatch_fn.call(null,G__10438));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10439 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__10439) : target_fn.call(null,G__10439));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10440 = a;
var G__10441 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__10440,G__10441) : self__.dispatch_fn.call(null,G__10440,G__10441));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10442 = a;
var G__10443 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__10442,G__10443) : target_fn.call(null,G__10442,G__10443));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10444 = a;
var G__10445 = b;
var G__10446 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__10444,G__10445,G__10446) : self__.dispatch_fn.call(null,G__10444,G__10445,G__10446));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10447 = a;
var G__10448 = b;
var G__10449 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__10447,G__10448,G__10449) : target_fn.call(null,G__10447,G__10448,G__10449));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10450 = a;
var G__10451 = b;
var G__10452 = c;
var G__10453 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__10450,G__10451,G__10452,G__10453) : self__.dispatch_fn.call(null,G__10450,G__10451,G__10452,G__10453));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10454 = a;
var G__10455 = b;
var G__10456 = c;
var G__10457 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__10454,G__10455,G__10456,G__10457) : target_fn.call(null,G__10454,G__10455,G__10456,G__10457));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10458 = a;
var G__10459 = b;
var G__10460 = c;
var G__10461 = d;
var G__10462 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__10458,G__10459,G__10460,G__10461,G__10462) : self__.dispatch_fn.call(null,G__10458,G__10459,G__10460,G__10461,G__10462));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10463 = a;
var G__10464 = b;
var G__10465 = c;
var G__10466 = d;
var G__10467 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__10463,G__10464,G__10465,G__10466,G__10467) : target_fn.call(null,G__10463,G__10464,G__10465,G__10466,G__10467));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10468 = a;
var G__10469 = b;
var G__10470 = c;
var G__10471 = d;
var G__10472 = e;
var G__10473 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__10468,G__10469,G__10470,G__10471,G__10472,G__10473) : self__.dispatch_fn.call(null,G__10468,G__10469,G__10470,G__10471,G__10472,G__10473));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10474 = a;
var G__10475 = b;
var G__10476 = c;
var G__10477 = d;
var G__10478 = e;
var G__10479 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__10474,G__10475,G__10476,G__10477,G__10478,G__10479) : target_fn.call(null,G__10474,G__10475,G__10476,G__10477,G__10478,G__10479));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10480 = a;
var G__10481 = b;
var G__10482 = c;
var G__10483 = d;
var G__10484 = e;
var G__10485 = f;
var G__10486 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__10480,G__10481,G__10482,G__10483,G__10484,G__10485,G__10486) : self__.dispatch_fn.call(null,G__10480,G__10481,G__10482,G__10483,G__10484,G__10485,G__10486));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10487 = a;
var G__10488 = b;
var G__10489 = c;
var G__10490 = d;
var G__10491 = e;
var G__10492 = f;
var G__10493 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__10487,G__10488,G__10489,G__10490,G__10491,G__10492,G__10493) : target_fn.call(null,G__10487,G__10488,G__10489,G__10490,G__10491,G__10492,G__10493));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10494 = a;
var G__10495 = b;
var G__10496 = c;
var G__10497 = d;
var G__10498 = e;
var G__10499 = f;
var G__10500 = g;
var G__10501 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__10494,G__10495,G__10496,G__10497,G__10498,G__10499,G__10500,G__10501) : self__.dispatch_fn.call(null,G__10494,G__10495,G__10496,G__10497,G__10498,G__10499,G__10500,G__10501));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10502 = a;
var G__10503 = b;
var G__10504 = c;
var G__10505 = d;
var G__10506 = e;
var G__10507 = f;
var G__10508 = g;
var G__10509 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__10502,G__10503,G__10504,G__10505,G__10506,G__10507,G__10508,G__10509) : target_fn.call(null,G__10502,G__10503,G__10504,G__10505,G__10506,G__10507,G__10508,G__10509));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10510 = a;
var G__10511 = b;
var G__10512 = c;
var G__10513 = d;
var G__10514 = e;
var G__10515 = f;
var G__10516 = g;
var G__10517 = h;
var G__10518 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__10510,G__10511,G__10512,G__10513,G__10514,G__10515,G__10516,G__10517,G__10518) : self__.dispatch_fn.call(null,G__10510,G__10511,G__10512,G__10513,G__10514,G__10515,G__10516,G__10517,G__10518));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10519 = a;
var G__10520 = b;
var G__10521 = c;
var G__10522 = d;
var G__10523 = e;
var G__10524 = f;
var G__10525 = g;
var G__10526 = h;
var G__10527 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__10519,G__10520,G__10521,G__10522,G__10523,G__10524,G__10525,G__10526,G__10527) : target_fn.call(null,G__10519,G__10520,G__10521,G__10522,G__10523,G__10524,G__10525,G__10526,G__10527));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10528 = a;
var G__10529 = b;
var G__10530 = c;
var G__10531 = d;
var G__10532 = e;
var G__10533 = f;
var G__10534 = g;
var G__10535 = h;
var G__10536 = i;
var G__10537 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__10528,G__10529,G__10530,G__10531,G__10532,G__10533,G__10534,G__10535,G__10536,G__10537) : self__.dispatch_fn.call(null,G__10528,G__10529,G__10530,G__10531,G__10532,G__10533,G__10534,G__10535,G__10536,G__10537));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10538 = a;
var G__10539 = b;
var G__10540 = c;
var G__10541 = d;
var G__10542 = e;
var G__10543 = f;
var G__10544 = g;
var G__10545 = h;
var G__10546 = i;
var G__10547 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__10538,G__10539,G__10540,G__10541,G__10542,G__10543,G__10544,G__10545,G__10546,G__10547) : target_fn.call(null,G__10538,G__10539,G__10540,G__10541,G__10542,G__10543,G__10544,G__10545,G__10546,G__10547));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10548 = a;
var G__10549 = b;
var G__10550 = c;
var G__10551 = d;
var G__10552 = e;
var G__10553 = f;
var G__10554 = g;
var G__10555 = h;
var G__10556 = i;
var G__10557 = j;
var G__10558 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__10548,G__10549,G__10550,G__10551,G__10552,G__10553,G__10554,G__10555,G__10556,G__10557,G__10558) : self__.dispatch_fn.call(null,G__10548,G__10549,G__10550,G__10551,G__10552,G__10553,G__10554,G__10555,G__10556,G__10557,G__10558));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10559 = a;
var G__10560 = b;
var G__10561 = c;
var G__10562 = d;
var G__10563 = e;
var G__10564 = f;
var G__10565 = g;
var G__10566 = h;
var G__10567 = i;
var G__10568 = j;
var G__10569 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__10559,G__10560,G__10561,G__10562,G__10563,G__10564,G__10565,G__10566,G__10567,G__10568,G__10569) : target_fn.call(null,G__10559,G__10560,G__10561,G__10562,G__10563,G__10564,G__10565,G__10566,G__10567,G__10568,G__10569));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10570 = a;
var G__10571 = b;
var G__10572 = c;
var G__10573 = d;
var G__10574 = e;
var G__10575 = f;
var G__10576 = g;
var G__10577 = h;
var G__10578 = i;
var G__10579 = j;
var G__10580 = k;
var G__10581 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__10570,G__10571,G__10572,G__10573,G__10574,G__10575,G__10576,G__10577,G__10578,G__10579,G__10580,G__10581) : self__.dispatch_fn.call(null,G__10570,G__10571,G__10572,G__10573,G__10574,G__10575,G__10576,G__10577,G__10578,G__10579,G__10580,G__10581));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10582 = a;
var G__10583 = b;
var G__10584 = c;
var G__10585 = d;
var G__10586 = e;
var G__10587 = f;
var G__10588 = g;
var G__10589 = h;
var G__10590 = i;
var G__10591 = j;
var G__10592 = k;
var G__10593 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__10582,G__10583,G__10584,G__10585,G__10586,G__10587,G__10588,G__10589,G__10590,G__10591,G__10592,G__10593) : target_fn.call(null,G__10582,G__10583,G__10584,G__10585,G__10586,G__10587,G__10588,G__10589,G__10590,G__10591,G__10592,G__10593));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10594 = a;
var G__10595 = b;
var G__10596 = c;
var G__10597 = d;
var G__10598 = e;
var G__10599 = f;
var G__10600 = g;
var G__10601 = h;
var G__10602 = i;
var G__10603 = j;
var G__10604 = k;
var G__10605 = l;
var G__10606 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__10594,G__10595,G__10596,G__10597,G__10598,G__10599,G__10600,G__10601,G__10602,G__10603,G__10604,G__10605,G__10606) : self__.dispatch_fn.call(null,G__10594,G__10595,G__10596,G__10597,G__10598,G__10599,G__10600,G__10601,G__10602,G__10603,G__10604,G__10605,G__10606));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10607 = a;
var G__10608 = b;
var G__10609 = c;
var G__10610 = d;
var G__10611 = e;
var G__10612 = f;
var G__10613 = g;
var G__10614 = h;
var G__10615 = i;
var G__10616 = j;
var G__10617 = k;
var G__10618 = l;
var G__10619 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__10607,G__10608,G__10609,G__10610,G__10611,G__10612,G__10613,G__10614,G__10615,G__10616,G__10617,G__10618,G__10619) : target_fn.call(null,G__10607,G__10608,G__10609,G__10610,G__10611,G__10612,G__10613,G__10614,G__10615,G__10616,G__10617,G__10618,G__10619));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10620 = a;
var G__10621 = b;
var G__10622 = c;
var G__10623 = d;
var G__10624 = e;
var G__10625 = f;
var G__10626 = g;
var G__10627 = h;
var G__10628 = i;
var G__10629 = j;
var G__10630 = k;
var G__10631 = l;
var G__10632 = m;
var G__10633 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__10620,G__10621,G__10622,G__10623,G__10624,G__10625,G__10626,G__10627,G__10628,G__10629,G__10630,G__10631,G__10632,G__10633) : self__.dispatch_fn.call(null,G__10620,G__10621,G__10622,G__10623,G__10624,G__10625,G__10626,G__10627,G__10628,G__10629,G__10630,G__10631,G__10632,G__10633));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10634 = a;
var G__10635 = b;
var G__10636 = c;
var G__10637 = d;
var G__10638 = e;
var G__10639 = f;
var G__10640 = g;
var G__10641 = h;
var G__10642 = i;
var G__10643 = j;
var G__10644 = k;
var G__10645 = l;
var G__10646 = m;
var G__10647 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__10634,G__10635,G__10636,G__10637,G__10638,G__10639,G__10640,G__10641,G__10642,G__10643,G__10644,G__10645,G__10646,G__10647) : target_fn.call(null,G__10634,G__10635,G__10636,G__10637,G__10638,G__10639,G__10640,G__10641,G__10642,G__10643,G__10644,G__10645,G__10646,G__10647));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10648 = a;
var G__10649 = b;
var G__10650 = c;
var G__10651 = d;
var G__10652 = e;
var G__10653 = f;
var G__10654 = g;
var G__10655 = h;
var G__10656 = i;
var G__10657 = j;
var G__10658 = k;
var G__10659 = l;
var G__10660 = m;
var G__10661 = n;
var G__10662 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__10648,G__10649,G__10650,G__10651,G__10652,G__10653,G__10654,G__10655,G__10656,G__10657,G__10658,G__10659,G__10660,G__10661,G__10662) : self__.dispatch_fn.call(null,G__10648,G__10649,G__10650,G__10651,G__10652,G__10653,G__10654,G__10655,G__10656,G__10657,G__10658,G__10659,G__10660,G__10661,G__10662));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10663 = a;
var G__10664 = b;
var G__10665 = c;
var G__10666 = d;
var G__10667 = e;
var G__10668 = f;
var G__10669 = g;
var G__10670 = h;
var G__10671 = i;
var G__10672 = j;
var G__10673 = k;
var G__10674 = l;
var G__10675 = m;
var G__10676 = n;
var G__10677 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__10663,G__10664,G__10665,G__10666,G__10667,G__10668,G__10669,G__10670,G__10671,G__10672,G__10673,G__10674,G__10675,G__10676,G__10677) : target_fn.call(null,G__10663,G__10664,G__10665,G__10666,G__10667,G__10668,G__10669,G__10670,G__10671,G__10672,G__10673,G__10674,G__10675,G__10676,G__10677));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10678 = a;
var G__10679 = b;
var G__10680 = c;
var G__10681 = d;
var G__10682 = e;
var G__10683 = f;
var G__10684 = g;
var G__10685 = h;
var G__10686 = i;
var G__10687 = j;
var G__10688 = k;
var G__10689 = l;
var G__10690 = m;
var G__10691 = n;
var G__10692 = o;
var G__10693 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__10678,G__10679,G__10680,G__10681,G__10682,G__10683,G__10684,G__10685,G__10686,G__10687,G__10688,G__10689,G__10690,G__10691,G__10692,G__10693) : self__.dispatch_fn.call(null,G__10678,G__10679,G__10680,G__10681,G__10682,G__10683,G__10684,G__10685,G__10686,G__10687,G__10688,G__10689,G__10690,G__10691,G__10692,G__10693));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10694 = a;
var G__10695 = b;
var G__10696 = c;
var G__10697 = d;
var G__10698 = e;
var G__10699 = f;
var G__10700 = g;
var G__10701 = h;
var G__10702 = i;
var G__10703 = j;
var G__10704 = k;
var G__10705 = l;
var G__10706 = m;
var G__10707 = n;
var G__10708 = o;
var G__10709 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__10694,G__10695,G__10696,G__10697,G__10698,G__10699,G__10700,G__10701,G__10702,G__10703,G__10704,G__10705,G__10706,G__10707,G__10708,G__10709) : target_fn.call(null,G__10694,G__10695,G__10696,G__10697,G__10698,G__10699,G__10700,G__10701,G__10702,G__10703,G__10704,G__10705,G__10706,G__10707,G__10708,G__10709));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10710 = a;
var G__10711 = b;
var G__10712 = c;
var G__10713 = d;
var G__10714 = e;
var G__10715 = f;
var G__10716 = g;
var G__10717 = h;
var G__10718 = i;
var G__10719 = j;
var G__10720 = k;
var G__10721 = l;
var G__10722 = m;
var G__10723 = n;
var G__10724 = o;
var G__10725 = p;
var G__10726 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__10710,G__10711,G__10712,G__10713,G__10714,G__10715,G__10716,G__10717,G__10718,G__10719,G__10720,G__10721,G__10722,G__10723,G__10724,G__10725,G__10726) : self__.dispatch_fn.call(null,G__10710,G__10711,G__10712,G__10713,G__10714,G__10715,G__10716,G__10717,G__10718,G__10719,G__10720,G__10721,G__10722,G__10723,G__10724,G__10725,G__10726));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10727 = a;
var G__10728 = b;
var G__10729 = c;
var G__10730 = d;
var G__10731 = e;
var G__10732 = f;
var G__10733 = g;
var G__10734 = h;
var G__10735 = i;
var G__10736 = j;
var G__10737 = k;
var G__10738 = l;
var G__10739 = m;
var G__10740 = n;
var G__10741 = o;
var G__10742 = p;
var G__10743 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__10727,G__10728,G__10729,G__10730,G__10731,G__10732,G__10733,G__10734,G__10735,G__10736,G__10737,G__10738,G__10739,G__10740,G__10741,G__10742,G__10743) : target_fn.call(null,G__10727,G__10728,G__10729,G__10730,G__10731,G__10732,G__10733,G__10734,G__10735,G__10736,G__10737,G__10738,G__10739,G__10740,G__10741,G__10742,G__10743));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10744 = a;
var G__10745 = b;
var G__10746 = c;
var G__10747 = d;
var G__10748 = e;
var G__10749 = f;
var G__10750 = g;
var G__10751 = h;
var G__10752 = i;
var G__10753 = j;
var G__10754 = k;
var G__10755 = l;
var G__10756 = m;
var G__10757 = n;
var G__10758 = o;
var G__10759 = p;
var G__10760 = q;
var G__10761 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__10744,G__10745,G__10746,G__10747,G__10748,G__10749,G__10750,G__10751,G__10752,G__10753,G__10754,G__10755,G__10756,G__10757,G__10758,G__10759,G__10760,G__10761) : self__.dispatch_fn.call(null,G__10744,G__10745,G__10746,G__10747,G__10748,G__10749,G__10750,G__10751,G__10752,G__10753,G__10754,G__10755,G__10756,G__10757,G__10758,G__10759,G__10760,G__10761));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10762 = a;
var G__10763 = b;
var G__10764 = c;
var G__10765 = d;
var G__10766 = e;
var G__10767 = f;
var G__10768 = g;
var G__10769 = h;
var G__10770 = i;
var G__10771 = j;
var G__10772 = k;
var G__10773 = l;
var G__10774 = m;
var G__10775 = n;
var G__10776 = o;
var G__10777 = p;
var G__10778 = q;
var G__10779 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__10762,G__10763,G__10764,G__10765,G__10766,G__10767,G__10768,G__10769,G__10770,G__10771,G__10772,G__10773,G__10774,G__10775,G__10776,G__10777,G__10778,G__10779) : target_fn.call(null,G__10762,G__10763,G__10764,G__10765,G__10766,G__10767,G__10768,G__10769,G__10770,G__10771,G__10772,G__10773,G__10774,G__10775,G__10776,G__10777,G__10778,G__10779));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10780 = a;
var G__10781 = b;
var G__10782 = c;
var G__10783 = d;
var G__10784 = e;
var G__10785 = f;
var G__10786 = g;
var G__10787 = h;
var G__10788 = i;
var G__10789 = j;
var G__10790 = k;
var G__10791 = l;
var G__10792 = m;
var G__10793 = n;
var G__10794 = o;
var G__10795 = p;
var G__10796 = q;
var G__10797 = r;
var G__10798 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__10780,G__10781,G__10782,G__10783,G__10784,G__10785,G__10786,G__10787,G__10788,G__10789,G__10790,G__10791,G__10792,G__10793,G__10794,G__10795,G__10796,G__10797,G__10798) : self__.dispatch_fn.call(null,G__10780,G__10781,G__10782,G__10783,G__10784,G__10785,G__10786,G__10787,G__10788,G__10789,G__10790,G__10791,G__10792,G__10793,G__10794,G__10795,G__10796,G__10797,G__10798));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10799 = a;
var G__10800 = b;
var G__10801 = c;
var G__10802 = d;
var G__10803 = e;
var G__10804 = f;
var G__10805 = g;
var G__10806 = h;
var G__10807 = i;
var G__10808 = j;
var G__10809 = k;
var G__10810 = l;
var G__10811 = m;
var G__10812 = n;
var G__10813 = o;
var G__10814 = p;
var G__10815 = q;
var G__10816 = r;
var G__10817 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__10799,G__10800,G__10801,G__10802,G__10803,G__10804,G__10805,G__10806,G__10807,G__10808,G__10809,G__10810,G__10811,G__10812,G__10813,G__10814,G__10815,G__10816,G__10817) : target_fn.call(null,G__10799,G__10800,G__10801,G__10802,G__10803,G__10804,G__10805,G__10806,G__10807,G__10808,G__10809,G__10810,G__10811,G__10812,G__10813,G__10814,G__10815,G__10816,G__10817));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__10818 = a;
var G__10819 = b;
var G__10820 = c;
var G__10821 = d;
var G__10822 = e;
var G__10823 = f;
var G__10824 = g;
var G__10825 = h;
var G__10826 = i;
var G__10827 = j;
var G__10828 = k;
var G__10829 = l;
var G__10830 = m;
var G__10831 = n;
var G__10832 = o;
var G__10833 = p;
var G__10834 = q;
var G__10835 = r;
var G__10836 = s;
var G__10837 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__10818,G__10819,G__10820,G__10821,G__10822,G__10823,G__10824,G__10825,G__10826,G__10827,G__10828,G__10829,G__10830,G__10831,G__10832,G__10833,G__10834,G__10835,G__10836,G__10837) : self__.dispatch_fn.call(null,G__10818,G__10819,G__10820,G__10821,G__10822,G__10823,G__10824,G__10825,G__10826,G__10827,G__10828,G__10829,G__10830,G__10831,G__10832,G__10833,G__10834,G__10835,G__10836,G__10837));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__10838 = a;
var G__10839 = b;
var G__10840 = c;
var G__10841 = d;
var G__10842 = e;
var G__10843 = f;
var G__10844 = g;
var G__10845 = h;
var G__10846 = i;
var G__10847 = j;
var G__10848 = k;
var G__10849 = l;
var G__10850 = m;
var G__10851 = n;
var G__10852 = o;
var G__10853 = p;
var G__10854 = q;
var G__10855 = r;
var G__10856 = s;
var G__10857 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__10838,G__10839,G__10840,G__10841,G__10842,G__10843,G__10844,G__10845,G__10846,G__10847,G__10848,G__10849,G__10850,G__10851,G__10852,G__10853,G__10854,G__10855,G__10856,G__10857) : target_fn.call(null,G__10838,G__10839,G__10840,G__10841,G__10842,G__10843,G__10844,G__10845,G__10846,G__10847,G__10848,G__10849,G__10850,G__10851,G__10852,G__10853,G__10854,G__10855,G__10856,G__10857));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__10858 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10858) : cljs.core.deref.call(null,G__10858));
})(),(function (){var G__10859 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10859) : cljs.core.deref.call(null,G__10859));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4423__auto__ = (function (){var G__10860 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10860) : cljs.core.deref.call(null,G__10860));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4423__auto__)){
var target_fn = temp__4423__auto__;
return target_fn;
} else {
var temp__4423__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4423__auto____$1)){
var target_fn = temp__4423__auto____$1;
return target_fn;
} else {
return (function (){var G__10861 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10861) : cljs.core.deref.call(null,G__10861));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__10862 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10862) : cljs.core.deref.call(null,G__10862));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__10863 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10863) : cljs.core.deref.call(null,G__10863));
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__10864 = this$__$1;
return goog.getUid(G__10864);
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
this.cljs$lang$protocol_mask$partition1$ = 0;
})
cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__10866 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__10866);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__3714__auto__,writer__3715__auto__,opt__3716__auto__){
return cljs.core._write(writer__3715__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__10871 = msg;
return Error(G__10871);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__10876 = x;
var G__10877 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__10876,G__10877) : pred.call(null,G__10876,G__10877));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__10878 = y;
var G__10879 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__10878,G__10879) : pred.call(null,G__10878,G__10879));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map